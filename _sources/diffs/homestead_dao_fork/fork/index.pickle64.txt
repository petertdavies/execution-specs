gASVAQABAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UKGgAjAZ0YXJnZXSUk5QpgZR9lChoBWgGaAddlIwKYXR0cmlidXRlc5R9lCiMA2lkc5RdlIwebW9kdWxlLWV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrlGGMB2NsYXNzZXOUXZSMBW5hbWVzlF2UjAhkdXBuYW1lc5RdlIwIYmFja3JlZnOUXZSMBWlzbW9klIh1jAd0YWduYW1llGgJjAZzb3VyY2WUjF8vaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdJSMBGxpbmWUSwGMBnBhcmVudJRoA4wJX2RvY3VtZW50lGgDdWKMD3NwaGlueC5hZGRub2Rlc5SMBWluZGV4lJOUKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAdlbnRyaWVzlF2UKIwEcGFpcpSMH21vZHVsZTsgZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmuUaBJoBk50lGF1aBxoI2gdaB5oH0sCaCBoA2ghaAN1YmgKKYGUfZQoaAWMDS4uIF9kYW8tZm9yazqUaAddlGgOfZQoaBBdlGgTXZSMDGNoYW5nZS1hZGRlZJRhaBVdlGgXXZRoGV2UjAVyZWZpZJSMCGRhby1mb3JrlHVoHGgJaB2MXi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vZGFvX2ZvcmsvZm9yay9pbmRleC5yc3SUaB9LA2ggaANoIWgDdWJoAIwHc2VjdGlvbpSTlCmBlH2UKGgFaAZoB12UKGgAjAV0aXRsZZSTlCmBlH2UKGgFjBZFdGhlcmV1bSBTcGVjaWZpY2F0aW9ulGgHXZRoAIwEVGV4dJSTlIwWRXRoZXJldW0gU3BlY2lmaWNhdGlvbpSFlIGUfZQoaAVoBmggaEhoIWgDaB2MXC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaS8gPT4gZG9jL2RpZmZzlGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaEZoHWgeaB9LBGggaENoIWgDdWJoAIwFdG9waWOUk5QpgZR9lChoBWgGaAddlChoRymBlH2UKGgFjBFUYWJsZSBvZiBDb250ZW50c5RoB12UaE2MEVRhYmxlIG9mIENvbnRlbnRzlIWUgZR9lChoBWgGaCBoXmghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoRmgdaB5oH0sIaCBoW3ViaACMC2J1bGxldF9saXN0lJOUKYGUfZQoaAVoBmgHXZQoaACMCWxpc3RfaXRlbZSTlCmBlH2UKGgFaAZoB12UaACMCXBhcmFncmFwaJSTlCmBlH2UKGgFaAZoB12UaACMCXJlZmVyZW5jZZSTlCmBlH2UKGgFaAZoB12UaE2MDEludHJvZHVjdGlvbpSFlIGUfZQoaAVoBmggaH1oIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMA2lkMZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjAxpbnRyb2R1Y3Rpb26UdWgcaHtoHU5oH05oIGh4dWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBoc3ViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggaG51YmhyKYGUfZQoaAVoBmgHXZQoaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwPTW9kdWxlIENvbnRlbnRzlIWUgZR9lChoBWgGaCBon2ghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwDaWQylGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMD21vZHVsZS1jb250ZW50c5R1aBxoe2gdTmgfTmggaJx1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGiZdWJobSmBlH2UKGgFaAZoB12UKGhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjAdDbGFzc2VzlIWUgZR9lChoBWgGaCBovmghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwDaWQzlGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMB2NsYXNzZXOUdWgcaHtoHU5oH05oIGi7dWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBouHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggaLV1YmhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjAlGdW5jdGlvbnOUhZSBlH2UKGgFaAZoIGjgaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UjANpZDSUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwJZnVuY3Rpb25zlHVoHGh7aB1OaB9OaCBo3XViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggaNp1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGi1dWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwKQXR0cmlidXRlc5SFlIGUfZQoaAVoBmggagIBAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMA2lkNZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjAphdHRyaWJ1dGVzlHVoHGh7aB1OaB9OaCBo/3ViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggaPx1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGi1dWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhsaB1OaB9OaCBomXViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggaG51YmhyKYGUfZQoaAVoBmgHXZQoaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwOTW9kdWxlIERldGFpbHOUhZSBlH2UKGgFaAZoIGowAQAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UjANpZDaUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwObW9kdWxlLWRldGFpbHOUdWgcaHtoHU5oH05oIGotAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqKgEAAHViaG0pgZR9lChoBWgGaAddlChocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwMQkxPQ0tfUkVXQVJElIWUgZR9lChoBWgGaCBqTwEAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwDaWQ3lGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMDGJsb2NrLXJld2FyZJR1aBxoe2gdTmgfTmggakwBAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGpJAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MG0dBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUpSFlIGUfZQoaAVoBmgganEBAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMA2lkOJRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBtnYXMtbGltaXQtYWRqdXN0bWVudC1mYWN0b3KUdWgcaHtoHU5oH05oIGpuAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqawEAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggakYBAAB1YmhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjBFHQVNfTElNSVRfTUlOSU1VTZSFlIGUfZQoaAVoBmggapMBAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMA2lkOZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBFnYXMtbGltaXQtbWluaW11bZR1aBxoe2gdTmgfTmggapABAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGqNAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MEk1JTklNVU1fRElGRklDVUxUWZSFlIGUfZQoaAVoBmggarUBAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMTCUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwSbWluaW11bS1kaWZmaWN1bHR5lHVoHGh7aB1OaB9OaCBqsgEAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggaq8BAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwPTUFYX09NTUVSX0RFUFRIlIWUgZR9lChoBWgGaCBq1wEAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQxMZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjA9tYXgtb21tZXItZGVwdGiUdWgcaHtoHU5oH05oIGrUAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBq0QEAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggakYBAAB1YmhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjApCbG9ja0NoYWlulIWUgZR9lChoBWgGaCBq+QEAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQxMpRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjApibG9ja2NoYWlulHVoHGh7aB1OaB9OaCBq9gEAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggavMBAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwKYXBwbHlfZm9ya5SFlIGUfZQoaAVoBmggahsCAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMTOUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwKYXBwbHktZm9ya5R1aBxoe2gdTmgfTmggahgCAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGoVAgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MGWdldF9sYXN0XzI1Nl9ibG9ja19oYXNoZXOUhZSBlH2UKGgFaAZoIGo9AgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UjARpZDE0lGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMGWdldC1sYXN0LTI1Ni1ibG9jay1oYXNoZXOUdWgcaHtoHU5oH05oIGo6AgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqNwIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggakYBAAB1YmhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjBBzdGF0ZV90cmFuc2l0aW9ulIWUgZR9lChoBWgGaCBqXwIAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQxNZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBBzdGF0ZS10cmFuc2l0aW9ulHVoHGh7aB1OaB9OaCBqXAIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggalkCAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwPdmFsaWRhdGVfaGVhZGVylIWUgZR9lChoBWgGaCBqgQIAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQxNpRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjA92YWxpZGF0ZS1oZWFkZXKUdWgcaHtoHU5oH05oIGp+AgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqewIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggakYBAAB1YmhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjBxnZW5lcmF0ZV9oZWFkZXJfaGFzaF9mb3JfcG93lIWUgZR9lChoBWgGaCBqowIAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQxN5RhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBxnZW5lcmF0ZS1oZWFkZXItaGFzaC1mb3ItcG93lHVoHGh7aB1OaB9OaCBqoAIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggap0CAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwWdmFsaWRhdGVfcHJvb2Zfb2Zfd29ya5SFlIGUfZQoaAVoBmggasUCAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMTiUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwWdmFsaWRhdGUtcHJvb2Ytb2Ytd29ya5R1aBxoe2gdTmgfTmggasICAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGq/AgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MEWNoZWNrX3RyYW5zYWN0aW9ulIWUgZR9lChoBWgGaCBq5wIAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQxOZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBFjaGVjay10cmFuc2FjdGlvbpR1aBxoe2gdTmgfTmggauQCAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGrhAgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MDG1ha2VfcmVjZWlwdJSFlIGUfZQoaAVoBmggagkDAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMjCUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwMbWFrZS1yZWNlaXB0lHVoHGh7aB1OaB9OaCBqBgMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggagMDAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwKYXBwbHlfYm9keZSFlIGUfZQoaAVoBmggaisDAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMjGUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwKYXBwbHktYm9keZR1aBxoe2gdTmgfTmggaigDAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGolAwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MD3ZhbGlkYXRlX29tbWVyc5SFlIGUfZQoaAVoBmggak0DAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMjKUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwPdmFsaWRhdGUtb21tZXJzlHVoHGh7aB1OaB9OaCBqSgMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggakcDAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwLcGF5X3Jld2FyZHOUhZSBlH2UKGgFaAZoIGpvAwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UjARpZDIzlGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMC3BheS1yZXdhcmRzlHVoHGh7aB1OaB9OaCBqbAMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggamkDAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwTcHJvY2Vzc190cmFuc2FjdGlvbpSFlIGUfZQoaAVoBmggapEDAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMjSUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwTcHJvY2Vzcy10cmFuc2FjdGlvbpR1aBxoe2gdTmgfTmggao4DAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGqLAwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MFHZhbGlkYXRlX3RyYW5zYWN0aW9ulIWUgZR9lChoBWgGaCBqswMAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQyNZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBR2YWxpZGF0ZS10cmFuc2FjdGlvbpR1aBxoe2gdTmgfTmggarADAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGqtAwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBqRgEAAHViaHIpgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRofCmBlH2UKGgFaAZoB12UaE2MGGNhbGN1bGF0ZV9pbnRyaW5zaWNfY29zdJSFlIGUfZQoaAVoBmggatUDAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMjaUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwYY2FsY3VsYXRlLWludHJpbnNpYy1jb3N0lHVoHGh7aB1OaB9OaCBq0gMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggas8DAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwOcmVjb3Zlcl9zZW5kZXKUhZSBlH2UKGgFaAZoIGr3AwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UjARpZDI3lGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMDnJlY292ZXItc2VuZGVylHVoHGh7aB1OaB9OaCBq9AMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggavEDAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwMc2lnbmluZ19oYXNolIWUgZR9lChoBWgGaCBqGQQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQyOJRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjAxzaWduaW5nLWhhc2iUdWgcaHtoHU5oH05oIGoWBAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqEwQAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggakYBAAB1YmhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjBNjb21wdXRlX2hlYWRlcl9oYXNolIWUgZR9lChoBWgGaCBqOwQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQyOZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBNjb21wdXRlLWhlYWRlci1oYXNolHVoHGh7aB1OaB9OaCBqOAQAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggajUEAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHFoHU5oH05oIGpGAQAAdWJocimBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGh8KYGUfZQoaAVoBmgHXZRoTYwPY2hlY2tfZ2FzX2xpbWl0lIWUgZR9lChoBWgGaCBqXQQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlIwEaWQzMJRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjA9jaGVjay1nYXMtbGltaXSUdWgcaHtoHU5oH05oIGpaBAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqVwQAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggakYBAAB1YmhyKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaHwpgZR9lChoBWgGaAddlGhNjBpjYWxjdWxhdGVfYmxvY2tfZGlmZmljdWx0eZSFlIGUfZQoaAVoBmggan8EAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZSMBGlkMzGUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwaY2FsY3VsYXRlLWJsb2NrLWRpZmZpY3VsdHmUdWgcaHtoHU5oH05oIGp8BAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqeQQAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxocWgdTmgfTmggakYBAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGxoHU5oH05oIGoqAQAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhxaB1OaB9OaCBobnViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxobGgdTmgfTmggaFt1YmVoDn2UKGgQXZSMEXRhYmxlLW9mLWNvbnRlbnRzlGFoE12UKIwIY29udGVudHOUjAVsb2NhbJRlaBVdlIwRdGFibGUgb2YgY29udGVudHOUYWgXXZRoGV2UdWgcaFloHWgeaB9LCGggaENoIWgDdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMDEludHJvZHVjdGlvbpRoB12UaE2MDEludHJvZHVjdGlvbpSFlIGUfZQoaAVoBmggaroEAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaEZoHWgeaB9LC2ggarcEAAB1Ymh3KYGUfZQoaAWMK0VudHJ5IHBvaW50IGZvciB0aGUgRXRoZXJldW0gc3BlY2lmaWNhdGlvbi6UaAddlGhNjCtFbnRyeSBwb2ludCBmb3IgdGhlIEV0aGVyZXVtIHNwZWNpZmljYXRpb24ulIWUgZR9lChoBWgGaCBqyAQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdaB5oH0sNaCBqtwQAAHViaACMB2NvbW1lbnSUk5QpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZSMCHByZXNlcnZllHVoHGrWBAAAaB1OaB9OaCBqtwQAAHViZWgOfZQoaBBdlGiMYWgTXZRoFV2UjAxpbnRyb2R1Y3Rpb26UYWgXXZRoGV2UdWgcaEFoHWgeaB9LC2ggaENoIWgDdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMD01vZHVsZSBDb250ZW50c5RoB12UaE2MD01vZHVsZSBDb250ZW50c5SFlIGUfZQoaAVoBmggau0EAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaEZoHWgeaB9LE2ggauoEAAB1YmhCKYGUfZQoaAVoBmgHXZQoaEcpgZR9lChoBYwHQ2xhc3Nlc5RoB12UaE2MB0NsYXNzZXOUhZSBlH2UKGgFaAZoIGr+BAAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhGaB1oHmgfSxZoIGr7BAAAdWJoIowQdGFidWxhcl9jb2xfc3BlY5STlCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwEc3BlY5SMEFxYezF9ezJ9XFh7MX17Mn2UdWgcagwFAABoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6Mjk6PGF1dG9zdW1tYXJ5PpRoH05oIGr7BAAAdWKMFnNwaGlueC5leHQuYXV0b3N1bW1hcnmUjBFhdXRvc3VtbWFyeV90YWJsZZSTlCmBlH2UKGgFjD0KCgoKQmxvY2tDaGFpbgoKSGlzdG9yeSBhbmQgY3VycmVudCBzdGF0ZSBvZiB0aGUgYmxvY2sgY2hhaW4ulGgHXZRoAIwFdGFibGWUk5QpgZR9lChoBWgGaAddlGgAjAZ0Z3JvdXCUk5QpgZR9lChoBWgGaAddlChoAIwHY29sc3BlY5STlCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIY29sd2lkdGiUSwp1aBxqKwUAAGgdTmgfTmggaigFAAB1YmosBQAAKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhjb2x3aWR0aJRLWnVoHGorBQAAaB1OaB9OaCBqKAUAAHViaACMBXRib2R5lJOUKYGUfZQoaAVoBmgHXZRoAIwDcm93lJOUKYGUfZQoaAVoBmgHXZQoaACMBWVudHJ5lJOUKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjDc6b2JqOmBCbG9ja0NoYWluIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5CbG9ja0NoYWluPmBclGgHXZQoaHwpgZR9lChoBWgGaAddlGgAjAdsaXRlcmFslJOUKYGUfZQoaAWMNjpvYmo6YEJsb2NrQ2hhaW4gPGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkJsb2NrQ2hhaW4+YJRoB12UaE2MCkJsb2NrQ2hhaW6UhZSBlH2UKGgFaAZoIGpZBQAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlCiMBHhyZWaUjAJweZSMBnB5LW9iapRlaBVdlGgXXZRoGV2UdWgcalcFAABoHU5oH05oIGpUBQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIaW50ZXJuYWyUiIwFcmVmaWSUjCJldGhlcmV1bS5ob21lc3RlYWQuZm9yay5CbG9ja0NoYWlulIwIcmVmdGl0bGWUjCJldGhlcmV1bS5ob21lc3RlYWQuZm9yay5CbG9ja0NoYWlulHVoHGh7aB1OaB9OaCBqUAUAAHViaE1oBoWUgZR9lChoBWgGaCBqUAUAAGghaANoHWhSaB9LAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDoyOTo8YXV0b3N1bW1hcnk+lGgfSwFoIGpNBQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBqSAUAAHViakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMLUhpc3RvcnkgYW5kIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGJsb2NrIGNoYWluLpRoB12UaE2MLUhpc3RvcnkgYW5kIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGJsb2NrIGNoYWluLpSFlIGUfZQoaAVoBmggaogFAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHWoZBQAAaB9LAWggaoUFAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGpIBQAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpGBQAAaB1OaB9OaCBqQwUAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQQUAAGgdTmgfTmggaigFAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjARjb2xzlEsCdWgcaiYFAABoHU5oH05oIGojBQAAdWJhaA59lChoEF2UaBNdlIwJbG9uZ3RhYmxllGFoFV2UaBddlGgZXZR1aBxqIQUAAGgdTmgfTmggah0FAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqGwUAAGgdahkFAABoH05oIGr7BAAAdWJlaA59lChoEF2UaM1haBNdlGgVXZSMB2NsYXNzZXOUYWgXXZRoGV2UdWgcaEFoHWgeaB9LFmggauoEAAB1YmhCKYGUfZQoaAVoBmgHXZQoaEcpgZR9lChoBYwJRnVuY3Rpb25zlGgHXZRoTYwJRnVuY3Rpb25zlIWUgZR9lChoBWgGaCBqxwUAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoRmgdaB5oH0sfaCBqxAUAAHViag0FAAApgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBHNwZWOUahgFAAB1aBxqDAUAAGgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgfTmggasQFAAB1YmocBQAAKYGUfZQoaAVYNwUAAAoKCgphcHBseV9mb3JrCgpUcmFuc2Zvcm1zIHRoZSBzdGF0ZSBmcm9tIHRoZSBwcmV2aW91cyBoYXJkIGZvcmsgKG9sZCkgaW50byB0aGUgYmxvY2sKCmdldF9sYXN0XzI1Nl9ibG9ja19oYXNoZXMKCk9idGFpbiB0aGUgbGlzdCBvZiBoYXNoZXMgb2YgdGhlIHByZXZpb3VzIDI1NiBibG9ja3MgaW4gb3JkZXIgb2YKCnN0YXRlX3RyYW5zaXRpb24KCkF0dGVtcHRzIHRvIGFwcGx5IGEgYmxvY2sgdG8gYW4gZXhpc3RpbmcgYmxvY2sgY2hhaW4uCgp2YWxpZGF0ZV9oZWFkZXIKClZlcmlmaWVzIGEgYmxvY2sgaGVhZGVyLgoKZ2VuZXJhdGVfaGVhZGVyX2hhc2hfZm9yX3BvdwoKR2VuZXJhdGUgcmxwIGhhc2ggb2YgdGhlIGhlYWRlciB3aGljaCBpcyB0byBiZSB1c2VkIGZvciBQcm9vZi1vZi1Xb3JrCgp2YWxpZGF0ZV9wcm9vZl9vZl93b3JrCgpWYWxpZGF0ZXMgdGhlIFByb29mIG9mIFdvcmsgY29uc3RyYWludHMuCgpjaGVja190cmFuc2FjdGlvbgoKQ2hlY2sgaWYgdGhlIHRyYW5zYWN0aW9uIGlzIGluY2x1ZGFibGUgaW4gdGhlIGJsb2NrLgoKbWFrZV9yZWNlaXB0CgpNYWtlIHRoZSByZWNlaXB0IGZvciBhIHRyYW5zYWN0aW9uIHRoYXQgd2FzIGV4ZWN1dGVkLgoKYXBwbHlfYm9keQoKRXhlY3V0ZXMgYSBibG9jay4KCnZhbGlkYXRlX29tbWVycwoKVmFsaWRhdGVzIHRoZSBvbW1lcnMgbWVudGlvbmVkIGluIHRoZSBibG9jay4KCnBheV9yZXdhcmRzCgpQYXkgcmV3YXJkcyB0byB0aGUgYmxvY2sgbWluZXIgYXMgd2VsbCBhcyB0aGUgb21tZXJzIG1pbmVycy4KCnByb2Nlc3NfdHJhbnNhY3Rpb24KCkV4ZWN1dGUgYSB0cmFuc2FjdGlvbiBhZ2FpbnN0IHRoZSBwcm92aWRlZCBlbnZpcm9ubWVudC4KCnZhbGlkYXRlX3RyYW5zYWN0aW9uCgpWZXJpZmllcyBhIHRyYW5zYWN0aW9uLgoKY2FsY3VsYXRlX2ludHJpbnNpY19jb3N0CgpDYWxjdWxhdGVzIHRoZSBnYXMgdGhhdCBpcyBjaGFyZ2VkIGJlZm9yZSBleGVjdXRpb24gaXMgc3RhcnRlZC4KCnJlY292ZXJfc2VuZGVyCgpFeHRyYWN0cyB0aGUgc2VuZGVyIGFkZHJlc3MgZnJvbSBhIHRyYW5zYWN0aW9uLgoKc2lnbmluZ19oYXNoCgpDb21wdXRlIHRoZSBoYXNoIG9mIGEgdHJhbnNhY3Rpb24gdXNlZCBpbiB0aGUgc2lnbmF0dXJlLgoKY29tcHV0ZV9oZWFkZXJfaGFzaAoKQ29tcHV0ZXMgdGhlIGhhc2ggb2YgYSBibG9jayBoZWFkZXIuCgpjaGVja19nYXNfbGltaXQKClZhbGlkYXRlcyB0aGUgZ2FzIGxpbWl0IGZvciBhIGJsb2NrLgoKY2FsY3VsYXRlX2Jsb2NrX2RpZmZpY3VsdHkKCkNvbXB1dGVzIGRpZmZpY3VsdHkgb2YgYSBibG9jayB1c2luZyBpdHMgaGVhZGVyIGFuZCBwYXJlbnQgaGVhZGVyLpRoB12UaiIFAAApgZR9lChoBWgGaAddlGonBQAAKYGU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LmhvbWVzdGVhZC5mb3JrLnN0YXRlX3RyYW5zaXRpb24+YJRoB12UaHwpgZR9lChoBWgGaAddlGpYBQAAKYGUfZQoaAVqwQYAAGgHXZRoTYwQc3RhdGVfdHJhbnNpdGlvbpSFlIGUfZQoaAVoBmggasYGAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKGpkBQAAjAJweZSMBnB5LW9iapRlaBVdlGgXXZRoGV2UdWgcalcFAABoHU5oH05oIGrDBgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIaW50ZXJuYWyUiIwFcmVmaWSUjChldGhlcmV1bS5ob21lc3RlYWQuZm9yay5zdGF0ZV90cmFuc2l0aW9ulIwIcmVmdGl0bGWUjChldGhlcmV1bS5ob21lc3RlYWQuZm9yay5zdGF0ZV90cmFuc2l0aW9ulHVoHGh7aB1OaB9OaCBqvwYAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgfSwFoIGq8BgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBquQYAAHViakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMNUF0dGVtcHRzIHRvIGFwcGx5IGEgYmxvY2sgdG8gYW4gZXhpc3RpbmcgYmxvY2sgY2hhaW4ulGgHXZRoTYw1QXR0ZW1wdHMgdG8gYXBwbHkgYSBibG9jayB0byBhbiBleGlzdGluZyBibG9jayBjaGFpbi6UhZSBlH2UKGgFaAZoIGrwBgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB2McC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaB9LAWggau0GAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGq5BgAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpGBQAAaB1OaB9OaCBq/gUAAHViakcFAAApgZR9lChoBWgGaAddlChqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYxAOm9iajpgdmFsaWRhdGVfaGVhZGVyIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay52YWxpZGF0ZV9oZWFkZXI+YJRoB12UaHwpgZR9lChoBWgGaAddlGpYBQAAKYGUfZQoaAVqEwcAAGgHXZRoTYwPdmFsaWRhdGVfaGVhZGVylIWUgZR9lChoBWgGaCBqGAcAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoamQFAACMAnB5lIwGcHktb2JqlGVoFV2UaBddlGgZXZR1aBxqVwUAAGgdTmgfTmggahUHAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMJ2V0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLnZhbGlkYXRlX2hlYWRlcpSMCHJlZnRpdGxllIwnZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsudmFsaWRhdGVfaGVhZGVylHVoHGh7aB1OaB9OaCBqEQcAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgfSwFoIGoOBwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBqCwcAAHViakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMGFZlcmlmaWVzIGEgYmxvY2sgaGVhZGVyLpRoB12UaE2MGFZlcmlmaWVzIGEgYmxvY2sgaGVhZGVyLpSFlIGUfZQoaAVoBmggakIHAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqPwcAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggagsHAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYFAABoHU5oH05oIGr+BQAAdWJqRwUAACmBlH2UKGgFaAZoB12UKGpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjFo6b2JqOmBnZW5lcmF0ZV9oZWFkZXJfaGFzaF9mb3JfcG93IDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5nZW5lcmF0ZV9oZWFkZXJfaGFzaF9mb3JfcG93PmCUaAddlGh8KYGUfZQoaAVoBmgHXZRqWAUAACmBlH2UKGgFamUHAABoB12UaE2MHGdlbmVyYXRlX2hlYWRlcl9oYXNoX2Zvcl9wb3eUhZSBlH2UKGgFaAZoIGpqBwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqZAUAAIwCcHmUjAZweS1vYmqUZWgVXZRoF12UaBldlHVoHGpXBQAAaB1OaB9OaCBqZwcAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGludGVybmFslIiMBXJlZmlklIw0ZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuZ2VuZXJhdGVfaGVhZGVyX2hhc2hfZm9yX3Bvd5SMCHJlZnRpdGxllIw0ZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuZ2VuZXJhdGVfaGVhZGVyX2hhc2hfZm9yX3Bvd5R1aBxoe2gdTmgfTmggamMHAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoH0sB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fZQoaAWMSjpvYmo6YHZhbGlkYXRlX3RyYW5zYWN0aW9uIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay52YWxpZGF0ZV90cmFuc2FjdGlvbj5glGgHXZRofCmBlH2UKGgFaAZoB12UalgFAAApgZR9lChoBWr1CQAAaAddlGhNjBR2YWxpZGF0ZV90cmFuc2FjdGlvbpSFlIGUfZQoaAVoBmggavoJAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKGpkBQAAjAJweZSMBnB5LW9iapRlaBVdlGgXXZRoGV2UdWgcalcFAABoHU5oH05oIGr3CQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIaW50ZXJuYWyUiIwFcmVmaWSUjCxldGhlcmV1bS5ob21lc3RlYWQuZm9yay52YWxpZGF0ZV90cmFuc2FjdGlvbpSMCHJlZnRpdGxllIwsZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsudmFsaWRhdGVfdHJhbnNhY3Rpb26UdWgcaHtoHU5oH05oIGrzCQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB2McC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaB9LAWggavAJAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGrtCQAAdWJqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYwXVmVyaWZpZXMgYSB0cmFuc2FjdGlvbi6UaAddlGhNjBdWZXJpZmllcyBhIHRyYW5zYWN0aW9uLpSFlIGUfZQoaAVoBmggaiQKAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqIQoAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggau0JAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYFAABoHU5oH05oIGr+BQAAdWJqRwUAACmBlH2UKGgFaAZoB12UKGpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjFI6b2JqOmBjYWxjdWxhdGVfaW50cmluc2ljX2Nvc3QgPGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLmNhbGN1bGF0ZV9pbnRyaW5zaWNfY29zdD5glGgHXZRofCmBlH2UKGgFaAZoB12UalgFAAApgZR9lChoBWpHCgAAaAddlGhNjBhjYWxjdWxhdGVfaW50cmluc2ljX2Nvc3SUhZSBlH2UKGgFaAZoIGpMCgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqZAUAAIwCcHmUjAZweS1vYmqUZWgVXZRoF12UaBldlHVoHGpXBQAAaB1OaB9OaCBqSQoAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGludGVybmFslIiMBXJlZmlklIwwZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuY2FsY3VsYXRlX2ludHJpbnNpY19jb3N0lIwIcmVmdGl0bGWUjDBldGhlcmV1bS5ob21lc3RlYWQuZm9yay5jYWxjdWxhdGVfaW50cmluc2ljX2Nvc3SUdWgcaHtoHU5oH05oIGpFCgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB2McC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaB9LAWggakIKAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGo/CgAAdWJqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYw/Q2FsY3VsYXRlcyB0aGUgZ2FzIHRoYXQgaXMgY2hhcmdlZCBiZWZvcmUgZXhlY3V0aW9uIGlzIHN0YXJ0ZWQulGgHXZRoTYw/Q2FsY3VsYXRlcyB0aGUgZ2FzIHRoYXQgaXMgY2hhcmdlZCBiZWZvcmUgZXhlY3V0aW9uIGlzIHN0YXJ0ZWQulIWUgZR9lChoBWgGaCBqdgoAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgfSwFoIGpzCgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBqPwoAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqRgUAAGgdTmgfTmggav4FAAB1YmpHBQAAKYGUfZQoaAVoBmgHXZQoakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMPjpvYmo6YHJlY292ZXJfc2VuZGVyIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5yZWNvdmVyX3NlbmRlcj5glGgHXZRofCmBlH2UKGgFaAZoB12UalgFAAApgZR9lChoBWqZCgAAaAddlGhNjA5yZWNvdmVyX3NlbmRlcpSFlIGUfZQoaAVoBmggap4KAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKGpkBQAAjAJweZSMBnB5LW9iapRlaBVdlGgXXZRoGV2UdWgcalcFAABoHU5oH05oIGqbCgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIaW50ZXJuYWyUiIwFcmVmaWSUjCZldGhlcmV1bS5ob21lc3RlYWQuZm9yay5yZWNvdmVyX3NlbmRlcpSMCHJlZnRpdGxllIwmZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsucmVjb3Zlcl9zZW5kZXKUdWgcaHtoHU5oH05oIGqXCgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB2McC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaB9LAWggapQKAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGqRCgAAdWJqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYwvRXh0cmFjdHMgdGhlIHNlbmRlciBhZGRyZXNzIGZyb20gYSB0cmFuc2FjdGlvbi6UaAddlGhNjC9FeHRyYWN0cyB0aGUgc2VuZGVyIGFkZHJlc3MgZnJvbSBhIHRyYW5zYWN0aW9uLpSFlIGUfZQoaAVoBmggasgKAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqxQoAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggapEKAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYFAABoHU5oH05oIGr+BQAAdWJqRwUAACmBlH2UKGgFaAZoB12UKGpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjDo6b2JqOmBzaWduaW5nX2hhc2ggPGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLnNpZ25pbmdfaGFzaD5glGgHXZRofCmBlH2UKGgFaAZoB12UalgFAAApgZR9lChoBWrrCgAAaAddlGhNjAxzaWduaW5nX2hhc2iUhZSBlH2UKGgFaAZoIGrwCgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqZAUAAIwCcHmUjAZweS1vYmqUZWgVXZRoF12UaBldlHVoHGpXBQAAaB1OaB9OaCBq7QoAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGludGVybmFslIiMBXJlZmlklIwkZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuc2lnbmluZ19oYXNolIwIcmVmdGl0bGWUjCRldGhlcmV1bS5ob21lc3RlYWQuZm9yay5zaWduaW5nX2hhc2iUdWgcaHtoHU5oH05oIGrpCgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB2McC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaB9LAWggauYKAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGrjCgAAdWJqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYw4Q29tcHV0ZSB0aGUgaGFzaCBvZiBhIHRyYW5zYWN0aW9uIHVzZWQgaW4gdGhlIHNpZ25hdHVyZS6UaAddlGhNjDhDb21wdXRlIHRoZSBoYXNoIG9mIGEgdHJhbnNhY3Rpb24gdXNlZCBpbiB0aGUgc2lnbmF0dXJlLpSFlIGUfZQoaAVoBmggahoLAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqFwsAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggauMKAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYFAABoHU5oH05oIGr+BQAAdWJqRwUAACmBlH2UKGgFaAZoB12UKGpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjEg6b2JqOmBjb21wdXRlX2hlYWRlcl9oYXNoIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5jb21wdXRlX2hlYWRlcl9oYXNoPmCUaAddlGh8KYGUfZQoaAVoBmgHXZRqWAUAACmBlH2UKGgFaj0LAABoB12UaE2ME2NvbXB1dGVfaGVhZGVyX2hhc2iUhZSBlH2UKGgFaAZoIGpCCwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqZAUAAIwCcHmUjAZweS1vYmqUZWgVXZRoF12UaBldlHVoHGpXBQAAaB1OaB9OaCBqPwsAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGludGVybmFslIiMBXJlZmlklIwrZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuY29tcHV0ZV9oZWFkZXJfaGFzaJSMCHJlZnRpdGxllIwrZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuY29tcHV0ZV9oZWFkZXJfaGFzaJR1aBxoe2gdTmgfTmggajsLAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqOAsAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggajULAAB1YmpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjCRDb21wdXRlcyB0aGUgaGFzaCBvZiBhIGJsb2NrIGhlYWRlci6UaAddlGhNjCRDb21wdXRlcyB0aGUgaGFzaCBvZiBhIGJsb2NrIGhlYWRlci6UhZSBlH2UKGgFaAZoIGpsCwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB2McC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaB9LAWggamkLAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGo1CwAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpGBQAAaB1OaB9OaCBq/gUAAHViakcFAAApgZR9lChoBWgGaAddlChqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYxAOm9iajpgY2hlY2tfZ2FzX2xpbWl0IDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5jaGVja19nYXNfbGltaXQ+YJRoB12UaHwpgZR9lChoBWgGaAddlGpYBQAAKYGUfZQoaAVqjwsAAGgHXZRoTYwPY2hlY2tfZ2FzX2xpbWl0lIWUgZR9lChoBWgGaCBqlAsAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoamQFAACMAnB5lIwGcHktb2JqlGVoFV2UaBddlGgZXZR1aBxqVwUAAGgdTmgfTmggapELAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMJ2V0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLmNoZWNrX2dhc19saW1pdJSMCHJlZnRpdGxllIwnZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuY2hlY2tfZ2FzX2xpbWl0lHVoHGh7aB1OaB9OaCBqjQsAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgfSwFoIGqKCwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBqhwsAAHViakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMJFZhbGlkYXRlcyB0aGUgZ2FzIGxpbWl0IGZvciBhIGJsb2NrLpRoB12UaE2MJFZhbGlkYXRlcyB0aGUgZ2FzIGxpbWl0IGZvciBhIGJsb2NrLpSFlIGUfZQoaAVoBmggar4LAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoH0sBaCBquwsAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggaocLAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYFAABoHU5oH05oIGr+BQAAdWJqRwUAACmBlH2UKGgFaAZoB12UKGpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjFY6b2JqOmBjYWxjdWxhdGVfYmxvY2tfZGlmZmljdWx0eSA8ZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuY2FsY3VsYXRlX2Jsb2NrX2RpZmZpY3VsdHk+YJRoB12UaHwpgZR9lChoBWgGaAddlGpYBQAAKYGUfZQoaAVq4QsAAGgHXZRoTYwaY2FsY3VsYXRlX2Jsb2NrX2RpZmZpY3VsdHmUhZSBlH2UKGgFaAZoIGrmCwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqZAUAAIwCcHmUjAZweS1vYmqUZWgVXZRoF12UaBldlHVoHGpXBQAAaB1OaB9OaCBq4wsAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGludGVybmFslIiMBXJlZmlklIwyZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuY2FsY3VsYXRlX2Jsb2NrX2RpZmZpY3VsdHmUjAhyZWZ0aXRsZZSMMmV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLmNhbGN1bGF0ZV9ibG9ja19kaWZmaWN1bHR5lHVoHGh7aB1OaB9OaCBq3wsAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgfSwFoIGrcCwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBq2QsAAHViakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMQkNvbXB1dGVzIGRpZmZpY3VsdHkgb2YgYSBibG9jayB1c2luZyBpdHMgaGVhZGVyIGFuZCBwYXJlbnQgaGVhZGVyLpRoB12UaE2MQkNvbXB1dGVzIGRpZmZpY3VsdHkgb2YgYSBibG9jayB1c2luZyBpdHMgaGVhZGVyIGFuZCBwYXJlbnQgaGVhZGVyLpSFlIGUfZQoaAVoBmggahAMAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHWrfBQAAaB9LAWggag0MAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGrZCwAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpGBQAAaB1OaB9OaCBq/gUAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQQUAAGgdTmgfTmggaucFAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjARjb2xzlEsCdWgcaiYFAABoHU5oH05oIGrkBQAAdWJhaA59lChoEF2UaBNdlGqyBQAAYWgVXZRoF12UaBldlHVoHGohBQAAaB1OaB9OaCBq4AUAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGobBQAAaB1q3wUAAGgfTmggasQFAAB1YmVoDn2UKGgQXZRo72FoE12UaBVdlIwJZnVuY3Rpb25zlGFoF12UaBldlHVoHGhBaB1oHmgfSx9oIGrqBAAAdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMCkF0dHJpYnV0ZXOUaAddlGhNjApBdHRyaWJ1dGVzlIWUgZR9lChoBWgGaCBqTgwAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoRmgdaB5oH0s7aCBqSwwAAHViag0FAAApgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBHNwZWOUahgFAAB1aBxqDAUAAGgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo2OTo8YXV0b3N1bW1hcnk+lGgfTmggaksMAAB1YmocBQAAKYGUfZQoaAWMbwoKCgpCTE9DS19SRVdBUkQKCgoKR0FTX0xJTUlUX0FESlVTVE1FTlRfRkFDVE9SCgoKCkdBU19MSU1JVF9NSU5JTVVNCgoKCk1JTklNVU1fRElGRklDVUxUWQoKCgpNQVhfT01NRVJfREVQVEgKCpRoB12UaiIFAAApgZR9lChoBWgGaAddlGonBQAAKYGUfZQoaAVoBmgHXZQoaiwFAAApgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGNvbHdpZHRolEsKdWgcaisFAABoHU5oH05oIGpuDAAAdWJqLAUAACmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIY29sd2lkdGiUS1p1aBxqKwUAAGgdTmgfTmggam4MAAB1YmpCBQAAKYGUfZQoaAVoBmgHXZQoakcFAAApgZR9lChoBWgGaAddlChqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYw7Om9iajpgQkxPQ0tfUkVXQVJEIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5CTE9DS19SRVdBUkQ+YFyUaAddlChofCmBlH2UKGgFaAZoB12UalgFAAApgZR9lChoBYw6Om9iajpgQkxPQ0tfUkVXQVJEIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5CTE9DS19SRVdBUkQ+YJRoB12UaE2MDEJMT0NLX1JFV0FSRJSFlIGUfZQoaAVoBmggapUMAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKGpkBQAAjAJweZSMBnB5LW9iapRlaBVdlGgXXZRoGV2UdWgcalcFAABoHU5oH05oIGqSDAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIaW50ZXJuYWyUiIwFcmVmaWSUjCRldGhlcmV1bS5ob21lc3RlYWQuZm9yay5CTE9DS19SRVdBUkSUjAhyZWZ0aXRsZZSMJGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkJMT0NLX1JFV0FSRJR1aBxoe2gdTmgfTmggao4MAAB1YmhNaAaFlIGUfZQoaAVoBmggao4MAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6Njk6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqiwwAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggaogMAAB1YmpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqwAwAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggaogMAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYFAABoHU5oH05oIGqFDAAAdWJqRwUAACmBlH2UKGgFaAZoB12UKGpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjFk6b2JqOmBHQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1IgPGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkdBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUj5gXJRoB12UKGh8KYGUfZQoaAVoBmgHXZRqWAUAACmBlH2UKGgFjFg6b2JqOmBHQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1IgPGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkdBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUj5glGgHXZRoTYwbR0FTX0xJTUlUX0FESlVTVE1FTlRfRkFDVE9SlIWUgZR9lChoBWgGaCBq5QwAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoamQFAACMAnB5lIwGcHktb2JqlGVoFV2UaBddlGgZXZR1aBxqVwUAAGgdTmgfTmggauIMAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMM2V0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkdBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUpSMCHJlZnRpdGxllIwzZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuR0FTX0xJTUlUX0FESlVTVE1FTlRfRkFDVE9SlHVoHGh7aB1OaB9OaCBq3gwAAHViaE1oBoWUgZR9lChoBWgGaCBq3gwAAGghaANoHWhSaB9LAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo2OTo8YXV0b3N1bW1hcnk+lGgfSwFoIGrbDAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBq2AwAAHViakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGoQDQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBq2AwAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqRgUAAGgdTmgfTmggaoUMAAB1YmpHBQAAKYGUfZQoaAVoBmgHXZQoakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMRTpvYmo6YEdBU19MSU1JVF9NSU5JTVVNIDxldGhlcmV1bS5ob21lc3RlYWQuZm9yay5HQVNfTElNSVRfTUlOSU1VTT5gXJRoB12UKGh8KYGUfZQoaAVoBmgHXZRqWAUAACmBlH2UKGgFjEQ6b2JqOmBHQVNfTElNSVRfTUlOSU1VTSA8ZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuR0FTX0xJTUlUX01JTklNVU0+YJRoB12UaE2MEUdBU19MSU1JVF9NSU5JTVVNlIWUgZR9lChoBWgGaCBqNQ0AAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoamQFAACMAnB5lIwGcHktb2JqlGVoFV2UaBddlGgZXZR1aBxqVwUAAGgdTmgfTmggajINAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMKWV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkdBU19MSU1JVF9NSU5JTVVNlIwIcmVmdGl0bGWUjClldGhlcmV1bS5ob21lc3RlYWQuZm9yay5HQVNfTElNSVRfTUlOSU1VTZR1aBxoe2gdTmgfTmggai4NAAB1YmhNaAaFlIGUfZQoaAVoBmggai4NAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHYxwL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay9pbmRleC5yc3Q6Njk6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqKw0AAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggaigNAAB1YmpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqYA0AAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqSwUAAGgdTmgfTmggaigNAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYFAABoHU5oH05oIGqFDAAAdWJqRwUAACmBlH2UKGgFaAZoB12UKGpMBQAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjEc6b2JqOmBNSU5JTVVNX0RJRkZJQ1VMVFkgPGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLk1JTklNVU1fRElGRklDVUxUWT5gXJRoB12UKGh8KYGUfZQoaAVoBmgHXZRqWAUAACmBlH2UKGgFjEY6b2JqOmBNSU5JTVVNX0RJRkZJQ1VMVFkgPGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLk1JTklNVU1fRElGRklDVUxUWT5glGgHXZRoTYwSTUlOSU1VTV9ESUZGSUNVTFRZlIWUgZR9lChoBWgGaCBqhQ0AAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoamQFAACMAnB5lIwGcHktb2JqlGVoFV2UaBddlGgZXZR1aBxqVwUAAGgdTmgfTmggaoINAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMKmV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLk1JTklNVU1fRElGRklDVUxUWZSMCHJlZnRpdGxllIwqZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuTUlOSU1VTV9ESUZGSUNVTFRZlHVoHGh7aB1OaB9OaCBqfg0AAHViaE1oBoWUgZR9lChoBWgGaCBqfg0AAGghaANoHWhSaB9LAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdjHAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrL2luZGV4LnJzdDo2OTo8YXV0b3N1bW1hcnk+lGgfSwFoIGp7DQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBqeA0AAHViakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGqwDQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpLBQAAaB1OaB9OaCBqeA0AAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqRgUAAGgdTmgfTmggaoUMAAB1YmpHBQAAKYGUfZQoaAVoBmgHXZQoakwFAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMQTpvYmo6YE1BWF9PTU1FUl9ERVBUSCA8ZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuTUFYX09NTUVSX0RFUFRIPmBclGgHXZQoaHwpgZR9lChoBWgGaAddlGpYBQAAKYGUfZQoaAWMQDpvYmo6YE1BWF9PTU1FUl9ERVBUSCA8ZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuTUFYX09NTUVSX0RFUFRIPmCUaAddlGhNjA9NQVhfT01NRVJfREVQVEiUhZSBlH2UKGgFaAZoIGrVDQAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqZAUAAIwCcHmUjAZweS1vYmqUZWgVXZRoF12UaBldlHVoHGpXBQAAaB1OaB9OaCBq0g0AAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGludGVybmFslIiMBXJlZmlklIwnZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuTUFYX09NTUVSX0RFUFRIlIwIcmVmdGl0bGWUjCdldGhlcmV1bS5ob21lc3RlYWQuZm9yay5NQVhfT01NRVJfREVQVEiUdWgcaHtoHU5oH05oIGrODQAAdWJoTWgGhZSBlH2UKGgFaAZoIGrODQAAaCFoA2gdaFJoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB2McC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsvaW5kZXgucnN0OjY5OjxhdXRvc3VtbWFyeT6UaB9LAWggassNAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGrIDQAAdWJqTAUAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdTmgfTmggagAOAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaksFAABoHU5oH05oIGrIDQAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpGBQAAaB1OaB9OaCBqhQwAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQQUAAGgdTmgfTmggam4MAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjARjb2xzlEsCdWgcaiYFAABoHU5oH05oIGprDAAAdWJhaA59lChoEF2UaBNdlGqyBQAAYWgVXZRoF12UaBldlHVoHGohBQAAaB1OaB9OaCBqZwwAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGobBQAAaB1qZgwAAGgfTmggaksMAAB1YmVoDn2UKGgQXZRqEQEAAGFoE12UaBVdlIwKYXR0cmlidXRlc5RhaBddlGgZXZR1aBxoQWgdaB5oH0s7aCBq6gQAAHViZWgOfZQoaBBdlGiuYWgTXZRoFV2UjA9tb2R1bGUgY29udGVudHOUYWgXXZRoGV2UdWgcaEFoHWgeaB9LE2ggaENoIWgDdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMDk1vZHVsZSBEZXRhaWxzlGgHXZRoTYwOTW9kdWxlIERldGFpbHOUhZSBlH2UKGgFaAZoIGpDDgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhGaB1oHmgfS0doIGpADgAAaCFoA3ViaEIpgZR9lChoBWgGaAddlChoRymBlH2UKGgFjAxCTE9DS19SRVdBUkSUaAddlGhNjAxCTE9DS19SRVdBUkSUhZSBlH2UKGgFaAZoIGpUDgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhGaB1oHmgfS0poIGpRDgAAdWJoJCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwHZW50cmllc5RdlCiMBnNpbmdsZZSMMEJMT0NLX1JFV0FSRCAoaW4gbW9kdWxlIGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrKZSMJGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkJMT0NLX1JFV0FSRJRoBk50lGF1aBxoI2gdTmgfTmggalEOAAB1YmgijARkZXNjlJOUKYGUfZQoaAVoBmgHXZQoaCKMDmRlc2Nfc2lnbmF0dXJllJOUKYGUfZQoaAWMDEJMT0NLX1JFV0FSRJRoB12UaCKMCWRlc2NfbmFtZZSTlCmBlH2UKGgFanoOAABoB12UaE2MDEJMT0NLX1JFV0FSRJSFlIGUfZQoaAVoBmggan4OAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKIwIc2lnLW5hbWWUjAhkZXNjbmFtZZSMCHNpZy1uYW1llIwIZGVzY25hbWWUZWgVXZRoF12UaBldlIwJeG1sOnNwYWNllGriBAAAdWgcanwOAABoHWgeaB9LUWggangOAAB1YmFoDn2UKGgQXZRqbw4AAGFoE12UKIwDc2lnlIwKc2lnLW9iamVjdJSMAnB5lIwDc2lnlIwKc2lnLW9iamVjdJRlaBVdlGgXXZRoGV2UjAZtb2R1bGWUjBdldGhlcmV1bS5ob21lc3RlYWQuZm9ya5SMBWNsYXNzlGgGjAhmdWxsbmFtZZRqeg4AAHVoHGp2DgAAaB1oHmgfS05oIGpzDgAAdWJoIowMZGVzY19jb250ZW50lJOUKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcap8OAABoHWgeaB9LUWgganMOAAB1YmVoDn2UKGgQXZRoE12UKGqVDgAAjARkYXRhlGVoFV2UaBddlGgZXZSMBmRvbWFpbpRqlQ4AAIwHb2JqdHlwZZRqrQ4AAIwIZGVzY3R5cGWUaq0OAACMB25vaW5kZXiUiXVoHGpxDgAAaB1OaB9OaCBqUQ4AAHViaACMDWxpdGVyYWxfYmxvY2uUk5QpgZR9lChoBYwgQkxPQ0tfUkVXQVJEID0gVTI1Nig1ICogMTAqKjE4KQqUaAddlGhNjCBCTE9DS19SRVdBUkQgPSBVMjU2KDUgKiAxMCoqMTgpCpSFlIGUfZQoaAVoBmggarcOAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjFAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay5weZSMCXhtbDpzcGFjZZRq4gQAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lIwLbGluZW5vc3RhcnSUSwFzjAdsaW5lbm9zlIl1aBxqtQ4AAGgdaB5oH0tSaCBqUQ4AAHViZWgOfZQoaBBdlGpeAQAAYWgTXZRoFV2UjAxibG9ja19yZXdhcmSUYWgXXZRoGV2UdWgcaEFoHWgeaB9LSmggakAOAABoIWgDdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMG0dBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUpRoB12UaE2MG0dBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUpSFlIGUfZQoaAVoBmggatkOAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaEZoHWgeaB9LWGggatYOAAB1YmgkKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAdlbnRyaWVzlF2UKGptDgAAjD9HQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1IgKGluIG1vZHVsZSBldGhlcmV1bS5ob21lc3RlYWQuZm9yaymUjDNldGhlcmV1bS5ob21lc3RlYWQuZm9yay5HQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1KUaAZOdJRhdWgcaCNoHU5oH05oIGrWDgAAdWJqcg4AACmBlH2UKGgFaAZoB12UKGp3DgAAKYGUfZQoaAWMG0dBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUpRoB12Uan0OAAApgZR9lChoBWr6DgAAaAddlGhNjBtHQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1KUhZSBlH2UKGgFaAZoIGr8DgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqiA4AAGqJDgAAaooOAABqiw4AAGVoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGp8DgAAaB1oHmgfS19oIGr4DgAAdWJhaA59lChoEF2UavMOAABhaBNdlChqkw4AAGqUDgAAjAJweZRqlg4AAGqXDgAAZWgVXZRoF12UaBldlIwGbW9kdWxllGqcDgAAjAVjbGFzc5RoBowIZnVsbG5hbWWUavoOAAB1aBxqdg4AAGgdaB5oH0tcaCBq9Q4AAHViaqAOAAApgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqnw4AAGgdaB5oH0tfaCBq9Q4AAHViZWgOfZQoaBBdlGgTXZQoag0PAACMBGRhdGGUZWgVXZRoF12UaBldlIwGZG9tYWlulGoNDwAAjAdvYmp0eXBllGogDwAAjAhkZXNjdHlwZZRqIA8AAIwHbm9pbmRleJSJdWgcanEOAABoHU5oH05oIGrWDgAAdWJqtg4AACmBlH2UKGgFjCNHQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1IgPSAxMDI0CpRoB12UaE2MI0dBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUiA9IDEwMjQKlIWUgZR9lChoBWgGaCBqKA8AAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBnNvdXJjZZSMUC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrLnB5lIwJeG1sOnNwYWNllGriBAAAjAVmb3JjZZSJjAhsYW5ndWFnZZSMBnB5dGhvbpSMDmhpZ2hsaWdodF9hcmdzlH2Uas0OAABLAXOMB2xpbmVub3OUiXVoHGq1DgAAaB1oHmgfS2BoIGrWDgAAdWJlaA59lChoEF2UaoABAABhaBNdlGgVXZSMG2dhc19saW1pdF9hZGp1c3RtZW50X2ZhY3RvcpRhaBddlGgZXZR1aBxoQWgdaB5oH0tYaCBqQA4AAGghaAN1YmhCKYGUfZQoaAVoBmgHXZQoaEcpgZR9lChoBYwRR0FTX0xJTUlUX01JTklNVU2UaAddlGhNjBFHQVNfTElNSVRfTUlOSU1VTZSFlIGUfZQoaAVoBmggakkPAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaEZoHWgeaB9LZmggakYPAAB1YmgkKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAdlbnRyaWVzlF2UKGptDgAAjDVHQVNfTElNSVRfTUlOSU1VTSAoaW4gbW9kdWxlIGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrKZSMKWV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkdBU19MSU1JVF9NSU5JTVVNlGgGTnSUYXVoHGgjaB1OaB9OaCBqRg8AAHVianIOAAApgZR9lChoBWgGaAddlChqdw4AACmBlH2UKGgFjBFHQVNfTElNSVRfTUlOSU1VTZRoB12Uan0OAAApgZR9lChoBWpqDwAAaAddlGhNjBFHQVNfTElNSVRfTUlOSU1VTZSFlIGUfZQoaAVoBmggamwPAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKGqIDgAAaokOAABqig4AAGqLDgAAZWgVXZRoF12UaBldlIwJeG1sOnNwYWNllGriBAAAdWgcanwOAABoHWgeaB9LbWggamgPAAB1YmFoDn2UKGgQXZRqYw8AAGFoE12UKGqTDgAAapQOAACMAnB5lGqWDgAAapcOAABlaBVdlGgXXZRoGV2UjAZtb2R1bGWUapwOAACMBWNsYXNzlGgGjAhmdWxsbmFtZZRqag8AAHVoHGp2DgAAaB1oHmgfS2poIGplDwAAdWJqoA4AACmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGqfDgAAaB1oHmgfS21oIGplDwAAdWJlaA59lChoEF2UaBNdlChqfQ8AAIwEZGF0YZRlaBVdlGgXXZRoGV2UjAZkb21haW6Uan0PAACMB29ianR5cGWUapAPAACMCGRlc2N0eXBllGqQDwAAjAdub2luZGV4lIl1aBxqcQ4AAGgdTmgfTmggakYPAAB1Ymq2DgAAKYGUfZQoaAWMGUdBU19MSU1JVF9NSU5JTVVNID0gNTAwMAqUaAddlGhNjBlHQVNfTElNSVRfTUlOSU1VTSA9IDUwMDAKlIWUgZR9lChoBWgGaCBqmA8AAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBnNvdXJjZZSMUC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrLnB5lIwJeG1sOnNwYWNllGriBAAAjAVmb3JjZZSJjAhsYW5ndWFnZZSMBnB5dGhvbpSMDmhpZ2hsaWdodF9hcmdzlH2Uas0OAABLAXOMB2xpbmVub3OUiXVoHGq1DgAAaB1oHmgfS25oIGpGDwAAdWJlaA59lChoEF2UaqIBAABhaBNdlGgVXZSMEWdhc19saW1pdF9taW5pbXVtlGFoF12UaBldlHVoHGhBaB1oHmgfS2ZoIGpADgAAaCFoA3ViaEIpgZR9lChoBWgGaAddlChoRymBlH2UKGgFjBJNSU5JTVVNX0RJRkZJQ1VMVFmUaAddlGhNjBJNSU5JTVVNX0RJRkZJQ1VMVFmUhZSBlH2UKGgFaAZoIGq5DwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhGaB1oHmgfS3RoIGq2DwAAdWJoJCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwHZW50cmllc5RdlChqbQ4AAIw2TUlOSU1VTV9ESUZGSUNVTFRZIChpbiBtb2R1bGUgZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsplIwqZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuTUlOSU1VTV9ESUZGSUNVTFRZlGgGTnSUYXVoHGgjaB1OaB9OaCBqtg8AAHVianIOAAApgZR9lChoBWgGaAddlChqdw4AACmBlH2UKGgFjBJNSU5JTVVNX0RJRkZJQ1VMVFmUaAddlGp9DgAAKYGUfZQoaAVq2g8AAGgHXZRoTYwSTUlOSU1VTV9ESUZGSUNVTFRZlIWUgZR9lChoBWgGaCBq3A8AAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoaogOAABqiQ4AAGqKDgAAaosOAABlaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqfA4AAGgdaB5oH0t7aCBq2A8AAHViYWgOfZQoaBBdlGrTDwAAYWgTXZQoapMOAABqlA4AAIwCcHmUapYOAABqlw4AAGVoFV2UaBddlGgZXZSMBm1vZHVsZZRqnA4AAIwFY2xhc3OUaAaMCGZ1bGxuYW1llGraDwAAdWgcanYOAABoHWgeaB9LeGggatUPAAB1YmqgDgAAKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcap8OAABoHWgeaB9Le2ggatUPAAB1YmVoDn2UKGgQXZRoE12UKGrtDwAAjARkYXRhlGVoFV2UaBddlGgZXZSMBmRvbWFpbpRq7Q8AAIwHb2JqdHlwZZRqABAAAIwIZGVzY3R5cGWUagAQAACMB25vaW5kZXiUiXVoHGpxDgAAaB1OaB9OaCBqtg8AAHViarYOAAApgZR9lChoBYwiTUlOSU1VTV9ESUZGSUNVTFRZID0gVWludCgxMzEwNzIpCpRoB12UaE2MIk1JTklNVU1fRElGRklDVUxUWSA9IFVpbnQoMTMxMDcyKQqUhZSBlH2UKGgFaAZoIGoIEAAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllIxQL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsucHmUjAl4bWw6c3BhY2WUauIEAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqzQ4AAEsBc4wHbGluZW5vc5SJdWgcarUOAABoHWgeaB9LfGggarYPAAB1YmVoDn2UKGgQXZRqxAEAAGFoE12UaBVdlIwSbWluaW11bV9kaWZmaWN1bHR5lGFoF12UaBldlHVoHGhBaB1oHmgfS3RoIGpADgAAaCFoA3ViaEIpgZR9lChoBWgGaAddlChoRymBlH2UKGgFjA9NQVhfT01NRVJfREVQVEiUaAddlGhNjA9NQVhfT01NRVJfREVQVEiUhZSBlH2UKGgFaAZoIGopEAAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhGaB1oHmgfS4JoIGomEAAAdWJoJCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwHZW50cmllc5RdlChqbQ4AAIwzTUFYX09NTUVSX0RFUFRIIChpbiBtb2R1bGUgZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsplIwnZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuTUFYX09NTUVSX0RFUFRIlGgGTnSUYXVoHGgjaB1OaB9OaCBqJhAAAHVianIOAAApgZR9lChoBWgGaAddlChqdw4AACmBlH2UKGgFjA9NQVhfT01NRVJfREVQVEiUaAddlGp9DgAAKYGUfZQoaAVqShAAAGgHXZRoTYwPTUFYX09NTUVSX0RFUFRIlIWUgZR9lChoBWgGaCBqTBAAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoaogOAABqiQ4AAGqKDgAAaosOAABlaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqfA4AAGgdaB5oH0uJaCBqSBAAAHViYWgOfZQoaBBdlGpDEAAAYWgTXZQoapMOAABqlA4AAIwCcHmUapYOAABqlw4AAGVoFV2UaBddlGgZXZSMBm1vZHVsZZRqnA4AAIwFY2xhc3OUaAaMCGZ1bGxuYW1llGpKEAAAdWgcanYOAABoHWgeaB9LhmggakUQAAB1YmqgDgAAKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcap8OAABoHWgeaB9LiWggakUQAAB1YmVoDn2UKGgQXZRoE12UKGpdEAAAjARkYXRhlGVoFV2UaBddlGgZXZSMBmRvbWFpbpRqXRAAAIwHb2JqdHlwZZRqcBAAAIwIZGVzY3R5cGWUanAQAACMB25vaW5kZXiUiXVoHGpxDgAAaB1OaB9OaCBqJhAAAHViarYOAAApgZR9lChoBYwUTUFYX09NTUVSX0RFUFRIID0gNgqUaAddlGhNjBRNQVhfT01NRVJfREVQVEggPSA2CpSFlIGUfZQoaAVoBmggangQAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjFAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay5weZSMCXhtbDpzcGFjZZRq4gQAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGrNDgAASwFzjAdsaW5lbm9zlIl1aBxqtQ4AAGgdaB5oH0uKaCBqJhAAAHViZWgOfZQoaBBdlGrmAQAAYWgTXZRoFV2UjA9tYXhfb21tZXJfZGVwdGiUYWgXXZRoGV2UdWgcaEFoHWgeaB9LgmggakAOAABoIWgDdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMCkJsb2NrQ2hhaW6UaAddlGhNjApCbG9ja0NoYWlulIWUgZR9lChoBWgGaCBqmRAAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoRmgdaB5oH0uQaCBqlhAAAGghaAN1Ymh3KYGUfZQoaAWMLUhpc3RvcnkgYW5kIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGJsb2NrIGNoYWluLpRoB12UaE2MLUhpc3RvcnkgYW5kIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGJsb2NrIGNoYWluLpSFlIGUfZQoaAVoBmggaqcQAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHWgeaB9Lk2ggapYQAABoIWgDdWJoJCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwHZW50cmllc5RdlChqbQ4AAIwtQmxvY2tDaGFpbiAoY2xhc3MgaW4gZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsplIwiZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuQmxvY2tDaGFpbpRoBk50lGF1aBxoI2gdaFJoH0sAaCBqlhAAAGghaAN1YmpyDgAAKYGUfZQoaAVoBmgHXZQoancOAAApgZR9lChoBYwKQmxvY2tDaGFpbpRoB12UKGgijA9kZXNjX2Fubm90YXRpb26Uk5QpgZR9lChoBYwGY2xhc3MglGgHXZRoTYwGY2xhc3MglIWUgZR9lChoBWgGaCBqzBAAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGrKEAAAaB1oHmgfS65oIGrGEAAAdWJqfQ4AACmBlH2UKGgFasgQAABoB12UaE2MCkJsb2NrQ2hhaW6UhZSBlH2UKGgFaAZoIGrbEAAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqiA4AAGqJDgAAaooOAABqiw4AAGVoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGp8DgAAaB1oHmgfS65oIGrGEAAAdWJlaA59lChoEF2UasEQAABhaBNdlChqkw4AAGqUDgAAjAJweZRqlg4AAGqXDgAAZWgVXZRoF12UaBldlIwGbW9kdWxllGqcDgAAjAVjbGFzc5RoBowIZnVsbG5hbWWUasgQAAB1aBxqdg4AAGgdaB5oH0uWaCBqwxAAAGghaAN1YmqgDgAAKYGUfZQoaAVoBmgHXZQoaCQpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMB2VudHJpZXOUXZQoam0OAACMHWJsb2NrcyAoQmxvY2tDaGFpbiBhdHRyaWJ1dGUplIwpZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuQmxvY2tDaGFpbi5ibG9ja3OUaAZOdJRhdWgcaCNoHWhSaB9LAGggavMQAABoIWgDdWJqcg4AACmBlH2UKGgFaAZoB12UKGp3DgAAKYGUfZQoaAWMBmJsb2Nrc5RoB12UKGp9DgAAKYGUfZQoaAVqCREAAGgHXZRoTYwGYmxvY2tzlIWUgZR9lChoBWgGaCBqCxEAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoaogOAABqiQ4AAGqKDgAAaosOAABlaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqfA4AAGgdaB5oH0sAaCBqBxEAAGghaAN1YmrLEAAAKYGUfZQoaAWMKyA6TGlzdFtldGhlcmV1bS5ob21lc3RlYWQuZm9ya190eXBlcy5CbG9ja12UaAddlChoTYwBIJSFlIGUfZQoaAVoBmggahkRAABoIWgDaB1oUmgfSwB1YmgAjAZpbmxpbmWUk5QpgZR9lChoBWgGaAddlGhNjCo6TGlzdFtldGhlcmV1bS5ob21lc3RlYWQuZm9ya190eXBlcy5CbG9ja12UhZSBlH2UKGgFaAZoIGojEQAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlIwPY2hhbmdlLXJlcGxhY2VklGFoFV2UaBddlGgZXZR1aBxqIREAAGggahkRAABoIWgDaB1oUmgfSwB1YmoiEQAAKYGUfZQoaAVoBmgHXZRoTYwpOkxpc3RbZXRoZXJldW0uZGFvX2ZvcmsuZm9ya190eXBlcy5CbG9ja12UhZSBlH2UKGgFaAZoIGoxEQAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlIwSY2hhbmdlLXJlcGxhY2VtZW50lGFoFV2UaBddlGgZXZR1aBxqIREAAGggahkRAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqyhAAAGgdaB5oH0sAaCBqBxEAAGghaAN1YmVoDn2UKGgQXZRqAhEAAGFoE12UKGqTDgAAapQOAACMAnB5lGqWDgAAapcOAABlaBVdlGgXXZRoGV2UjAZtb2R1bGWUapwOAACMBWNsYXNzlGrIEAAAjAhmdWxsbmFtZZSMEUJsb2NrQ2hhaW4uYmxvY2tzlHVoHGp2DgAAaB1oHmgfS5poIGoEEQAAaCFoA3ViaqAOAAApgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqnw4AAGgdaB5oH0sAaCBqBBEAAGghaAN1YmVoDn2UKGgQXZRoE12UKGpJEQAAjAlhdHRyaWJ1dGWUZWgVXZRoF12UaBldlIwGZG9tYWlulGpJEQAAjAdvYmp0eXBllGpdEQAAjAhkZXNjdHlwZZRqXREAAIwHbm9pbmRleJSJdWgcanEOAABoHWhSaB9LAGggavMQAABoIWgDdWJoJCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwHZW50cmllc5RdlChqbQ4AAIwcc3RhdGUgKEJsb2NrQ2hhaW4gYXR0cmlidXRlKZSMKGV0aGVyZXVtLmhvbWVzdGVhZC5mb3JrLkJsb2NrQ2hhaW4uc3RhdGWUaAZOdJRhdWgcaCNoHWhSaB9LAGggavMQAABoIWgDdWJqcg4AACmBlH2UKGgFaAZoB12UKGp3DgAAKYGUfZQoaAWMBXN0YXRllGgHXZQoan0OAAApgZR9lChoBWp4EQAAaAddlGhNjAVzdGF0ZZSFlIGUfZQoaAVoBmgganoRAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKGqIDgAAaokOAABqig4AAGqLDgAAZWgVXZRoF12UaBldlIwJeG1sOnNwYWNllGriBAAAdWgcanwOAABoHWgeaB9LAGgganYRAABoIWgDdWJqyxAAACmBlH2UKGgFjCAgOmV0aGVyZXVtLmhvbWVzdGVhZC5zdGF0ZS5TdGF0ZZRoB12UKGhNjAEglIWUgZR9lChoBWgGaCBqiBEAAGghaANoHWhSaB9LAHViaiIRAAApgZR9lChoBWgGaAddlGhNjB86ZXRoZXJldW0uaG9tZXN0ZWFkLnN0YXRlLlN0YXRllIWUgZR9lChoBWgGaCBqkBEAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZSMD2NoYW5nZS1yZXBsYWNlZJRhaBVdlGgXXZRoGV2UdWgcaiERAABoIGqIEQAAaCFoA2gdaFJoH0sAdWJqIhEAACmBlH2UKGgFaAZoB12UaE2MHjpldGhlcmV1bS5kYW9fZm9yay5zdGF0ZS5TdGF0ZZSFlIGUfZQoaAVoBmggap4RAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UjBJjaGFuZ2UtcmVwbGFjZW1lbnSUYWgVXZRoF12UaBldlHVoHGohEQAAaCBqiBEAAGghaANoHWhSaB9LAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGrKEAAAaB1oHmgfSwBoIGp2EQAAaCFoA3ViZWgOfZQoaBBdlGpxEQAAYWgTXZQoapMOAABqlA4AAIwCcHmUapYOAABqlw4AAGVoFV2UaBddlGgZXZSMBm1vZHVsZZRqnA4AAIwFY2xhc3OUasgQAACMCGZ1bGxuYW1llIwQQmxvY2tDaGFpbi5zdGF0ZZR1aBxqdg4AAGgdaB5oH0uhaCBqcxEAAGghaAN1YmqgDgAAKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcap8OAABoHWgeaB9LAGgganMRAABoIWgDdWJlaA59lChoEF2UaBNdlChqthEAAIwJYXR0cmlidXRllGVoFV2UaBddlGgZXZSMBmRvbWFpbpRqthEAAIwHb2JqdHlwZZRqyhEAAIwIZGVzY3R5cGWUasoRAACMB25vaW5kZXiUiXVoHGpxDgAAaB1oUmgfSwBoIGrzEAAAaCFoA3ViaCQpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMB2VudHJpZXOUXZQoam0OAACMH2NoYWluX2lkIChCbG9ja0NoYWluIGF0dHJpYnV0ZSmUjCtldGhlcmV1bS5ob21lc3RlYWQuZm9yay5CbG9ja0NoYWluLmNoYWluX2lklGgGTnSUYXVoHGgjaB1oUmgfSwBoIGrzEAAAaCFoA3VianIOAAApgZR9lChoBWgGaAddlChqdw4AACmBlH2UKGgFjAhjaGFpbl9pZJRoB12UKGp9DgAAKYGUfZQoaAVq5REAAGgHXZRoTYwIY2hhaW5faWSUhZSBlH2UKGgFaAZoIGrnEQAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlChqiA4AAGqJDgAAaooOAABqiw4AAGVoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGp8DgAAaB1oHmgfTmggauMRAAB1YmrLEAAAKYGUfZQoaAWMGSA6ZXRoZXJldW0uYmFzZV90eXBlcy5VNjSUaAddlGhNjBkgOmV0aGVyZXVtLmJhc2VfdHlwZXMuVTY0lIWUgZR9lChoBWgGaCBq9REAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRq4gQAAHVoHGrKEAAAaB1oHmgfTmggauMRAAB1YmVoDn2UKGgQXZRq3hEAAGFoE12UKGqTDgAAapQOAACMAnB5lGqWDgAAapcOAABlaBVdlGgXXZRoGV2UjAZtb2R1bGWUapwOAACMBWNsYXNzlGrIEAAAjAhmdWxsbmFtZZSME0Jsb2NrQ2hhaW4uY2hhaW5faWSUdWgcanYOAABoHWgeaB9LqGggauARAAB1YmqgDgAAKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcap8OAABoHWgeaB9OaCBq4BEAAHViZWgOfZQoaBBdlGgTXZQoagcSAACMCWF0dHJpYnV0ZZRlaBVdlGgXXZRoGV2UjAZkb21haW6UagcSAACMB29ianR5cGWUahsSAACMCGRlc2N0eXBllGobEgAAjAdub2luZGV4lIl1aBxqcQ4AAGgdaFJoH0sAaCBq8xAAAGghaAN1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcap8OAABoHWgeaB9LrmggasMQAABoIWgDdWJlaA59lChoEF2UaBNdlChq7BAAAIwFY2xhc3OUZWgVXZRoF12UaBldlIwGZG9tYWlulGrsEAAAjAdvYmp0eXBllGosEgAAjAhkZXNjdHlwZZRqLBIAAIwHbm9pbmRleJSJdWgcanEOAABoHWhSaB9LAGggapYQAABoIWgDdWJlaA59lChoEF2UaggCAABhaBNdlGgVXZSMCmJsb2NrY2hhaW6UYWgXXZRoGV2UdWgcaEFoHWgeaB9LkGggakAOAABoIWgDdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMCmFwcGx5X2ZvcmuUaAddlGhNjAphcHBseV9mb3JrlIWUgZR9lChoBWgGaCBqPhIAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoRmgdaB5oH0uwaCBqOxIAAGghaAN1YmgkKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAdlbnRyaWVzlF2UdWgcaCNoHWhSaB9LAGggajsSAABoIWgDdWJqcg4AACmBlH2UKGgFaAZoB12UKGp3DgAAKYGUfZQoaAWMD2FwcGx5X2Zvcmsob2xkKZRoB12UKGp9DgAAKYGUfZQoaAWMCmFwcGx5X2ZvcmuUaAddlGhNjAphcHBseV9mb3JrlIWUgZR9lChoBWgGaCBqXhIAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZQoaogOAABqiQ4AAGqKDgAAaosOAABlaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqfA4AAGgdaB5oH05oIGpaEgAAdWJoIowSZGVzY19wYXJhbWV0ZXJsaXN0lJOUKYGUfZQoaAWMA29sZJRoB12UaCKMDmRlc2NfcGFyYW1ldGVylJOUKYGUfZQoaAWMA29sZJRoB12UaiIRAAApgZR9lChoBWgGaAddlGhNjANvbGSUhZSBlH2UKGgFaAZoIGp5EgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlIwBbpRhaBVdlGgXXZRoGV2UdWgcaiERAABoHU5oH05oIGp1EgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwJeG1sOnNwYWNllGriBAAAdWgcanMSAABoHU5oH05oIGpvEgAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwJeG1sOnNwYWNllGriBAAAdWgcam0SAABoHWgeaB9OaCBqWhIAAHViZWgOfZQoaBBdlIwiZXRoZXJldW0uaG9tZXN0ZWFkLmZvcmsuYXBwbHlfZm9ya5RhaBNdlChqkw4AAGqUDgAAjAJweZRqlg4AAGqXDgAAZWgVXZRoF12UaBldlIwGbW9kdWxllGqcDgAAjAVjbGFzc5RoBowIZnVsbG5hbWWUamASAAB1aBxqdg4AAGgdaB5oH0uzaCBqVxIAAGghaAN1YmqgDgAAKYGUfZQoaAVoBmgHXZQoaHcpgZR9lChoBYx3VHJhbnNmb3JtcyB0aGUgc3RhdGUgZnJvbSB0aGUgcHJldmlvdXMgaGFyZCBmb3JrIChgb2xkYCkgaW50byB0aGUgYmxvY2sKY2hhaW4gb2JqZWN0IGZvciB0aGlzIGhhcmQgZm9yayBhbmQgcmV0dXJucyBpdC6UaAddlChoTYwyVHJhbnNmb3JtcyB0aGUgc3RhdGUgZnJvbSB0aGUgcHJldmlvdXMgaGFyZCBmb3JrICiUhZSBlH2UKGgFaAZoIGqjEgAAaCFoA2gdaFJoH0sAdWJqQQYAACmBlH2UKGgFjAVgb2xkYJRoB12UaE2MA29sZJSFlIGUfZQoaAVoBmggaqsSAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakAGAABoHU5oH05oIGqjEgAAdWJoTYxAKSBpbnRvIHRoZSBibG9jawpjaGFpbiBvYmplY3QgZm9yIHRoaXMgaGFyZCBmb3JrIGFuZCByZXR1cm5zIGl0LpSFlIGUfZQoaAVoBmggaqMSAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHWgeaB9LtmggaqASAABoIWgDdWJodymBlH2UKGgFjKBXaGVuIGZvcmtzIG5lZWQgdG8gaW1wbGVtZW50IGFuIGlycmVndWxhciBzdGF0ZSB0cmFuc2l0aW9uLCB0aGlzIGZ1bmN0aW9uCmlzIHVzZWQgdG8gaGFuZGxlIHRoZSBpcnJlZ3VsYXJpdHkuIFNlZSB0aGUgOnJlZjpgREFPIEZvcmsgPGRhby1mb3JrPmAgZm9yCmFuIGV4YW1wbGUulGgHXZQoaE2MbVdoZW4gZm9ya3MgbmVlZCB0byBpbXBsZW1lbnQgYW4gaXJyZWd1bGFyIHN0YXRlIHRyYW5zaXRpb24sIHRoaXMgZnVuY3Rpb24KaXMgdXNlZCB0byBoYW5kbGUgdGhlIGlycmVndWxhcml0eS6UhZSBlH2UKGgFaAZoIGrDEgAAaCFoA2gdaFJoH0sAdWJqIhEAACmBlH2UKGgFaAZoB12UaE2MCSBTZWUgdGhlIJSFlIGUfZQoaAVoBmggassSAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UjA5jaGFuZ2UtcmVtb3ZlZJRhaBVdlGgXXZRoGV2UdWgcaiERAABoIGrDEgAAaCFoA2gdaFJoH0sAdWJofCmBlH2UKGgFaAZoB12UaiIRAAApgZR9lChoBYwIREFPIEZvcmuUaAddlGhNjAhEQU8gRm9ya5SFlIGUfZQoaAVoBmggatwSAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKIwDc3RklIwHc3RkLXJlZpRlaBVdlGgXXZRoGV2UdWgcaiERAABoHU5oH05oIGrZEgAAdWJhaA59lChoEF2UaBNdlIwOY2hhbmdlLXJlbW92ZWSUYWgVXZRoF12UaBldlIwIaW50ZXJuYWyUiIwGcmVmdXJplIwpLi4vLi4vZGFvX2ZvcmsvZm9yay9pbmRleC5waWNrbGUjZGFvLWZvcmuUdWgcaHtoHWhSaB9LAGggasMSAABoIWgDdWJqIhEAACmBlH2UKGgFaAZoB12UaE2MECBmb3IKYW4gZXhhbXBsZS6UhZSBlH2UKGgFaAZoIGr2EgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlIwOY2hhbmdlLXJlbW92ZWSUYWgVXZRoF12UaBldlHVoHGohEQAAaCBqwxIAAGghaANoHWhSaB9LAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdaB5oH0u5aCBqoBIAAGghaAN1Ymh3KYGUfZQoaAVYrwEAAFRoZSBEQU8tRm9yayBvY2N1cmVkIGFzIGEgcmVzdWx0IG9mIHRoZSBgMjAxNiBEQU8gSGFja3MKPGh0dHBzOi8vd3d3LmdlbWluaS5jb20vY3J5cHRvcGVkaWEvdGhlLWRhby1oYWNrLW1ha2VyZGFvPmBfIGluIHdoaWNoIGFuCnVua25vd24gZW50aXR5IG1hbmFnZWQgdG8gZHJhaW4gbW9yZSB0aGFuIDMuNiBtaWxsaW9uIGV0aGVyIGNhdXNpbmcgdGhlCnByaWNlIG9mIGV0aGVyIHRvIGRyb3AgYnkgbmVhcmx5IDM1JS4gVGhpcyBmb3JrIHdhcyB0aGUgc29sdXRpb24gdG8gdGhlCmhhY2tzIGFuZCBtYW51YWxseSByZXNldCB0aGUgYWZmZWN0ZWQgcGFydGllcycgYWNjb3VudHMgdG8gdGhlaXIgc3RhdGUKcHJpb3IgdG8gdGhlIGF0dGFjay4gVGhpcyBmb3JrIGVzc2VudGlhbGx5IHJld3JvdGUgdGhlIGhpc3Rvcnkgb2YgdGhlCkV0aGVyZXVtIG5ldHdvcmsulGgHXZQoaE2MKFRoZSBEQU8tRm9yayBvY2N1cmVkIGFzIGEgcmVzdWx0IG9mIHRoZSCUhZSBlH2UKGgFaAZoIGoKEwAAaCFoA2gdaFJoH0sAdWJofCmBlH2UKGgFjExgMjAxNiBEQU8gSGFja3MKPGh0dHBzOi8vd3d3LmdlbWluaS5jb20vY3J5cHRvcGVkaWEvdGhlLWRhby1oYWNrLW1ha2VyZGFvPmBflGgHXZRoTYwOMjAxNiBEQU8gSGFja3OUhZSBlH2UKGgFaAZoIGoSEwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwEbmFtZZSMDjIwMTYgREFPIEhhY2tzlIwGcmVmdXJplIw4aHR0cHM6Ly93d3cuZ2VtaW5pLmNvbS9jcnlwdG9wZWRpYS90aGUtZGFvLWhhY2stbWFrZXJkYW+UdWgcaHtoHU5oH05oIGoKEwAAdWJoCimBlH2UKGgFjDsKPGh0dHBzOi8vd3d3LmdlbWluaS5jb20vY3J5cHRvcGVkaWEvdGhlLWRhby1oYWNrLW1ha2VyZGFvPpRoB12UaA59lChoEF2UjAlkYW8taGFja3OUYWgTXZRoFV2UjA4yMDE2IGRhbyBoYWNrc5RhaBddlGgZXZSMBnJlZnVyaZRqIxMAAHVoHGgJaB1OaB9OaCBqChMAAHViaE1YPQEAACBpbiB3aGljaCBhbgp1bmtub3duIGVudGl0eSBtYW5hZ2VkIHRvIGRyYWluIG1vcmUgdGhhbiAzLjYgbWlsbGlvbiBldGhlciBjYXVzaW5nIHRoZQpwcmljZSBvZiBldGhlciB0byBkcm9wIGJ5IG5lYXJseSAzNSUuIFRoaXMgZm9yayB3YXMgdGhlIHNvbHV0aW9uIHRvIHRoZQpoYWNrcyBhbmQgbWFudWFsbHkgcmVzZXQgdGhlIGFmZmVjdGVkIHBhcnRpZXPigJkgYWNjb3VudHMgdG8gdGhlaXIgc3RhdGUKcHJpb3IgdG8gdGhlIGF0dGFjay4gVGhpcyBmb3JrIGVzc2VudGlhbGx5IHJld3JvdGUgdGhlIGhpc3Rvcnkgb2YgdGhlCkV0aGVyZXVtIG5ldHdvcmsulIWUgZR9lChoBWgGaCBqChMAAGghaANoHWhSaB9LAHViZWgOfZQoaBBdlGgTXZSMDGNoYW5nZS1hZGRlZJRhaBVdlGgXXZRoGV2UdWgcaHZoHWhAaB9LvmggaqASAABoIWgDdWJoAIwKZmllbGRfbGlzdJSTlCmBlH2UKGgFaAZoB12UKGgAjAVmaWVsZJSTlCmBlH2UKGgFaAZoB12UKGgAjApmaWVsZF9uYW1llJOUKYGUfZQoaAWMClBhcmFtZXRlcnOUaAddlGhNjApQYXJhbWV0ZXJzlIWUgZR9lChoBWgGaCBqSBMAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqRhMAAGgdaB5oH0sAaCBqQxMAAHViaACMCmZpZWxkX2JvZHmUk5QpgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMI29sZCAtLSBQcmV2aW91cyBibG9jayBjaGFpbiBvYmplY3QulGgHXZQoaCKMDmxpdGVyYWxfc3Ryb25nlJOUKYGUfZQoaAWMA29sZJRoB12UaE2MA29sZJSFlIGUfZQoaAVoBmggamETAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAtyZWZzcGVjaWZpY5SIjAlweTptb2R1bGWUapwOAACMCHB5OmNsYXNzlE51aBxqXxMAAGgdTmgfTmggalsTAAB1YmhNjCEg4oCTIFByZXZpb3VzIGJsb2NrIGNoYWluIG9iamVjdC6UhZSBlH2UKGgFaAZoIGpbEwAAaCFoA2gdaFJoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1OaB9OaCBqWBMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqVhMAAGgdTmgfTmggakMTAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakETAABoHU5oH05oIGo+EwAAdWJqQhMAACmBlH2UKGgFaAZoB12UKGpHEwAAKYGUfZQoaAWMB1JldHVybnOUaAddlGhNjAdSZXR1cm5zlIWUgZR9lChoBWgGaCBqixMAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqRhMAAGgdaB5oH0sAaCBqiBMAAHVialcTAAApgZR9lChoBWgGaAddlGh3KYGUfZQoaAWMNm5ldyAtLSBVcGdyYWRlZCBibG9jayBjaGFpbiBvYmplY3QgZm9yIHRoaXMgaGFyZCBmb3JrLpRoB12UKGgAjAZzdHJvbmeUk5QpgZR9lChoBYwHKipuZXcqKpRoB12UaE2MA25ld5SFlIGUfZQoaAVoBmggaqITAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaqATAABoHU5oH05oIGqcEwAAdWJoTYw0IOKAkyBVcGdyYWRlZCBibG9jayBjaGFpbiBvYmplY3QgZm9yIHRoaXMgaGFyZCBmb3JrLpSFlIGUfZQoaAVoBmggapwTAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGqZEwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpWEwAAaB1OaB9OaCBqiBMAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQRMAAGgdTmgfTmggaj4TAAB1YmpCEwAAKYGUfZQoaAVoBmgHXZQoakcTAAApgZR9lChoBYwLUmV0dXJuIHR5cGWUaAddlGhNjAtSZXR1cm4gdHlwZZSFlIGUfZQoaAVoBmggaskTAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYTAABoHWgeaB9LAGggasYTAAB1YmpXEwAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjApCbG9ja0NoYWlulGgHXZRqQQYAACmBlH2UKGgFjAxgQmxvY2tDaGFpbmCUaAddlGhNjApCbG9ja0NoYWlulIWUgZR9lChoBWgGaCBq3hMAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQAYAAGgdTmgfTmggatoTAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGrXEwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpWEwAAaB1OaB9OaCBqxhMAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQRMAAGgdTmgfTmggaj4TAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajwTAABoHWhSaB9LAGggaqASAABoIWgDdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGqfDgAAaB1oHmgfSwBoIGpXEgAAaCFoA3ViZWgOfZQoaBBdlGgTXZQoapkSAACMCGZ1bmN0aW9ulGVoFV2UaBddlGgZXZSMBmRvbWFpbpRqmRIAAIwHb2JqdHlwZZRqDRQAAIwIZGVzY3R5cGWUag0UAACMB25vaW5kZXiUiXVoHGpxDgAAaB1oUmgfSwBoIGo7EgAAaCFoA3ViarYOAAApgZR9lChoBYw+ZGVmIGFwcGx5X2Zvcmsob2xkOiBCbG9ja0NoYWluKSAtPiBCbG9ja0NoYWluOgogICAgcmV0dXJuIG9sZAqUaAddlChoTYwzZGVmIGFwcGx5X2Zvcmsob2xkOiBCbG9ja0NoYWluKSAtPiBCbG9ja0NoYWluOgogICAglIWUgZR9lChoBWgGaCBqFRQAAGghaANoHWhSaB9LAHViaiIRAAApgZR9lChoBWgGaAddlGhNjBlhcHBseV9kYW8ob2xkLnN0YXRlKQogICAglIWUgZR9lChoBWgGaCBqHRQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZSMDGNoYW5nZS1hZGRlZJRhaBVdlGgXXZRoGV2UdWgcaiERAABoIGoVFAAAaCFoA2gdaFJoH0sAdWJoTYwLcmV0dXJuIG9sZAqUhZSBlH2UKGgFaAZoIGoVFAAAaCFoA2gdaFJoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllIxQL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsucHmUjAl4bWw6c3BhY2WUauIEAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqzQ4AAEsBc4wHbGluZW5vc5SJdWgcarUOAABoHWgeaB9LxWggajsSAABoIWgDdWJlaA59lChoEF2UaioCAABhaBNdlGgVXZSMCmFwcGx5X2ZvcmuUYWgXXZRoGV2UdWgcaEFoHWgeaB9LsGggakAOAABoIWgDdWJoQimBlH2UKGgFaAZoB12UKGhHKYGUfZQoaAWMGWdldF9sYXN0XzI1Nl9ibG9ja19oYXNoZXOUaAddlGhNjBlnZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzlIWUgZR9lChoBWgGaCBqSBQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoRmgdaB5oH0vKaCBqRRQAAHViaCQpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMB2VudHJpZXOUXZR1aBxoI2gdTmgfTmggakUUAAB1YmpyDgAAKYGUfZQoaAVoBmgHXZQoancOAAApgZR9lChoBYwgZ2V0X2xhc3RfMjU2X2Jsb2NrX2hhc2hlcyhjaGFpbimUaAddlChqfQ4AACmBlH2UKGgFjBlnZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzlGgHXZRoTYwZZ2V0X2xhc3RfMjU2X2Jsb2NrX2hhc2hlc5SFlIGUfZQoaAVoBmggamgUAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UKGqIDgAAaokOAABqig4AAGqLDgAAZWgVXZRoF12UaBldlIwJeG1sOnNwYWNllGriBAAAdWgcanwOAABoHWgeaB9OaCBqZBQAAHViam4SAAApgZR9lChoBYwFY2hhaW6UaAddlGp0EgAAKYGUfZQoaAWMBWNoYWlulGgHXZRqIhEAACmBlH2UKGgFaAZoB12UaE2MBWNoYWlulIWUgZR9lChoBWgGaCBqfxQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRqgxIAAGFoFV2UaBddlGgZXZR1aBxqIREAAGgdTmgfTmggansUAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqcxIAAGgdTmgfTmggancUAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUauIEAAB1aBxqbRIAAGgdaB5oH05oIGpkFAAAdWJlaA59lChoEF2UjDFldGhlcmV1bS5ob21lc3RlYWQuZm9yay5nZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzlGFoE12UKGqTDgAAapQOAACMAnB5lGqWDgAAapcOAABlaBVdlGgXXZRoGV2UjAZtb2R1bGWUapwOAACMBWNsYXNzlGgGjAhmdWxsbmFtZZRqahQAAHVoHGp2DgAAaB1oHmgfS81oIGphFAAAdWJqoA4AACmBlH2UKGgFaAZoB12UKGh3KYGUfZQoaAWMWU9idGFpbiB0aGUgbGlzdCBvZiBoYXNoZXMgb2YgdGhlIHByZXZpb3VzIDI1NiBibG9ja3MgaW4gb3JkZXIgb2YKaW5jcmVhc2luZyBibG9jayBudW1iZXIulGgHXZRoTYxZT2J0YWluIHRoZSBsaXN0IG9mIGhhc2hlcyBvZiB0aGUgcHJldmlvdXMgMjU2IGJsb2NrcyBpbiBvcmRlciBvZgppbmNyZWFzaW5nIGJsb2NrIG51bWJlci6UhZSBlH2UKGgFaAZoIGqoFAAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1oHmgfS9BoIGqlFAAAdWJodymBlH2UKGgFjD9UaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIGxlc3MgaGFzaGVzIGZvciB0aGUgZmlyc3QgMjU2IGJsb2Nrcy6UaAddlGhNjD9UaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIGxlc3MgaGFzaGVzIGZvciB0aGUgZmlyc3QgMjU2IGJsb2Nrcy6UhZSBlH2UKGgFaAZoIGq2FAAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1oHmgfS9NoIGqlFAAAdWJodymBlH2UKGgFjHBUaGUgYGBCTE9DS0hBU0hgYCBvcGNvZGUgbmVlZHMgdG8gYWNjZXNzIHRoZSBsYXRlc3QgaGFzaGVzIG9uIHRoZSBjaGFpbiwKdGhlcmVmb3JlIHRoaXMgZnVuY3Rpb24gcmV0cmlldmVzIHRoZW0ulGgHXZQoaE2MBFRoZSCUhZSBlH2UKGgFaAZoIGrEFAAAaCFoA2gdaFJoH0sAdWJqWAUAACmBlH2UKGgFjA1gYEJMT0NLSEFTSGBglGgHXZRoTYwJQkxPQ0tIQVNIlIWUgZR9lChoBWgGaCBqzBQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqVwUAAGgdTmgfTmggasQUAAB1YmhNjF8gb3Bjb2RlIG5lZWRzIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IGhhc2hlcyBvbiB0aGUgY2hhaW4sCnRoZXJlZm9yZSB0aGlzIGZ1bmN0aW9uIHJldHJpZXZlcyB0aGVtLpSFlIGUfZQoaAVoBmggasQUAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHWgeaB9L1WggaqUUAAB1Ymo9EwAAKYGUfZQoaAVoBmgHXZQoakITAAApgZR9lChoBWgGaAddlChqRxMAACmBlH2UKGgFjApQYXJhbWV0ZXJzlGgHXZRoTYwKUGFyYW1ldGVyc5SFlIGUfZQoaAVoBmggauoUAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYTAABoHWgeaB9LAGggaucUAAB1YmpXEwAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjCNjaGFpbiAtLSBIaXN0b3J5IGFuZCBjdXJyZW50IHN0YXRlLpRoB12UKGpgEwAAKYGUfZQoaAWMBWNoYWlulGgHXZRoTYwFY2hhaW6UhZSBlH2UKGgFaAZoIGr/FAAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwLcmVmc3BlY2lmaWOUiIwJcHk6bW9kdWxllGqcDgAAjAhweTpjbGFzc5ROdWgcal8TAABoHU5oH05oIGr7FAAAdWJoTYwfIOKAkyBIaXN0b3J5IGFuZCBjdXJyZW50IHN0YXRlLpSFlIGUfZQoaAVoBmggavsUAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGr4FAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpWEwAAaB1OaB9OaCBq5xQAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQRMAAGgdTmgfTmggauQUAAB1YmpCEwAAKYGUfZQoaAVoBmgHXZQoakcTAAApgZR9lChoBYwHUmV0dXJuc5RoB12UaE2MB1JldHVybnOUhZSBlH2UKGgFaAZoIGopFQAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpGEwAAaB1oHmgfSwBoIGomFQAAdWJqVxMAACmBlH2UKGgFaAZoB12UaHcpgZR9lChoBYxbcmVjZW50X2Jsb2NrX2hhc2hlcyAtLSBIYXNoZXMgb2YgdGhlIHJlY2VudCAyNTYgYmxvY2tzIGluIG9yZGVyIG9mIGluY3JlYXNpbmcgYmxvY2sgbnVtYmVyLpRoB12UKGqhEwAAKYGUfZQoaAWMFyoqcmVjZW50X2Jsb2NrX2hhc2hlcyoqlGgHXZRoTYwTcmVjZW50X2Jsb2NrX2hhc2hlc5SFlIGUfZQoaAVoBmggaj4VAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaqATAABoHU5oH05oIGo6FQAAdWJoTYxJIOKAkyBIYXNoZXMgb2YgdGhlIHJlY2VudCAyNTYgYmxvY2tzIGluIG9yZGVyIG9mIGluY3JlYXNpbmcgYmxvY2sgbnVtYmVyLpSFlIGUfZQoaAVoBmggajoVAABoIWgDaB1oUmgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGo3FQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpWEwAAaB1OaB9OaCBqJhUAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQRMAAGgdTmgfTmggauQUAAB1YmpCEwAAKYGUfZQoaAVoBmgHXZQoakcTAAApgZR9lChoBYwLUmV0dXJuIHR5cGWUaAddlGhNjAtSZXR1cm4gdHlwZZSFlIGUfZQoaAVoBmggamUVAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcakYTAABoHWgeaB9LAGggamIVAAB1YmpXEwAAKYGUfZQoaAVoBmgHXZRodymBlH2UKGgFjAxMaXN0W0hhc2gzMl2UaAddlGpBBgAAKYGUfZQoaAWMDmBMaXN0W0hhc2gzMl1glGgHXZRoTYwMTGlzdFtIYXNoMzJdlIWUgZR9lChoBWgGaCBqehUAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQAYAAGgdTmgfTmgganYVAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaHZoHU5oH05oIGpzFQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpWEwAAaB1OaB9OaCBqYhUAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqQRMAAGgdTmgfTmggauQUAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajwTAABoHU5oH05oIGqlFAAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGqfDgAAaB1oHmgfTmggamEUAAB1YmVoDn2UKGgQXZRoE12UKGqeFAAAjAhmdW5jdGlvbpRlaBVdlGgXXZRoGV2UjAZkb21haW6Uap4UAACMB29ianR5cGWUaqkVAACMCGRlc2N0eXBllGqpFQAAjAdub2luZGV4lIl1aBxqcQ4AAGgdTmgfTmggakUUAAB1Ymq2DgAAKYGUfZQoaAVY3wIAAGRlZiBnZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzKGNoYWluOiBCbG9ja0NoYWluKSAtPiBMaXN0W0hhc2gzMl06CiAgICByZWNlbnRfYmxvY2tzID0gY2hhaW4uYmxvY2tzWy0yNTU6XQogICAgIyBUT0RPOiBUaGlzIGZ1bmN0aW9uIGhhcyBub3QgYmVlbiB0ZXN0ZWQgcmlnb3JvdXNseQogICAgaWYgbGVuKHJlY2VudF9ibG9ja3MpID09IDA6CiAgICAgICAgcmV0dXJuIFtdCgogICAgcmVjZW50X2Jsb2NrX2hhc2hlcyA9IFtdCgogICAgZm9yIGJsb2NrIGluIHJlY2VudF9ibG9ja3M6CiAgICAgICAgcHJldl9ibG9ja19oYXNoID0gYmxvY2suaGVhZGVyLnBhcmVudF9oYXNoCiAgICAgICAgcmVjZW50X2Jsb2NrX2hhc2hlcy5hcHBlbmQocHJldl9ibG9ja19oYXNoKQoKICAgICMgV2UgYXJlIGNvbXB1dGluZyB0aGUgaGFzaCBvbmx5IGZvciB0aGUgbW9zdCByZWNlbnQgYmxvY2sgYW5kIG5vdCBmb3IKICAgICMgdGhlIHJlc3Qgb2YgdGhlIGJsb2NrcyBhcyB0aGV5IGhhdmUgc3VjY2Vzc29ycyB3aGljaCBoYXZlIHRoZSBoYXNoIG9mCiAgICAjIHRoZSBjdXJyZW50IGJsb2NrIGFzIHBhcmVudCBoYXNoLgogICAgbW9zdF9yZWNlbnRfYmxvY2tfaGFzaCA9IGtlY2NhazI1NihybHAuZW5jb2RlKHJlY2VudF9ibG9ja3NbLTFdLmhlYWRlcikpCiAgICByZWNlbnRfYmxvY2tfaGFzaGVzLmFwcGVuZChtb3N0X3JlY2VudF9ibG9ja19oYXNoKQoKICAgIHJldHVybiByZWNlbnRfYmxvY2tfaGFzaGVzCpRoB12UaE1Y3wIAAGRlZiBnZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzKGNoYWluOiBCbG9ja0NoYWluKSAtPiBMaXN0W0hhc2gzMl06CiAgICByZWNlbnRfYmxvY2tzID0gY2hhaW4uYmxvY2tzWy0yNTU6XQogICAgIyBUT0RPOiBUaGlzIGZ1bmN0aW9uIGhhcyBub3QgYmVlbiB0ZXN0ZWQgcmlnb3JvdXNseQogICAgaWYgbGVuKHJlY2VudF9ibG9ja3MpID09IDA6CiAgICAgICAgcmV0dXJuIFtdCgogICAgcmVjZW50X2Jsb2NrX2hhc2hlcyA9IFtdCgogICAgZm9yIGJsb2NrIGluIHJlY2VudF9ibG9ja3M6CiAgICAgICAgcHJldl9ibG9ja19oYXNoID0gYmxvY2suaGVhZGVyLnBhcmVudF9oYXNoCiAgICAgICAgcmVjZW50X2Jsb2NrX2hhc2hlcy5hcHBlbmQocHJldl9ibG9ja19oYXNoKQoKICAgICMgV2UgYXJlIGNvbXB1dGluZyB0aGUgaGFzaCBvbmx5IGZvciB0aGUgbW9zdCByZWNlbnQgYmxvY2sgYW5kIG5vdCBmb3IKICAgICMgdGhlIHJlc3Qgb2YgdGhlIGJsb2NrcyBhcyB0aGV5IGhhdmUgc3VjY2Vzc29ycyB3aGljaCBoYXZlIHRoZSBoYXNoIG9mCiAgICAjIHRoZSBjdXJyZW50IGJsb2NrIGFzIHBhcmVudCBoYXNoLgogICAgbW9zdF9yZWNlbnRfYmxvY2tfaGFzaCA9IGtlY2NhazI1NihybHAuZW5jb2RlKHJlY2VudF9ibG9ja3NbLTFdLmhlYWRlcikpCiAgICByZWNlbnRfYmxvY2tfaGFzaGVzLmFwcGVuZChtb3N0X3JlY2VudF9ibG9ja19oYXNoKQoKICAgIHJldHVybiByZWNl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ZWQgdG8gYmUgdmVyaWZpZWQgYmVmb3JlIGJlaW5nIGFkZGVkCnRvIHRoZSBjaGFpbi4gQmxvY2tzIGFyZSB2ZXJpZmllZCBieSBlbnN1cmluZyB0aGF0IHRoZSBjb250ZW50cyBvZiB0aGUKYmxvY2sgbWFrZSBsb2dpY2FsIHNlbnNlIHdpdGggdGhlIGNvbnRlbnRzIG9mIHRoZSBwYXJlbnQgYmxvY2suIFRoZQppbmZvcm1hdGlvbiBpbiB0aGUgYmxvY2sncyBoZWFkZXIgbXVzdCBhbHNvIG1hdGNoIHRoZSBjb3JyZXNwb25kaW5nCmluZm9ybWF0aW9uIGluIHRoZSBibG9jay6UaAddlGhNWDUBAABBbGwgcGFydHMgb2YgdGhlIGJsb2Nr4oCZcyBjb250ZW50cyBuZWVkIHRvIGJlIHZlcmlmaWVkIGJlZm9yZSBiZWluZyBhZGRlZAp0byB0aGUgY2hhaW4uIEJsb2NrcyBhcmUgdmVyaWZpZWQgYnkgZW5zdXJpbmcgdGhhdCB0aGUgY29udGVudHMgb2YgdGhlCmJsb2NrIG1ha2UgbG9naWNhbCBzZW5zZSB3aXRoIHRoZSBjb250ZW50cyBvZiB0aGUgcGFyZW50IGJsb2NrLiBUaGUKaW5mb3JtYXRpb24gaW4gdGhlIGJsb2Nr4oCZcyBoZWFkZXIgbXVzdCBhbHNvIG1hdGNoIHRoZSBjb3JyZXNwb25kaW5nCmluZm9ybWF0aW9uIGluIHRoZSBibG9jay6UhZSBlH2UKGgFaAZoIGpYFgAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1oHmgfS+1oIGpHFgAAdWJodymBlH2UKGgFjPxUbyBpbXBsZW1lbnQgRXRoZXJldW0sIGluIHRoZW9yeSBjbGllbnRzIGFyZSBvbmx5IHJlcXVpcmVkIHRvIHN0b3JlIHRoZQptb3N0IHJlY2VudCAyNTUgYmxvY2tzIG9mIHRoZSBjaGFpbiBzaW5jZSBhcyBmYXIgYXMgZXhlY3V0aW9uIGlzCmNvbmNlcm5lZCwgb25seSB0aG9zZSBibG9ja3MgYXJlIGFjY2Vzc2VkLiBQcmFjdGljYWxseSwgaG93ZXZlciwgY2xpZW50cwpzaG91bGQg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akAWAACMB29ianR5cGWUahEXAACMCGRlc2N0eXBllGoRFwAAjAdub2luZGV4lIl1aBxqcQ4AAGgdTmgfTmggas8VAAB1Ymq2DgAAKYGUfZQoaAVYqgQAAGRlZiBzdGF0ZV90cmFuc2l0aW9uKGNoYWluOiBCbG9ja0NoYWluLCBibG9jazogQmxvY2spIC0+IE5vbmU6CiAgICBwYXJlbnRfaGVhZGVyID0gY2hhaW4uYmxvY2tzWy0xXS5oZWFkZXIKICAgIHZhbGlkYXRlX2hlYWRlcihibG9jay5oZWFkZXIsIHBhcmVudF9oZWFkZXIpCiAgICB2YWxpZGF0ZV9vbW1lcnMoYmxvY2sub21tZXJzLCBibG9jay5oZWFkZXIsIGNoYWluKQogICAgKAogICAgICAgIGdhc191c2VkLAogICAgICAgIHRyYW5zYWN0aW9uc19yb290LAogICAgICAgIHJlY2VpcHRfcm9vdCwKICAgICAgICBibG9ja19sb2dzX2Jsb29tLAogICAgICAgIHN0YXRlLAogICAgKSA9IGFwcGx5X2JvZHkoCiAgICAgICAgY2hhaW4uc3RhdGUsCiAgICAgICAgZ2V0X2xhc3RfMjU2X2Jsb2NrX2hhc2hlcyhjaGFpbiksCiAgICAgICAgYmxvY2suaGVhZGVyLmNvaW5iYXNlLAogICAgICAgIGJsb2NrLmhlYWRlci5udW1iZXIsCiAgICAgICAgYmxvY2suaGVhZGVyLmdhc19saW1pdCwKICAgICAgICBibG9jay5oZWFkZXIudGltZXN0YW1wLAogICAgICAgIGJsb2NrLmhlYWRlci5kaWZmaWN1bHR5LAogICAgICAgIGJsb2NrLnRyYW5zYWN0aW9ucywKICAgICAgICBibG9jay5vbW1lcnMsCiAgICApCiAgICBlbnN1cmUoZ2FzX3VzZWQgPT0gYmxvY2suaGVhZGVyLmdhc191c2VkLCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUodHJhbnNhY3Rpb25zX3Jvb3QgPT0gYmxvY2suaGVhZGVyLnRyYW5zYWN0aW9uc19yb290LCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUoc3RhdGVfcm9vdChzdGF0ZSkgPT0gYmxvY2suaGVhZGVyLnN0YXRlX3Jvb3QsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZShyZWNlaXB0X3Jvb3QgPT0gYmxvY2suaGVhZGVyLnJlY2VpcHRfcm9vdCwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKGJsb2NrX2xvZ3NfYmxvb20gPT0gYmxvY2suaGVhZGVyLmJsb29tLCBJbnZhbGlkQmxvY2spCgogICAgY2hhaW4uYmxvY2tzLmFwcGVuZChibG9jaykKICAgIGlmIGxlbihjaGFpbi5ibG9ja3MpID4gMjU1OgogICAgICAgICMgUmVhbCBjbGllbnRzIGhhdmUgdG8gc3RvcmUgbW9yZSBibG9ja3MgdG8gZGVhbCB3aXRoIHJlb3JncywgYnV0IHRoZQogICAgICAgICMgcHJvdG9jb2wgb25seSByZXF1aXJlcyB0aGUgbGFzdCAyNTUKICAgICAgICBjaGFpbi5ibG9ja3MgPSBjaGFpbi5ibG9ja3NbLTI1NTpdCpRoB12UaE1YqgQAAGRlZiBzdGF0ZV90cmFuc2l0aW9uKGNoYWluOiBCbG9ja0NoYWluLCBibG9jazogQmxvY2spIC0+IE5vbmU6CiAgICBwYXJlbnRfaGVhZGVyID0gY2hhaW4uYmxvY2tzWy0xXS5oZWFkZXIKICAgIHZhbGlkYXRlX2hlYWRlcihibG9jay5oZWFkZXIsIHBhcmVudF9oZWFkZXIpCiAgICB2YWxpZGF0ZV9vbW1lcnMoYmxvY2sub21tZXJzLCBibG9jay5oZWFkZXIsIGNoYWluKQogICAgKAogICAgICAgIGdhc191c2VkLAogICAgICAgIHRyYW5zYWN0aW9uc19yb290LAogICAgICAgIHJlY2VpcHRfcm9vdCwKICAgICAgICBibG9ja19sb2dzX2Jsb29tLAogICAgICAgIHN0YXRlLAogICAgKSA9IGFwcGx5X2JvZHkoCiAgICAgICAgY2hhaW4uc3RhdGUsCiAgICAgICAgZ2V0X2xhc3RfMjU2X2Jsb2NrX2hhc2hlcyhjaGFpbiksCiAgICAgICAgYmxvY2suaGVhZGVyLmNvaW5iYXNlLAogICAgICAgIGJsb2NrLmhlYWRlci5udW1iZXIsCiAgICAgICAgYmxvY2suaGVhZGVyLmdhc19saW1pdCwKICAgICAgICBibG9jay5oZWFkZXIudGltZXN0YW1wLAogICAgICAgIGJsb2NrLmhlYWRlci5kaWZmaWN1bHR5LAogICAgICAgIGJsb2NrLnRyYW5zYWN0aW9ucywKICAgICAgICBibG9jay5vbW1lcnMsCiAgICApCiAgICBlbnN1cmUoZ2FzX3VzZWQgPT0gYmxvY2suaGVhZGVyLmdhc191c2VkLCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUodHJhbnNhY3Rpb25zX3Jvb3QgPT0gYmxvY2suaGVhZGVyLnRyYW5zYWN0aW9uc19yb290LCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUoc3RhdGVfcm9vdChzdGF0ZSkgPT0gYmxvY2suaGVhZGVyLnN0YXRlX3Jvb3QsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZShyZWNlaXB0X3Jvb3QgPT0gYmxvY2suaGVhZGVyLnJlY2VpcHRfcm9vdCwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKGJsb2NrX2xvZ3NfYmxvb20gPT0gYmxvY2suaGVhZGVyLmJsb29tLCBJbnZhbGlkQmxvY2spCgogICAgY2hhaW4uYmxvY2tzLmFwcGVuZChibG9jaykKICAgIGlmIGxlbihjaGFpbi5ibG9ja3MpID4gMjU1OgogICAgICAgICMgUmVhbCBjbGllbnRzIGhhdmUgdG8gc3RvcmUgbW9yZSBibG9ja3MgdG8gZGVhbCB3aXRoIHJlb3JncywgYnV0IHRoZQogICAgICAgICMgcHJvdG9jb2wgb25seSByZXF1aXJlcyB0aGUgbGFzdCAyNTUKICAgICAgICBjaGFpbi5ibG9ja3MgPSBjaGFpbi5ibG9ja3NbLTI1NTpdCpSFlIGUfZQoaAVoBmggahkXAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjFAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay5weZSMCXhtbDpzcGFjZZRq4gQAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJn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ICAgICAgICBwYXJlbnRfaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBwYXJlbnRfaGVhZGVyLmRpZmZpY3VsdHksCiAgICApCiAgICBlbnN1cmUoaGVhZGVyLmRpZmZpY3VsdHkgPT0gYmxvY2tfZGlmZmljdWx0eSwgSW52YWxpZEJsb2NrKQoKICAgIGJsb2NrX3BhcmVudF9oYXNoID0ga2VjY2FrMjU2KHJscC5lbmNvZGUocGFyZW50X2hlYWRlcikpCiAgICBlbnN1cmUoaGVhZGVyLnBhcmVudF9oYXNoID09IGJsb2NrX3BhcmVudF9oYXNoLCBJbnZhbGlkQmxvY2spCgogICAgdmFsaWRhdGVfcHJvb2Zfb2Zfd29yayhoZWFkZXIpCpRoB12UKGhNWOMCAABkZWYgdmFsaWRhdGVfaGVhZGVyKGhlYWRlcjogSGVhZGVyLCBwYXJlbnRfaGVhZGVyOiBIZWFkZXIpIC0+IE5vbmU6CiAgICBlbnN1cmUoaGVhZGVyLnRpbWVzdGFtcCA+IHBhcmVudF9oZWFkZXIudGltZXN0YW1wLCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUoaGVhZGVyLm51bWJlciA9PSBwYXJlbnRfaGVhZGVyLm51bWJlciArIDEsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZSgKICAgICAgICBjaGVja19nYXNfbGltaXQoaGVhZGVyLmdhc19saW1pdCwgcGFyZW50X2hlYWRlci5nYXNfbGltaXQpLAogICAgICAgIEludmFsaWRCbG9jaywKICAgICkKICAgIGVuc3VyZShsZW4oaGVhZGVyLmV4dHJhX2RhdGEpIDw9IDMyLCBJbnZhbGlkQmxvY2spCgogICAgYmxvY2tfZGlmZmljdWx0eSA9IGNhbGN1bGF0ZV9ibG9ja19kaWZmaWN1bHR5KAogICAgICAgIGhlYWRlci5udW1iZXIsCiAgICAgICAgaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBwYXJlbnRfaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBwYXJlbnRfaGVhZGVyLmRpZmZpY3VsdHksCiAgICApCiAgICBlbnN1cmUoaGVhZGVyLmRpZmZpY3VsdHkgPT0gYmxvY2tfZGlmZmljdWx0eSwgSW52YWxpZEJsb2NrKQoKICAgIGJsb2NrX3BhcmVudF9oYXNoID0ga2VjY2FrMjU2KHJscC5lbmNvZGUocGFyZW50X2hlYWRlcikpCiAgICBlbnN1cmUoaGVhZGVyLnBhcmVudF9oYXNoID09IGJsb2NrX3BhcmVudF9oYXNoLCBJbnZhbGlkQmxvY2spCgogICAglIWUgZR9lChoBWgGaCBqdRgAAGghaANoHWhSaB9LAHViaiIRAAApgZR9lChoBWgGaAddlGhNjMVpZiAoCiAgICAgICAgaGVhZGVyLm51bWJlciA+PSBGT1JLX0NSSVRFUklBLmJsb2NrX251bWJlcgogICAgICAgIGFuZCBoZWFkZXIubnVtYmVyIDwgRk9SS19DUklURVJJQS5ibG9ja19udW1iZXIgKyAxMAogICAgKToKICAgICAgICBlbnN1cmUoaGVhZGVyLmV4dHJhX2RhdGEgPT0gYiJkYW8taGFyZC1mb3JrIiwgSW52YWxpZEJsb2NrKQoKICAgIJSFlIGUfZQoaAVoBmggan0YAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UjAxjaGFuZ2UtYWRkZWSUYWgVXZRoF12UaBldlHVoHGohEQAAaCBqdRgAAGghaANoHWhSaB9LAHViaE2MH3ZhbGlkYXRlX3Byb29mX29mX3dvcmsoaGVhZGVyKQqUhZSBlH2UKGgFaAZoIGp1GAAAaCFoA2gdaFJoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllIxQL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsucHmUjAl4bWw6c3BhY2WUauIEAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqzQ4AAEsBc4wHbGluZW5vc5SJdWgcarUOAABoHWgeaB9NGAFoIGo3FwAAaCFoA3ViZWgOfZQoaBBdlGqQAgAAYWgTXZRoFV2UjA92YWxpZGF0ZV9oZWFkZXKUYWgXXZRoGV2UdWgcaEFoHWgeaB9NAwFoIGpADgAAaCFoA3ViaEIpgZR9lChoBWgG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TmgfTmggagUZAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcap8OAABoHWgeaB9OaCBqwRgAAHViZWgOfZQoaBBdlGgTXZQoav4YAACMCGZ1bmN0aW9ulGVoFV2UaBddlGgZXZSMBmRvbWFpbpRq/hgAAIwHb2JqdHlwZZRqPxoAAIwIZGVzY3R5cGWUaj8aAACMB25vaW5kZXiUiXVoHGpxDgAAaB1OaB9OaCBqpRgAAHViarYOAAApgZR9lChoBVgDAgAAZGVmIGdlbmVyYXRlX2hlYWRlcl9oYXNoX2Zvcl9wb3coaGVhZGVyOiBIZWFkZXIpIC0+IEhhc2gzMjoKICAgIGhlYWRlcl9kYXRhX3dpdGhvdXRfcG93X2FydGVmYWN0cyA9IFsKICAgICAgICBoZWFkZXIucGFyZW50X2hhc2gsCiAgICAgICAgaGVhZGVyLm9tbWVyc19oYXNoLAogICAgICAgIGhlYWRlci5jb2luYmFzZSwKICAgICAgICBoZWFkZXIuc3RhdGVfcm9vdCwKICAgICAgICBoZWFkZXIudHJhbnNhY3Rpb25zX3Jvb3QsCiAgICAgICAgaGVhZGVyLnJlY2VpcHRfcm9vdCwKICAgICAgICBoZWFkZXIuYmxvb20sCiAgICAgICAgaGVhZGVyLmRpZmZpY3VsdHksCiAgICAgICAgaGVhZGVyLm51bWJlciwKICAgICAgICBoZWFkZXIuZ2FzX2xpbWl0LAogICAgICAgIGhlYWRlci5nYXNfdXNlZCwKICAgICAgICBoZWFkZXIudGltZXN0YW1wLAogICAgICAgIGhlYWRlci5leHRyYV9kYXRhLAogICAgXQoKICAgIHJldHVybiBybHAucmxwX2hhc2goaGVhZGVyX2RhdGFfd2l0aG91dF9wb3dfYXJ0ZWZhY3RzKQqUaAddlGhNWAMCAABkZWYgZ2VuZXJhdGVfaGVhZGVyX2hhc2hfZm9yX3BvdyhoZWFkZXI6IEhlYWRlcikgLT4gSGFzaDMyOgogICAgaGVhZGVyX2RhdGFfd2l0aG91dF9wb3dfYXJ0ZWZhY3RzID0gWwogICAgICAgIGhlYWRlci5wYXJlbnRfaGFzaCwKICAgICAgICBoZWFkZXIub21tZXJzX2hhc2gsCiAgICAgICAgaGVh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PD0gKFUyNTZfQ0VJTF9WQUxVRSAvLyBoZWFkZXIuZGlmZmljdWx0eSksCiAgICAgICAgSW52YWxpZEJsb2NrLAogICAgKQqUaAddlGhNWDYCAABkZWYgdmFsaWRhdGVfcHJvb2Zfb2Zfd29yayhoZWFkZXI6IEhlYWRlcikgLT4gTm9uZToKICAgIGhlYWRlcl9oYXNoID0gZ2VuZXJhdGVfaGVhZGVyX2hhc2hfZm9yX3BvdyhoZWFkZXIpCiAgICAjIFRPRE86IE1lbW9pemUgdGhpcyBzb21ld2hlcmUgYW5kIHJlYWQgZnJvbSB0aGF0IGRhdGEgaW5zdGVhZCBvZgogICAgIyBjYWxjdWxhdGluZyBjYWNoZSBmb3IgZXZlcnkgYmxvY2sgdmFsaWRhdGlvbi4KICAgIGNhY2hlID0gZ2VuZXJhdGVfY2FjaGUoaGVhZGVyLm51bWJlcikKICAgIG1peF9kaWdlc3QsIHJlc3VsdCA9IGhhc2hpbW90b19saWdodCgKICAgICAgICBoZWFkZXJfaGFzaCwgaGVhZGVyLm5vbmNlLCBjYWNoZSwgZGF0YXNldF9zaXplKGhlYWRlci5udW1iZXIpCiAgICApCgogICAgZW5zdXJlKG1peF9kaWdlc3QgPT0gaGVhZGVyLm1peF9kaWdlc3QsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZSgKICAgICAgICBVaW50LmZyb21fYmVfYnl0ZXMocmVzdWx0KSA8PSAoVTI1Nl9DRUlMX1ZBTFVFIC8vIGhlYWRlci5kaWZmaWN1bHR5KSwKICAgICAgICBJbnZhbGlkQmxvY2ssCiAgICApCpSFlIGUfZQoaAVoBmgganMbAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjFAvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9ob21lc3RlYWQvZm9yay5weZSMCXhtbDpzcGFjZZRq4gQAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGrNDgAASwFzjAdsaW5lbm9zlIl1aBxqtQ4AAGgdaB5oH01O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aBBdlGgTXZQoagQeAACMCGZ1bmN0aW9ulGVoFV2UaBddlGgZXZSMBmRvbWFpbpRqBB4AAIwHb2JqdHlwZZRqUx8AAIwIZGVzY3R5cGWUalMfAACMB25vaW5kZXiUiXVoHGpxDgAAaB1OaB9OaCBqYx0AAHViarYOAAApgZR9lChoBVg8AQAAZGVmIG1ha2VfcmVjZWlwdCgKICAgIHR4OiBUcmFuc2FjdGlvbiwKICAgIHBvc3Rfc3RhdGU6IEJ5dGVzMzIsCiAgICBjdW11bGF0aXZlX2dhc191c2VkOiBVaW50LAogICAgbG9nczogVHVwbGVbTG9nLCAuLi5dLAopIC0+IFJlY2VpcHQ6CiAgICByZWNlaXB0ID0gUmVjZWlwdCgKICAgICAgICBwb3N0X3N0YXRlPXBvc3Rfc3RhdGUsCiAgICAgICAgY3VtdWxhdGl2ZV9nYXNfdXNlZD1jdW11bGF0aXZlX2dhc191c2VkLAogICAgICAgIGJsb29tPWxvZ3NfYmxvb20obG9ncyksCiAgICAgICAgbG9ncz1sb2dzLAogICAgKQoKICAgIHJldHVybiByZWNlaXB0CpRoB12UaE1YPAEAAGRlZiBtYWtlX3JlY2VpcHQoCiAgICB0eDogVHJhbnNhY3Rpb24sCiAgICBwb3N0X3N0YXRlOiBCeXRlczMyLAogICAgY3VtdWxhdGl2ZV9nYXNfdXNlZDogVWludCwKICAgIGxvZ3M6IFR1cGxlW0xvZywgLi4uXSwKKSAtPiBSZWNlaXB0OgogICAgcmVjZWlwdCA9IFJlY2VpcHQoCiAgICAgICAgcG9zdF9zdGF0ZT1wb3N0X3N0YXRlLAogICAgICAgIGN1bXVsYXRpdmVfZ2FzX3VzZWQ9Y3VtdWxhdGl2ZV9nYXNfdXNlZCwKICAgICAgICBibG9vbT1sb2dzX2Jsb29tKGxvZ3MpLAogICAgICAgIGxvZ3M9bG9ncywKICAgICkKCiAgICByZXR1cm4gcmVjZWlwdAqUhZSBlH2UKGgFaAZoIGpbHwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllIxQL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9z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ICAgICkKICAgIHJlY2VpcHRzX3RyaWU6IFRyaWVbQnl0ZXMsIE9wdGlvbmFsW1JlY2VpcHRdXSA9IFRyaWUoCiAgICAgICAgc2VjdXJlZD1GYWxzZSwgZGVmYXVsdD1Ob25lCiAgICApCiAgICBibG9ja19sb2dzOiBUdXBsZVtMb2csIC4uLl0gPSAoKQoKICAgIGZvciBpLCB0eCBpbiBlbnVtZXJhdGUodHJhbnNhY3Rpb25zKToKICAgICAgICB0cmllX3NldCh0cmFuc2FjdGlvbnNfdHJpZSwgcmxwLmVuY29kZShVaW50KGkpKSwgdHgpCgogICAgICAgIHNlbmRlcl9hZGRyZXNzID0gY2hlY2tfdHJhbnNhY3Rpb24odHgsIGdhc19hdmFpbGFibGUpCgogICAgICAgIGVudiA9IHZtLkVudmlyb25tZW50KAogICAgICAgICAgICBjYWxsZXI9c2VuZGVyX2FkZHJlc3MsCiAgICAgICAgICAgIG9yaWdpbj1zZW5kZXJfYWRkcmVzcywKICAgICAgICAgICAgYmxvY2tfaGFzaGVzPWJsb2NrX2hhc2hlcywKICAgICAgICAgICAgY29pbmJhc2U9Y29pbmJhc2UsCiAgICAgICAgICAgIG51bWJlcj1ibG9ja19udW1iZXIsCiAgICAgICAgICAgIGdhc19saW1pdD1ibG9ja19nYXNfbGltaXQsCiAgICAgICAgICAgIGdhc19wcmljZT10eC5nYXNfcHJpY2UsCiAgICAgICAgICAgIHRpbWU9YmxvY2tfdGltZSwKICAgICAgICAgICAgZGlmZmljdWx0eT1ibG9ja19kaWZmaWN1bHR5LAogICAgICAgICAgICBzdGF0ZT1zdGF0ZSwKICAgICAgICAgICAgdHJhY2VzPVtdLAogICAgICAgICkKCiAgICAgICAgZ2FzX3VzZWQsIGxvZ3MgPSBwcm9jZXNzX3RyYW5zYWN0aW9uKGVudiwgdHgpCiAgICAgICAgZ2FzX2F2YWlsYWJsZSAtPSBnYXNfdXNlZAoKICAgICAgICByZWNlaXB0ID0gbWFrZV9yZWNlaXB0KAogICAgICAgICAgICB0eCwgc3RhdGVfcm9vdChzdGF0ZSksIChibG9ja19nYXNfbGltaXQgLSBnYXNfYXZhaWxhYmxlKSwgbG9ncwogICAgICAgICkKCiAgICAgICAgdHJpZV9zZXQoCiAgICAgICAgICAgIHJlY2VpcHRzX3RyaWUsCiAgICAgICAgICAgIHJscC5lbmNvZGUoVWludChpKSksCiAgICAgICAgICAgIHJlY2VpcHQsCiAgICAgICAgKQoKICAgICAgICBibG9ja19sb2dzICs9IGxvZ3MKCiAgICBwYXlfcmV3YXJkcyhzdGF0ZSwgYmxvY2tfbnVtYmVyLCBjb2luYmFzZSwgb21tZXJzKQoKICAgIGJsb2NrX2dhc191c2VkID0gYmxvY2tfZ2FzX2xpbWl0IC0gZ2FzX2F2YWlsYWJsZQoKICAgIGJsb2NrX2xvZ3NfYmxvb20gPSBsb2dzX2Jsb29tKGJsb2NrX2xvZ3MpCgogICAgcmV0dXJuICgKICAgICAgICBibG9ja19nYXNfdXNlZCwKICAgICAgICByb290KHRyYW5zYWN0aW9uc190cmllKSwKICAgICAgICByb290KHJlY2VpcHRzX3RyaWUpLAogICAgICAgIGJsb2NrX2xvZ3NfYmxvb20sCiAgICAgICAgc3RhdGUsCiAgICApCpRoB12UaE1YFQcAAGRlZiBhcHBseV9ib2R5KAogICAgc3RhdGU6IFN0YXRlLAogICAgYmxvY2tfaGFzaGVzOiBMaXN0W0hhc2gzMl0sCiAgICBjb2luYmFzZTogQWRkcmVzcywKICAgIGJsb2NrX251bWJlcjogVWludCwKICAgIGJsb2NrX2dhc19saW1pdDogVWludCwKICAgIGJsb2NrX3RpbWU6IFUyNTYsCiAgICBibG9ja19kaWZmaWN1bHR5OiBVaW50LAogICAgdHJhbnNhY3Rpb25zOiBUdXBsZVtUcmFuc2FjdGlvbiwgLi4uXSwKICAgIG9tbWVyczogVHVwbGVbSGVhZGVyLCAuLi5dLAopIC0+IFR1cGxlW1VpbnQsIFJvb3QsIFJvb3QsIEJsb29tLCBTdGF0ZV06CiAgICBnYXNfYXZhaWxhYmxlID0gYmxvY2tfZ2FzX2xpbWl0CiAgICB0cmFuc2FjdGlvbnNfdHJpZTogVHJpZVtCeXRlcywgT3B0aW9uYWxbVHJhbnNhY3Rpb25dXSA9IFRyaWUoCiAgICAgICAgc2VjdXJlZD1GYWxzZSwgZGVmYXVsdD1Ob25lCiAgICApCiAgICByZWNlaXB0c190cmllOiBUcmllW0J5dGVzLCBPcHRpb25hbFtSZWNlaXB0XV0gPSBUcmllKAogICAgICAgIHNlY3VyZWQ9RmFsc2UsIGRlZmF1bHQ9Tm9uZQogICAgKQogICAgYmxvY2tfbG9nczogVHVwbGVbTG9nLCAuLi5dID0gKCkKCiAgICBmb3IgaSwgdHggaW4gZW51bWVyYXRlKHRyYW5zYWN0aW9ucyk6CiAgICAgICAgdHJpZV9zZXQodHJhbnNhY3Rpb25zX3RyaWUsIHJscC5lbmNvZGUoVWludChpKSksIHR4KQoKICAgICAgICBzZW5kZXJfYWRkcmVzcyA9IGNoZWNrX3RyYW5zYWN0aW9uKHR4LCBnYXNfYXZhaWxhYmxlKQoKICAgICAgICBlbnYgPSB2bS5FbnZpcm9ubWVudCgKICAgICAgICAgICAgY2FsbGVyPXNlbmRlcl9hZGRyZXNzLAogICAgICAgICAgICBvcmlnaW49c2VuZGVyX2FkZHJlc3MsCiAgICAgICAgICAgIGJsb2NrX2hhc2hlcz1ibG9ja19oYXNoZXMsCiAgICAgICAgICAgIGNvaW5iYXNlPWNvaW5iYXNlLAogICAgICAgICAgICBudW1iZXI9YmxvY2tfbnVtYmVyLAogICAgICAgICAgICBnYXNfbGltaXQ9YmxvY2tfZ2FzX2xpbWl0LAogICAgICAgICAgICBnYXNfcHJpY2U9dHguZ2FzX3ByaWNlLAogICAgICAgICAgICB0aW1lPWJsb2NrX3RpbWUsCiAgICAgICAgICAgIGRpZmZpY3VsdHk9YmxvY2tfZGlmZmljdWx0eSwKICAgICAgICAgICAgc3RhdGU9c3RhdGUsCiAgICAgICAgICAgIHRyYWNlcz1bXSwKICAgICAgICApCgogICAgICAgIGdhc191c2VkLCBsb2dzID0gcHJvY2Vzc190cmFuc2FjdGlvbihlbnYsIHR4KQogICAgICAgIGdhc19hdmFpbGFibGUgLT0gZ2FzX3VzZWQKCiAgICAgICAgcmVjZWlwdCA9IG1ha2VfcmVjZWlwdCgKICAgICAgICAgICAgdHgsIHN0YXRlX3Jvb3Qoc3RhdGUpLCAoYmxvY2tfZ2FzX2xpbWl0IC0gZ2FzX2F2YWlsYWJsZSksIGxvZ3MKICAgICAgICApCgogICAgICAgIHRyaWVfc2V0KAogICAgICAgICAgICByZWNlaXB0c190cmllLAogICAgICAgICAgICBybHAuZW5jb2RlKFVpbnQoaSkpLAogICAgICAgICAgICByZWNlaXB0LAogICAgICAgICkKCiAgICAgICAgYmxvY2tfbG9ncyArPSBsb2dzCgogICAgcGF5X3Jld2FyZHMoc3RhdGUsIGJsb2NrX251bWJlciwgY29pbmJhc2UsIG9tbWVycykKCiAgICBibG9ja19nYXNfdXNlZCA9IGJsb2NrX2dhc19saW1pdCAtIGdhc19hdmFpbGFibGUKCiAgICBibG9ja19sb2dzX2Jsb29tID0gbG9nc19ibG9vbShibG9ja19sb2dzKQoKICAgIHJldHVybiAoCiAgICAgICAgYmxvY2tfZ2FzX3VzZWQsCiAgICAgICAgcm9vdCh0cmFuc2FjdGlvbnNfdHJpZSksCiAgICAgICAgcm9vdChyZWNlaXB0c190cmllKSwKICAgICAgICBibG9ja19sb2dzX2Jsb29tLAogICAgICAgIHN0YXRlLAogICAgKQqUhZSBlH2UKGgFaAZoIGqsIwAAaCFoA2gdaFJoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllIxQL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vaG9tZXN0ZWFkL2ZvcmsucHmUjAl4bWw6c3BhY2WUauIEAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqzQ4AAEsBc4wHbGluZW5vc5SJdWgcarUOAABoHWgeaB9NqQFoIGp5HwAAdWJlaA59lChoEF2UajoDAABhaBNdlGgVXZSMCmFwcGx5X2JvZHmUYWgXXZRoGV2UdWgcaEFoHWgeaB9NhAFoIGpADgAAaCFoA3ViaEIpgZR9lChoBWgGaAddlChoRymBlH2UKGgFjA92YWxpZGF0ZV9vbW1lcnOUaAddlGhNjA92YWxpZGF0ZV9vbW1lcnOUhZSBlH2U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IGJsb2NrX2hlYWRlcjogSGVhZGVyLCBjaGFpbjogQmxvY2tDaGFpbgopIC0+IE5vbmU6CiAgICBibG9ja19oYXNoID0gcmxwLnJscF9oYXNoKGJsb2NrX2hlYWRlcikKCiAgICBlbnN1cmUocmxwLnJscF9oYXNoKG9tbWVycykgPT0gYmxvY2tfaGVhZGVyLm9tbWVyc19oYXNoLCBJbnZhbGlkQmxvY2spCgogICAgaWYgbGVuKG9tbWVycykgPT0gMDoKICAgICAgICAjIE5vdGhpbmcgdG8gdmFsaWRhdGUKICAgICAgICByZXR1cm4KCiAgICAjIENoZWNrIHRoYXQgZWFjaCBvbW1lciBzYXRpc2ZpZXMgdGhlIGNvbnN0cmFpbnRzIG9mIGEgaGVhZGVyCiAgICBmb3Igb21tZXIgaW4gb21tZXJzOgogICAgICAgIGVuc3VyZSgxIDw9IG9tbWVyLm51bWJlciA8IGJsb2NrX2hlYWRlci5udW1iZXIsIEludmFsaWRCbG9jaykKICAgICAgICBvbW1lcl9wYXJlbnRfaGVhZGVyID0gY2hhaW4uYmxvY2tzWwogICAgICAgICAgICAtKGJsb2NrX2hlYWRlci5udW1iZXIgLSBvbW1lci5udW1iZXIpIC0gMQogICAgICAgIF0uaGVhZGVyCiAgICAgICAgdmFsaWRhdGVfaGVhZGVyKG9tbWVyLCBvbW1lcl9wYXJlbnRfaGVhZGVyKQoKICAgICMgQ2hlY2sgdGhhdCB0aGVyZSBjYW4gYmUgb25seSBhdCBtb3N0IDIgb21tZXJzIGZvciBhIGJsb2NrLgogICAgZW5zdXJlKGxlbihvbW1lcnMpIDw9IDIsIEludmFsaWRCbG9jaykKCiAgICBvbW1lcnNfaGFzaGVzID0gW3JscC5ybHBfaGFzaChvbW1lcikgZm9yIG9tbWVyIGluIG9tbWVyc10KICAgICMgQ2hlY2sgdGhhdCB0aGVyZSBhcmUgbm8gZHVwbGljYXRlcyBpbiB0aGUgb21tZXJzIG9mIGN1cnJlbnQgYmxvY2sKICAgIGVuc3VyZShsZW4ob21tZXJzX2hhc2hlcykgPT0gbGVuKHNldChvbW1lcnNfaGFzaGVzKSksIEludmFsaWRCbG9jaykKCiAgICByZWNlbnRfY2Fub25pY2FsX2Jsb2NrcyA9IGNoYWluLmJsb2Nrc1stKE1BWF9PTU1FUl9ERVBUSCArIDEpIDpdCiAgICByZWNlbnRfY2Fub25pY2FsX2Jsb2NrX2hhc2hlcyA9IHsKICAgICAgICBybHAucmxwX2hhc2goYmxvY2suaGVhZGVyKSBmb3IgYmxvY2sgaW4gcmVjZW50X2Nhbm9uaWNhbF9ibG9ja3MKICAgIH0KICAgIHJlY2VudF9vbW1lcnNfaGFzaGVzOiBTZXRbSGFzaDMyXSA9IHNldCgpCiAgICBmb3IgYmxvY2sgaW4gcmVjZW50X2Nhbm9uaWNhbF9ibG9ja3M6CiAgICAgICAgcmVjZW50X29tbWVyc19oYXNoZXMgPSByZWNlbnRfb21tZXJzX2hhc2hlcy51bmlvbigKICAgICAgICAgICAge3JscC5ybHBfaGFzaChvbW1lcikgZm9yIG9tbWVyIGluIGJsb2NrLm9tbWVyc30KICAgICAgICApCgogICAgZm9yIG9tbWVyX2luZGV4LCBvbW1lciBpbiBlbnVtZXJhdGUob21tZXJzKToKICAgICAgICBvbW1lcl9oYXNoID0gb21tZXJzX2hhc2hlc1tvbW1lcl9pbmRleF0KICAgICAgICAjIFRoZSBjdXJyZW50IGJsb2NrIHNob3VsZG4ndCBiZSB0aGUgb21tZXIKICAgICAgICBlbnN1cmUob21tZXJfaGFzaCAhPSBibG9ja19oYXNoLCBJbnZhbGlkQmxvY2spCgogICAgICAgICMgT21tZXIgc2hvdWxkbid0IGJlIG9uZSBvZiB0aGUgcmVjZW50IGNhbm9uaWNhbCBibG9ja3MKICAgICAgICBlbnN1cmUob21tZXJfaGFzaCBub3QgaW4gcmVjZW50X2Nhbm9uaWNhbF9ibG9ja19oYXNoZXMsIEludmFsaWRCbG9jaykKCiAgICAgICAgIyBPbW1lciBzaG91bGRuJ3QgYmUgb25lIG9mIHRoZSB1bmNsZXMgbWVudGlvbmVkIGluIHRoZSByZWNlbnQKICAgICAgICAjIGNhbm9uaWNhbCBibG9ja3MKICAgICAgICBlbnN1cmUob21tZXJfaGFzaCBub3QgaW4gcmVjZW50X29tbWVyc19oYXNoZXMsIEludmFsaWRCbG9jaykKCiAgICAgICAgIyBPbW1lciBhZ2Ugd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IGJsb2NrLiBGb3IgZXhhbXBsZSwgYW4gYWdlIG9mCiAgICAgICAgIyAxIGluZGljYXRlcyB0aGF0IHRoZSBvbW1lciBpcyBhIHNpYmxpbmcgb2YgcHJldmlvdXMgYmxvY2suCiAgICAgICAgb21tZXJfYWdlID0gYmxvY2tfaGVhZGVyLm51bWJlciAtIG9tbWVyLm51bWJlcgogICAgICAgIGVuc3VyZSgxIDw9IG9tbWVyX2FnZSA8PSBNQVhfT01NRVJfREVQVEgsIEludmFsaWRCbG9jaykKCiAgICAgICAgZW5zdXJlKAogICAgICAgICAgICBvbW1lci5wYXJlbnRfaGFzaCBpbiByZWNlbnRfY2Fub25pY2FsX2Jsb2NrX2hhc2hlcywgSW52YWxpZEJsb2NrCiAgICAgICAgKQogICAgICAgIGVuc3VyZShvbW1lci5wYXJlbnRfaGFzaCAhPSBibG9ja19oZWFkZXIucGFyZW50X2hhc2gsIEludmFsaWRCbG9jaykKlGgHXZRoTVgBCQAAZGVmIHZhbGlkYXRlX29tbWVycygKICAgIG9tbWVyczogVHVwbGVbSGVhZGVyLCAuLi5dLCBibG9ja19oZWFkZXI6IEhlYWRlciwgY2hhaW46IEJsb2NrQ2hhaW4KKSAtPiBOb25lOgogICAgYmxvY2tfaGFzaCA9IHJscC5ybHBfaGFzaChibG9ja19oZWFkZXIpCgogICAgZW5zdXJlKHJscC5ybHBfaGFzaChvbW1lcnMpID09IGJsb2NrX2hlYWRlci5vbW1lcnNfaGFzaCwgSW52YWxpZEJsb2NrKQoKICAgIGlmIGxlbihvbW1lcnMpID09IDA6CiAgICAgICAgIyBOb3RoaW5nIHRvIHZhbGlkYXRlCiAgICAgICAgcmV0dXJuCgogICAgIyBDaGVjayB0aGF0IGVhY2ggb21tZXIgc2F0aXNmaWVzIHRoZSBjb25zdHJhaW50cyBvZiBhIGhlYWRlcgogICAgZm9yIG9tbWVyIGluIG9tbWVyczoKICAgICAgICBlbnN1cmUoMSA8PSBvbW1lci5udW1iZXIgPCBibG9ja19oZWFkZXIubnVtYmVyLCBJbnZhbGlkQmxvY2spCiAgICAgICAgb21tZXJfcGFyZW50X2hlYWRlciA9IGNoYWluLmJsb2Nrc1sKICAgICAgICAgICAgLShibG9ja19oZWFkZXIubnVtYmVyIC0gb21tZXIubnVtYmVyKSAtIDEKICAgICAgICBdLmhlYWRlcgogICAgICAgIHZhbGlkYXRlX2hlYWRlcihvbW1lciwgb21tZXJfcGFyZW50X2hlYWRlcikKCiAgICAjIENoZWNrIHRoYXQgdGhlcmUgY2FuIGJlIG9ubHkgYXQgbW9zdCAyIG9tbWVycyBmb3IgYSBibG9jay4KICAgIGVuc3VyZShsZW4ob21tZXJzKSA8PSAyLCBJbnZhbGlkQmxvY2spCgogICAgb21tZXJzX2hhc2hlcyA9IFtybHAucmxwX2hhc2gob21tZXIpIGZvciBvbW1lciBpbiBvbW1lcnNdCiAgICAjIENoZWNrIHRoYXQgdGhlcmUgYXJlIG5vIGR1cGxpY2F0ZXMgaW4gdGhlIG9tbWVycyBvZiBjdXJyZW50IGJsb2NrCiAgICBlbnN1cmUobGVuKG9tbWVyc19oYXNoZXMpID09IGxlbihzZXQob21tZXJzX2hhc2hlcykpLCBJbnZhbGlkQmxvY2spCgogICAgcmVjZW50X2Nhbm9uaWNhbF9ibG9ja3MgPSBjaGFpbi5ibG9ja3NbLShNQVhfT01NRVJfREVQVEggKyAxKSA6XQogICAgcmVjZW50X2Nhbm9uaWNhbF9ibG9ja19oYXNoZXMgPSB7CiAgICAgICAgcmxwLnJscF9oYXNoKGJsb2NrLmhlYWRlcikgZm9yIGJsb2NrIGluIHJlY2VudF9jYW5vbmljYWxfYmxvY2tzCiAgICB9CiAgICByZWNlbnRfb21tZXJzX2hhc2hlczogU2V0W0hhc2gzMl0gPSBzZXQoKQogICAgZm9yIGJsb2NrIGluIHJlY2VudF9jYW5vbmljYWxfYmxvY2tzOgogICAgICAgIHJlY2VudF9vbW1lcnNfaGFzaGVzID0gcmVjZW50X29tbWVyc19oYXNoZXMudW5pb24oCiAgICAgICAgICAgIHtybHAucmxwX2hhc2gob21tZXIpIGZvciBvbW1lciBpbiBibG9jay5vbW1lcnN9CiAgICAgICAgKQoKICAgIGZvciBvbW1lcl9pbmRleCwgb21tZXIgaW4gZW51bWVyYXRlKG9tbWVycyk6CiAgICAgICAgb21tZXJfaGFzaCA9IG9tbWVyc19oYXNoZXNbb21tZXJfaW5kZXhdCiAgICAgICAgIyBUaGUgY3VycmVudCBibG9jayBzaG91bGRuJ3QgYmUgdGhlIG9tbWVyCiAgICAgICAgZW5zdXJlKG9tbWVyX2hhc2ggIT0gYmxvY2tfaGFzaCwgSW52YWxpZEJsb2NrKQoKICAgICAgICAjIE9tbWVyIHNob3VsZG4ndCBiZSBvbmUgb2YgdGhlIHJlY2VudCBjYW5vbmljYWwgYmxvY2tzCiAgICAgICAgZW5zdXJlKG9tbWVyX2hhc2ggbm90IGluIHJlY2VudF9jYW5vbmljYWxfYmxvY2tfaGFzaGVzLCBJbnZhbGlkQmxvY2spCgogICAgICAgICMgT21tZXIgc2hvdWxkbid0IGJlIG9uZSBvZiB0aGUgdW5jbGVzIG1lbnRpb25lZCBpbiB0aGUgcmVjZW50CiAgICAgICAgIyBjYW5vbmljYWwgYmxvY2tzCiAgICAgICAgZW5zdXJlKG9tbWVyX2hhc2ggbm90IGluIHJlY2VudF9vbW1lcnNfaGFzaGVzLCBJbnZhbGlkQmxvY2spCgogICAgICAgICMgT21tZXIgYWdlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBibG9jay4gRm9yIGV4YW1wbGUsIGFuIGFnZSBvZgogICAgICAgICMgMSBpbmRpY2F0ZXMgdGhhdCB0aGUgb21tZXIgaXMgYSBzaWJsaW5nIG9mIHByZXZpb3VzIGJsb2NrLgogICAgICAgIG9tbWVyX2FnZSA9IGJsb2NrX2hlYWRlci5udW1iZXIgLSBvbW1lci5udW1iZXIKICAgICAgICBlbnN1cmUoMSA8PSBvbW1lcl9hZ2UgPD0gTUFYX09NTUVSX0RFUFRILCBJbnZhbGlkQmxvY2spCgogICAgICAgIGVuc3VyZSgKICAgICAgICAgICAgb21tZXIucGFyZW50X2hhc2ggaW4gcmVjZW50X2Nhbm9uaWNhbF9ibG9ja19oYXNoZXMsIEludmFsaWRCbG9jawogICAgICAgICkKICAgICAg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bG9ja3MKdGhhdCBhcmUgbWluZWQgYXJlIGFkZGVkIHRvIHRoZSBjYW5vbmljYWwgY2hhaW4sIG1pbmVycyBhcmUgc3RpbGwgcGFpZCBhCnJld2FyZCBmb3IgdGhlaXIgZWZmb3J0cy4gVGhpcyByZXdhcmQgaXMgY2FsbGVkIGFuIG9tbWVyIHJld2FyZCBhbmQgaXMKY2FsY3VsYXRlZCBiYXNlZCBvbiB0aGUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgb21tZXIgYmxvY2sgdGhhdCB0aGV5Cm1pbmVkLpRoB12UKGhNjFJUaGUgbWluZXIgb2YgdGhlIGNhbm9uaWNhbCBibG9jayBpcyByZXdhcmRlZCB3aXRoIHRoZSBwcmVkZXRlcm1pbmVkCmJsb2NrIHJld2FyZCwglIWUgZR9lChoBWgGaCBqGSYAAGghaANoHWhSaB9LAHVialgFAAApgZR9lChoBYwQYGBCTE9DS19SRVdBUkRgYJRoB12UaE2MDEJMT0NLX1JFV0FSRJSFlIGUfZQoaAVoBmggaiEmAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcalcFAABoHU5oH05oIGoZJgAAdWJoTVgzAgAALCBwbHVzIGEgdmFyaWFibGUgYXdhcmQgYmFzZWQgb2ZmIG9mIHRoZQpudW1iZXIgb2Ygb21tZXIgYmxvY2tzIHRoYXQgd2VyZSBtaW5lZCBhcm91bmQgdGhlIHNhbWUgdGltZSwgYW5kIGluY2x1ZGVkCmluIHRoZSBjYW5vbmljYWwgYmxvY2vigJlzIGhlYWRlci4gQW4gb21tZXIgYmxvY2sgaXMgYSBibG9jayB0aGF0IHdhc27igJl0CmFkZGVkIHRvIHRoZSBjYW5vbmljYWwgYmxvY2tjaGFpbiBiZWNhdXNlIGl0IHdhc27igJl0IHZhbGlkYXRlZCBhcyBmYXN0IGFzCnRoZSBhY2NlcHRlZCBibG9jayBidXQgd2FzIG1pbmVkIGF0IHRoZSBzYW1lIHRpbWUuIEFsdGhvdWdoIG5vdCBhbGwgYmxvY2tzCnRoYXQgYXJlIG1pbmVkIGFyZSBhZGRlZCB0byB0aGUgY2Fub25pY2FsIGNoYWluLCBtaW5lcnMgYXJlIHN0aWxs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cl9yZXdhcmQgPSBCTE9DS19SRVdBUkQgKyAobGVuKG9tbWVycykgKiAoQkxPQ0tfUkVXQVJEIC8vIDMyKSkKICAgIGNyZWF0ZV9ldGhlcihzdGF0ZSwgY29pbmJhc2UsIG1pbmVyX3Jld2FyZCkKCiAgICBmb3Igb21tZXIgaW4gb21tZXJzOgogICAgICAgICMgT21tZXIgYWdlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBibG9jay4KICAgICAgICBvbW1lcl9hZ2UgPSBVMjU2KGJsb2NrX251bWJlciAtIG9tbWVyLm51bWJlcikKICAgICAgICBvbW1lcl9taW5lcl9yZXdhcmQgPSAoKDggLSBvbW1lcl9hZ2UpICogQkxPQ0tfUkVXQVJEKSAvLyA4CiAgICAgICAgY3JlYXRlX2V0aGVyKHN0YXRlLCBvbW1lci5jb2luYmFzZSwgb21tZXJfbWluZXJfcmV3YXJkKQqUaAddlGhNWP4BAABkZWYgcGF5X3Jld2FyZHMoCiAgICBzdGF0ZTogU3RhdGUsCiAgICBibG9ja19udW1iZXI6IFVpbnQsCiAgICBjb2luYmFzZTogQWRkcmVzcywKICAgIG9tbWVyczogVHVwbGVbSGVhZGVyLCAuLi5dLAopIC0+IE5vbmU6CiAgICBtaW5lcl9yZXdhcmQgPSBCTE9DS19SRVdBUkQgKyAobGVuKG9tbWVycykgKiAoQkxPQ0tfUkVXQVJEIC8vIDMyKSkKICAgIGNyZWF0ZV9ldGhlcihzdGF0ZSwgY29pbmJhc2UsIG1pbmVyX3Jld2FyZCkKCiAgICBmb3Igb21tZXIgaW4gb21tZXJzOgogICAgICAgICMgT21tZXIgYWdlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBibG9jay4KICAgICAgICBvbW1lcl9hZ2UgPSBVMjU2KGJsb2NrX251bWJlciAtIG9tbWVyLm51bWJlcikKICAgICAgICBvbW1lcl9taW5lcl9yZXdhcmQgPSAoKDggLSBvbW1lcl9hZ2UpICogQkxPQ0tfUkVXQVJEKSAvLyA4CiAgICAgICAgY3JlYXRlX2V0aGVyKHN0YXRlLCBvbW1lci5jb2luYmFzZSwgb21tZXJfbWluZXJfcmV3YXJkKQqU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SXQgZGVjcmVtZW50cyB0aGUgc2VuZGVyJ3MgYWNjb3VudCBhZnRlciBjYWxjdWxhdGluZyB0aGUgZ2FzIGZlZSBhbmQKcmVmdW5kcyB0aGVtIHRoZSBwcm9wZXIgYW1vdW50IGFmdGVyIGV4ZWN1dGlvbi4gQ2FsbGluZyBjb250cmFjdHMsCmRlcGxveWluZyBjb2RlLCBhbmQgaW5jcmVtZW50aW5nIG5vbmNlcyBhcmUgYWxsIGV4YW1wbGVzIG9mIGFjdGlvbnMgdGhhdApoYXBwZW4gd2l0aGluIHRoaXMgZnVuY3Rpb24gb3IgZnJvbSBhIGNhbGwgbWFkZSB3aXRoaW4gdGhpcyBmdW5jdGlvbi6UaAddlGhNWF0BAABUaGlzIGZ1bmN0aW9uIHByb2Nlc3NlcyB0aGUgYWN0aW9ucyBuZWVkZWQgdG8gZXhlY3V0ZSBhIHRyYW5zYWN0aW9uLgpJdCBkZWNyZW1lbnRzIHRoZSBzZW5kZXLigJlzIGFjY291bnQgYWZ0ZXIgY2FsY3VsYXRpbmcgdGhlIGdhcyBmZWUgYW5kCnJlZnVuZHMgdGhlbSB0aGUgcHJvcGVyIGFtb3VudCBhZnRlciBleGVjdXRpb24uIENhbGxpbmcgY29udHJhY3RzLApkZXBsb3lpbmcgY29kZSwgYW5kIGluY3JlbWVudGluZyBub25jZXMgYXJlIGFsbCBleGFtcGxlcyBvZiBhY3Rpb25zIHRoYXQKaGFwcGVuIHdpdGhpbiB0aGlzIGZ1bmN0aW9uIG9yIGZyb20gYSBjYWxsIG1hZGUgd2l0aGluIHRoaXMgZnVuY3Rpb24ulIWUgZR9lChoBWgGaCBqwycAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdaB5oH03zAWggarInAAB1Ymh3KYGUfZQoaAWMUkFjY291bnRzIHRoYXQgYXJlIG1hcmtlZCBmb3IgZGVsZXRpb24gYXJlIHByb2Nlc3NlZCBhbmQgZGVzdHJveWVkIGFmdGVyCmV4ZWN1dGlvbi6UaAddlGhNjFJBY2NvdW50cyB0aGF0IGFyZSBtYXJrZWQgZm9yIGRlbGV0aW9uIGFyZSBwcm9jZXNzZWQgYW5kIGRlc3Ryb3llZCBhZnRlcgpleGVj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YWxhbmNlID49IGdhc19mZWUgKyB0eC52YWx1ZSwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKHNlbmRlcl9hY2NvdW50LmNvZGUgPT0gYnl0ZWFycmF5KCksIEludmFsaWRCbG9jaykKCiAgICBnYXMgPSB0eC5nYXMgLSBjYWxjdWxhdGVfaW50cmluc2ljX2Nvc3QodHgpCiAgICBpbmNyZW1lbnRfbm9uY2UoZW52LnN0YXRlLCBzZW5kZXIpCiAgICBzZW5kZXJfYmFsYW5jZV9hZnRlcl9nYXNfZmVlID0gc2VuZGVyX2FjY291bnQuYmFsYW5jZSAtIGdhc19mZWUKICAgIHNldF9hY2NvdW50X2JhbGFuY2UoZW52LnN0YXRlLCBzZW5kZXIsIHNlbmRlcl9iYWxhbmNlX2FmdGVyX2dhc19mZWUpCgogICAgbWVzc2FnZSA9IHByZXBhcmVfbWVzc2FnZSgKICAgICAgICBzZW5kZXIsCiAgICAgICAgdHgudG8sCiAgICAgICAgdHgudmFsdWUsCiAgICAgICAgdHguZGF0YSwKICAgICAgICBnYXMsCiAgICAgICAgZW52LAogICAgKQoKICAgIG91dHB1dCA9IHByb2Nlc3NfbWVzc2FnZV9jYWxsKG1lc3NhZ2UsIGVudikKCiAgICBnYXNfdXNlZCA9IHR4LmdhcyAtIG91dHB1dC5nYXNfbGVmdAogICAgZ2FzX3JlZnVuZCA9IG1pbihnYXNfdXNlZCAvLyAyLCBvdXRwdXQucmVmdW5kX2NvdW50ZXIpCiAgICBnYXNfcmVmdW5kX2Ftb3VudCA9IChvdXRwdXQuZ2FzX2xlZnQgKyBnYXNfcmVmdW5kKSAqIHR4Lmdhc19wcmljZQogICAgdHJhbnNhY3Rpb25fZmVlID0gKHR4LmdhcyAtIG91dHB1dC5nYXNfbGVmdCAtIGdhc19yZWZ1bmQpICogdHguZ2FzX3ByaWNlCiAgICB0b3RhbF9nYXNfdXNlZCA9IGdhc191c2VkIC0gZ2FzX3JlZnVuZAoKICAgICMgcmVmdW5kIGdhcwogICAgc2VuZGVyX2JhbGFuY2VfYWZ0ZXJfcmVmdW5kID0gKAogICAgICAgIGdldF9hY2NvdW50KGVudi5zdGF0ZSwgc2VuZGVyKS5iYWxhbmNlICsgZ2FzX3JlZnVuZF9hbW91bnQKICAgICkKICAgIHNldF9hY2NvdW50X2JhbGFuY2UoZW52LnN0YXRlLCBzZW5kZXIsIHNlbmRlcl9iYWxhbmNlX2FmdGVyX3JlZnVuZCkKCiAgICAjIHRyYW5zZmVyIG1pbmVyIGZlZXMKICAgIGNvaW5iYXNlX2JhbGFuY2VfYWZ0ZXJfbWluaW5nX2ZlZSA9ICgKICAgICAgICBnZXRfYWNjb3VudChlbnYuc3RhdGUsIGVudi5jb2luYmFzZSkuYmFsYW5jZSArIHRyYW5zYWN0aW9uX2ZlZQogICAgKQogICAgc2V0X2FjY291bnRfYmFsYW5jZSgKICAgICAgICBlbnYuc3RhdGUsIGVudi5jb2luYmFzZSwgY29pbmJhc2VfYmFsYW5jZV9hZnRlcl9taW5pbmdfZmVlCiAgICApCgogICAgZm9yIGFkZHJlc3MgaW4gb3V0cHV0LmFjY291bnRzX3RvX2RlbGV0ZToKICAgICAgICBkZXN0cm95X2FjY291bnQoZW52LnN0YXRlLCBhZGRyZXNzKQoKICAgIHJldHVybiB0b3RhbF9nYXNfdXNlZCwgb3V0cHV0LmxvZ3MKlGgHXZRoTVjABgAAZGVmIHByb2Nlc3NfdHJhbnNhY3Rpb24oCiAgICBlbnY6IHZtLkVudmlyb25tZW50LCB0eDogVHJhbnNhY3Rpb24KKSAtPiBUdXBsZVtVaW50LCBUdXBsZVtMb2csIC4uLl1dOgogICAgZW5zdXJlKHZhbGlkYXRlX3RyYW5zYWN0aW9uKHR4KSwgSW52YWxpZEJsb2NrKQoKICAgIHNlbmRlciA9IGVudi5vcmlnaW4KICAgIHNlbmRlcl9hY2NvdW50ID0gZ2V0X2FjY291bnQoZW52LnN0YXRlLCBzZW5kZXIpCiAgICBnYXNfZmVlID0gdHguZ2FzICogdHguZ2FzX3ByaWNlCiAgICBlbnN1cmUoc2VuZGVyX2FjY291bnQubm9uY2UgPT0gdHgubm9uY2UsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZShzZW5kZXJfYWNjb3VudC5iYWxhbmNlID49IGdhc19mZWUgKyB0eC52YWx1ZSwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKHNlbmRlcl9hY2NvdW50LmNvZGUgPT0gYnl0ZWFycmF5KCksIEludmFsaWRCbG9jaykKCiAgICBnYXMgPSB0eC5nYXMgLSBjYWxjdWxhdGVfaW50cmluc2ljX2Nvc3QodHgpCiAgICBpbmNyZW1lbnRfbm9uY2UoZW52LnN0YXRlLCBzZW5kZXIpCiAgICBzZW5kZXJfYmFsYW5jZV9hZnRlcl9nYXNfZmVlID0gc2VuZGVyX2FjY291bnQuYmFsYW5jZSAtIGdhc19mZWUKICAgIHNldF9hY2NvdW50X2JhbGFuY2UoZW52LnN0YXRlLCBzZW5kZXIsIHNlbmRlcl9iYWxhbmNlX2FmdGVyX2dhc19mZWUpCgogICAgbWVzc2FnZSA9IHByZXBhcmVfbWVzc2FnZSgKICAgICAgICBzZW5kZXIsCiAgICAgICAgdHgudG8sCiAgICAgICAgdHgudmFsdWUsCiAgICAgICAgdHguZGF0YSwKICAgICAgICBnYXMsCiAgICAgICAgZW52LAogICAgKQoKICAgIG91dHB1dCA9IHByb2Nlc3NfbWVzc2FnZV9jYWxsKG1lc3NhZ2UsIGVudikKCiAgICBnYXNfdXNlZCA9IHR4LmdhcyAtIG91dHB1dC5nYXNfbGVmdAogICAgZ2FzX3JlZnVuZCA9IG1pbihnYXNfdXNlZCAvLyAyLCBvdXRwdXQucmVmdW5kX2NvdW50ZXIpCiAgICBnYXNfcmVmdW5kX2Ftb3VudCA9IChvdXRwdXQuZ2FzX2xlZnQgKyBnYXNfcmVmdW5kKSAqIHR4Lmdhc19wcmljZQogICAgdHJhbnNhY3Rpb25fZmVlID0gKHR4LmdhcyAtIG91dHB1dC5nYXNfbGVmdCAtIGdhc19yZWZ1bmQpICogdHguZ2FzX3ByaWNlCiAgICB0b3RhbF9nYXNfdXNlZCA9IGdhc191c2VkIC0gZ2FzX3JlZnVuZAoKICAgICMgcmVmdW5kIGdhcwogICAgc2VuZGVyX2JhbGFuY2VfYWZ0ZXJfcmVmdW5kID0gKAogICAgICAgIGdldF9hY2NvdW50KGVudi5zdGF0ZSwgc2VuZGVyKS5iYWxhbmNlICsgZ2FzX3JlZnVuZF9hbW91bnQKICAgICkKICAgIHNldF9hY2NvdW50X2JhbGFuY2UoZW52LnN0YXRlLCBzZW5kZXIsIHNlbmRlcl9iYWxhbmNlX2FmdGVyX3JlZnVuZCkKCiAgICAjIHRyYW5zZmVyIG1pbmVyIGZlZXMKICAgIGNvaW5iYXNlX2JhbGFuY2VfYWZ0ZXJfbWluaW5nX2ZlZSA9ICgKICAgICAgICBnZXRfYWNjb3VudChlbnYuc3RhdGUsIGVudi5jb2luYmFzZSkuYmFsYW5jZSArIHRyYW5zYWN0aW9uX2ZlZQogICAgKQogICAgc2V0X2FjY291bnRfYmFsYW5jZSgKICAgICAgICBlbnYuc3RhdGUsIGVudi5jb2luYmFzZSwgY29pbmJhc2VfYmFsYW5jZV9hZnRlcl9taW5pbmdfZmVlCiAgICApCgogICAgZm9yIGFkZHJlc3MgaW4gb3V0cHV0LmFjY291bnRzX3RvX2RlbGV0ZToKICAgICAgICBkZXN0cm95X2FjY291bnQoZW52LnN0YXRlLCBhZGRyZXNzKQoKICAgIHJldHVybiB0b3RhbF9nYXNfdXNlZCwgb3V0cHV0LmxvZ3MKlIWUgZR9lChoBWgGaCBqFCkAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBnNvdXJjZZSMUC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrLnB5lIwJeG1sOnNwYWNllGriBAAAjAVmb3JjZZSJjAhsYW5ndWFnZZSMBnB5dGhvbpSMDmhpZ2hsaWdodF9hcmdzlH2Uas0OAABLAXOMB2xpbmVub3OUiXVoHGq1DgAAaB1oHmgfTQUCaCBqOicAAHViZWgOfZQoaBBdlGqgAwAAYWgTXZRoFV2UjBNwcm9jZXNzX3RyYW5zYWN0aW9ulGFoF12UaBldlHVoHGhBaB1oHmgfTesBaCBqQA4AAGghaAN1YmhCKYGUfZQoaAVoBmgHXZQoaEcpgZR9lChoBYwUdmFsaWRhdGVfdHJhbnNhY3Rpb26UaAddlGhNjBR2YWxpZGF0ZV90cmFuc2FjdGlvbpSFlIGUfZQoaAVoBmggajUpAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgc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dGlvbi4gRGF0YSB0cmFuc2ZlciwgZm9yIGV4YW1wbGUsIGlzIHBhcnQgb2YgdGhpcyBpbnRyaW5zaWMKY29zdC4gSXQgY29zdHMgZXRoZXIgdG8gc2VuZCBkYXRhIG92ZXIgdGhlIHdpcmUgYW5kIHRoYXQgZXRoZXIgaXMKYWNjb3VudGVkIGZvciBpbiB0aGUgaW50cmluc2ljIGNvc3QgY2FsY3VsYXRlZCBpbiB0aGlzIGZ1bmN0aW9uLiBUaGlzCmludHJpbnNpYyBjb3N0IG11c3QgYmUgY2FsY3VsYXRlZCBhbmQgcGFpZCBmb3IgYmVmb3JlIGV4ZWN1dGlvbiBpbiBvcmRlcgpmb3IgYWxsIG9wZXJhdGlvbnMgdG8gYmUgaW1wbGVtZW50ZWQulGgHXZRoTVgRAgAAVGhlIGludHJpbnNpYyBjb3N0IG9mIHRoZSB0cmFuc2FjdGlvbiBpcyBjaGFyZ2VkIGJlZm9yZSBleGVjdXRpb24gaGFzCmJlZ3VuLiBGdW5jdGlvbnMvb3BlcmF0aW9ucyBpbiB0aGUgRVZNIGNvc3QgbW9uZXkgdG8gZXhlY3V0ZSBzbyB0aGlzCmludHJpbnNpYyBjb3N0IGlzIGZvciB0aGUgb3BlcmF0aW9ucyB0aGF0IG5lZWQgdG8gYmUgcGFpZCBmb3IgYXMgcGFydCBvZgp0aGUgdHJhbnNhY3Rpb24uIERhdGEgdHJhbnNmZXIsIGZvciBleGFtcGxlLCBpcyBwYXJ0IG9mIHRoaXMgaW50cmluc2ljCmNvc3QuIEl0IGNvc3RzIGV0aGVyIHRvIHNlbmQgZGF0YSBvdmVyIHRoZSB3aXJlIGFuZCB0aGF0IGV0aGVyIGlzCmFjY291bnRlZCBmb3IgaW4gdGhlIGludHJpbnNpYyBjb3N0IGNhbGN1bGF0ZWQgaW4gdGhpcyBmdW5jdGlvbi4gVGhpcwppbnRyaW5zaWMgY29zdCBtdXN0IGJlIGNhbGN1bGF0ZWQgYW5kIHBhaWQgZm9yIGJlZm9yZSBleGVjdXRpb24gaW4gb3JkZXIKZm9yIGFsbCBvcGVyYXRpb25zIHRvIGJlIGltcGxlbWVudGVkLpSFlIGUfZQoaAVoBmgganQrAABoIWgDaB1oUmgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgX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Z2xlIGlucHV0LgpTbyBhbiBpbnB1dCBjb3JyZXNwb25kcyB0byBvbmUgdW5pcXVlIGhhc2ggdGhhdCBjYW4gYmUgdXNlZCB0byBpZGVudGlmeQp0aGUgaW5wdXQgZXhhY3RseS6UhZSBlH2UKGgFaAZoIGr2LwAAaCFoA2gdaFJoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGh2aB1oHmgfTYcCaCBq1y8AAHViaHcpgZR9lChoBVgoAgAAUHJpb3IgdG8gdXNpbmcgdGhlIGBga2VjY2FrMjU2YGAgaGFzaCBmdW5jdGlvbiwgdGhlIGhlYWRlciBtdXN0IGJlCmVuY29kZWQgdXNpbmcgdGhlIFJlY3Vyc2l2ZS1MZW5ndGggUHJlZml4LiBTZWUgOnJlZjpgcmxwYC4KUkxQIGVuY29kaW5nIHRoZSBoZWFkZXIgY29udmVydHMgaXQgaW50byBhIHNwYWNlLWVmZmljaWVudCBmb3JtYXQgdGhhdAphbGxvd3MgZm9yIGVhc3kgdHJhbnNmZXIgb2YgZGF0YSBiZXR3ZWVuIG5vZGVzLiBUaGUgcHVycG9zZSBvZiBSTFAgaXMgdG8KZW5jb2RlIGFyYml0cmFyaWx5IG5lc3RlZCBhcnJheXMgb2YgYmluYXJ5IGRhdGEsIGFuZCBSTFAgaXMgdGhlIHByaW1hcnkKZW5jb2RpbmcgbWV0aG9kIHVzZWQgdG8gc2VyaWFsaXplIG9iamVjdHMgaW4gRXRoZXJldW0ncyBleGVjdXRpb24gbGF5ZXIuClRoZSBvbmx5IHB1cnBvc2Ugb2YgUkxQIGlzIHRvIGVuY29kZSBzdHJ1Y3R1cmU7IGVuY29kaW5nIHNwZWNpZmljIGRhdGEKdHlwZXMgKGUuZy4gc3RyaW5ncywgZmxvYXRzKSBpcyBsZWZ0IHVwIHRvIGhpZ2hlci1vcmRlciBwcm90b2NvbHMulGgHXZQoaE2ME1ByaW9yIHRvIHVzaW5nIHRoZSCUhZSBlH2UKGgFaAZoIGoSMAAAaCFoA2gdaFJoH0sAdWJqWAUAACmBlH2UKGgFjA1gYGtlY2NhazI1NmBglGgHXZRoTYwJa2VjY2FrMjU2lIWUgZR9lChoBWgGaCBqGjAAAGghaANoHWhSaB9LAHViYWgOfZQoaBBd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dCA8PSBwYXJlbnRfZ2FzX2xpbWl0IC0gbWF4X2FkanVzdG1lbnRfZGVsdGE6CiAgICAgICAgcmV0dXJuIEZhbHNlCiAgICBpZiBnYXNfbGltaXQgPCBHQVNfTElNSVRfTUlOSU1VTToKICAgICAgICByZXR1cm4gRmFsc2UKCiAgICByZXR1cm4gVHJ1ZQqUaAddlGhNWIEBAABkZWYgY2hlY2tfZ2FzX2xpbWl0KGdhc19saW1pdDogVWludCwgcGFyZW50X2dhc19saW1pdDogVWludCkgLT4gYm9vbDoKICAgIG1heF9hZGp1c3RtZW50X2RlbHRhID0gcGFyZW50X2dhc19saW1pdCAvLyBHQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1IKICAgIGlmIGdhc19saW1pdCA+PSBwYXJlbnRfZ2FzX2xpbWl0ICsgbWF4X2FkanVzdG1lbnRfZGVsdGE6CiAgICAgICAgcmV0dXJuIEZhbHNlCiAgICBpZiBnYXNfbGltaXQgPD0gcGFyZW50X2dhc19saW1pdCAtIG1heF9hZGp1c3RtZW50X2RlbHRhOgogICAgICAgIHJldHVybiBGYWxzZQogICAgaWYgZ2FzX2xpbWl0IDwgR0FTX0xJTUlUX01JTklNVU06CiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgcmV0dXJuIFRydWUKlIWUgZR9lChoBWgGaCBqRjMAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBnNvdXJjZZSMUC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrLnB5lIwJeG1sOnNwYWNllGriBAAAjAVmb3JjZZSJjAhsYW5ndWFnZZSMBnB5dGhvbpSMDmhpZ2hsaWdodF9hcmdzlH2Uas0OAABLAXOMB2xpbmVub3OUiXVoHGq1DgAAaB1oHmgfTb8CaCBqPDEAAHViZWgOfZQoaBBdlGpsBAAAYWgTXZRoFV2UjA9jaGVja19nYXNfbGltaXSUYWgXXZRoGV2UdWgcaEFoHWgeaB9NowJoIGpADgAAaCFoA3ViaEIpgZR9lChoBWgGaAddlChoRymB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fZQoaAVoBmgHXZQoaHcpgZR9lChoBYxCQ29tcHV0ZXMgZGlmZmljdWx0eSBvZiBhIGJsb2NrIHVzaW5nIGl0cyBoZWFkZXIgYW5kIHBhcmVudCBoZWFkZXIulGgHXZRoTYxCQ29tcHV0ZXMgZGlmZmljdWx0eSBvZiBhIGJsb2NrIHVzaW5nIGl0cyBoZWFkZXIgYW5kIHBhcmVudCBoZWFkZXIulIWUgZR9lChoBWgGaCBqDzQAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxodmgdaB5oH03KAmggagw0AAB1Ymh3KYGUfZQoaAVYgwIAAFRoZSBkaWZmaWN1bHR5IGlzIGRldGVybWluZWQgYnkgdGhlIHRpbWUgdGhlIGJsb2NrIHdhcyBjcmVhdGVkIGFmdGVyIGl0cwpwYXJlbnQuIFRoZSBgYG9mZnNldGBgIGlzIGNhbGN1bGF0ZWQgdXNpbmcgdGhlIHBhcmVudCBibG9jaydzIGRpZmZpY3VsdHksCmBgcGFyZW50X2RpZmZpY3VsdHlgYCwgYW5kIHRoZSB0aW1lc3RhbXAgYmV0d2VlbiBibG9ja3MuIFRoaXMgb2Zmc2V0IGlzCnRoZW4gYWRkZWQgdG8gdGhlIHBhcmVudCBkaWZmaWN1bHR5IGFuZCBpcyBzdG9yZWQgYXMgdGhlIGBgZGlmZmljdWx0eWBgCnZhcmlhYmxlLiBJZiB0aGUgdGltZSBiZXR3ZWVuIHRoZSBibG9jayBhbmQgaXRzIHBhcmVudCBpcyB0b28gc2hvcnQsIHRoZQpvZmZzZXQgd2lsbCByZXN1bHQgaW4gYSBwb3NpdGl2ZSBudW1iZXIgdGh1cyBtYWtpbmcgdGhlIHN1bSBvZgpgYHBhcmVudF9kaWZmaWN1bHR5YGAgYW5kIGBgb2Zmc2V0YGAgdG8gYmUgYSBncmVhdGVyIHZhbHVlIGluIG9yZGVyIHRvCmF2b2lkIG1hc3MgZm9ya2luZy4gQnV0LCBpZiB0aGUgdGltZSBpcyBsb25nIGVub3VnaCwgdGhlbiB0aGUgb2Zmc2V0CnJlc3VsdHMgaW4gYSBuZWdhdGl2ZSB2YWx1ZSBtYWtpbmcgdGhlIGJsb2NrIGxlc3MgZGlmZmljdWx0IHRoYW4KaXRzIHBh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ZSBwcmV0ZW5kIGl0IGV4aXN0ZWQgZnJvbQogICAgIyBnZW5lc2lzLgogICAgIyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2dvLWV0aGVyZXVtL3B1bGwvMTU4OAogICAgbnVtX2JvbWJfcGVyaW9kcyA9IChpbnQoYmxvY2tfbnVtYmVyKSAvLyAxMDAwMDApIC0gMgogICAgaWYgbnVtX2JvbWJfcGVyaW9kcyA+PSAwOgogICAgICAgIGRpZmZpY3VsdHkgKz0gMioqbnVtX2JvbWJfcGVyaW9kcwoKICAgICMgU29tZSBjbGllbnRzIHJhaXNlIHRoZSBkaWZmaWN1bHR5IHRvIGBNSU5JTVVNX0RJRkZJQ1VMVFlgIHByaW9yIHRvIGFkZGluZwogICAgIyB0aGUgYm9tYi4gVGhpcyBidWcgZG9lcyBub3QgbWF0dGVyIGJlY2F1c2UgdGhlIGRpZmZpY3VsdHkgaXMgYWx3YXlzIG11Y2gKICAgICMgZ3JlYXRlciB0aGFuIGBNSU5JTVVNX0RJRkZJQ1VMVFlgIG9uIE1haW5uZXQuCiAgICByZXR1cm4gVWludChtYXgoZGlmZmljdWx0eSwgTUlOSU1VTV9ESUZGSUNVTFRZKSkKlGgHXZRoTVgOBAAAZGVmIGNhbGN1bGF0ZV9ibG9ja19kaWZmaWN1bHR5KAogICAgYmxvY2tfbnVtYmVyOiBVaW50LAogICAgYmxvY2tfdGltZXN0YW1wOiBVMjU2LAogICAgcGFyZW50X3RpbWVzdGFtcDogVTI1NiwKICAgIHBhcmVudF9kaWZmaWN1bHR5OiBVaW50LAopIC0+IFVpbnQ6CiAgICBvZmZzZXQgPSAoCiAgICAgICAgaW50KHBhcmVudF9kaWZmaWN1bHR5KQogICAgICAgIC8vIDIwNDgKICAgICAgICAqIG1heCgxIC0gaW50KGJsb2NrX3RpbWVzdGFtcCAtIHBhcmVudF90aW1lc3RhbXApIC8vIDEwLCAtOTkpCiAgICApCiAgICBkaWZmaWN1bHR5ID0gaW50KHBhcmVudF9kaWZmaWN1bHR5KSArIG9mZnNldAogICAgIyBIaXN0b3JpY2FsIE5vdGU6IFRoZSBkaWZmaWN1bHR5IGJvbWIgd2FzIG5vdCBwcmVzZW50IGluIEV0aGVyZXVtIGF0IHRoZQogICAgIyBzdGFydCBvZiBGcm9udGllciwgYnV0IHdhcyBhZGRlZCBzaG9ydGx5IGFmdGVyIGxhdW5jaC4gSG93ZXZlciBzaW5jZSB0aGUKICAgICMgYm9tYiBoYXMgbm8gZWZmZWN0IHByaW9yIHRvIGJsb2NrIDIwMDAwMCB3ZSBwcmV0ZW5kIGl0IGV4aXN0ZWQgZnJvbQogICAgIyBnZW5lc2lzLgogICAgIyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2dvLWV0aGVyZXVtL3B1bGwvMTU4OAogICAgbnVtX2JvbWJfcGVyaW9kcyA9IChpbnQoYmxvY2tfbnVtYmVyKSAvLyAxMDAwMDApIC0gMgogICAgaWYgbnVtX2JvbWJfcGVyaW9kcyA+PSAwOgogICAgICAgIGRpZmZpY3VsdHkgKz0gMioqbnVtX2JvbWJfcGVyaW9kcwoKICAgICMgU29tZSBjbGllbnRzIHJhaXNlIHRoZSBkaWZmaWN1bHR5IHRvIGBNSU5JTVVNX0RJRkZJQ1VMVFlgIHByaW9yIHRvIGFkZGluZwogICAgIyB0aGUgYm9tYi4gVGhpcyBidWcgZG9lcyBub3QgbWF0dGVyIGJlY2F1c2UgdGhlIGRpZmZpY3VsdHkgaXMgYWx3YXlzIG11Y2gKICAgICMgZ3JlYXRlciB0aGFuIGBNSU5JTVVNX0RJRkZJQ1VMVFlgIG9uIE1haW5uZXQuCiAgICByZXR1cm4gVWludChtYXgoZGlmZmljdWx0eSwgTUlOSU1VTV9ESUZGSUNVTFRZKSkKlIWUgZR9lChoBWgGaCBq/DUAAGghaANoHWhSaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBnNvdXJjZZSMUC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2hvbWVzdGVhZC9mb3JrLnB5lIwJeG1sOnNwYWNllGriBAAAjAVmb3JjZZSJjAhsYW5ndWFnZZSMBnB5dGhvbpSMDmhpZ2hsaWdodF9hcmdzlH2Uas0OAABLAXOMB2xpbmVub3OUiXVoHGq1DgAAaB1oHmgfTegCaCBqZDMAAHViZWgOfZQoaBBdlGqOBAAAYWgTXZRoFV2UjBpjYWxjdWxhdGVfYmxvY2tfZGlmZmljdWx0eZRhaBddlGgZXZR1aBxoQWgdaB5oH03EAmggakAOAABoIWgDdWJlaA59lChoEF2Uaj8BAABhaBNdlGgVXZSMDm1vZHVsZSBkZXRhaWxzlGFoF12UaBldlHVoHGhBaB1oHmgfS0doIGhDaCFoA3ViZWgOfZQoaBBdlIwWZXRoZXJldW0tc3BlY2lmaWNhdGlvbpRhaBNdlGgVXZSMFmV0aGVyZXVtIHNwZWNpZmljYXRpb26UYWgXXZRoGV2UdWgcaEFoHWgeaB9LBGggaANoIWgDdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllGhSdWgcaAGMDmN1cnJlbnRfc291cmNllGhSjAxjdXJyZW50X2xpbmWUSwCMCHNldHRpbmdzlIwRZG9jdXRpbHMuZnJvbnRlbmSUjAZWYWx1ZXOUk5QpgZR9lCiMDHJlcG9ydF9sZXZlbJRLAowKaGFsdF9sZXZlbJRLBIwRZXhpdF9zdGF0dXNfbGV2ZWyUSwWMBWRlYnVnlE6MDndhcm5pbmdfc3RyZWFtlE6MCXRyYWNlYmFja5ROjA9vdXRwdXRfZW5jb2RpbmeUjAV1dGYtOJSMHW91dHB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwReG1sY2hhcnJlZnJlcGxhY2WUjA5lcnJvcl9lbmNvZGluZ5SMBXV0Zi04lIwcZXJyb3JfZW5jb2RpbmdfZXJyb3JfaGFuZGxlcpSMEGJhY2tzbGFzaHJlcGxhY2WUjBNyZWNvcmRfZGVwZW5kZW5jaWVzlIwOZG9jdXRpbHMudXRpbHOUjA5EZXBlbmRlbmN5TGlzdJSTlCmBlH2UKIwEbGlzdJRdlIwEZmlsZZROdWKMBmNvbmZpZ5ROjA1kdW1wX3NldHRpbmdzlE6MDmR1bXBfaW50ZXJuYWxzlE6MD2R1bXBfdHJhbnNmb3Jtc5ROjA9kdW1wX3BzZXVkb194bWyUTowQZXhwb3NlX2ludGVybmFsc5ROjA5zdHJpY3RfdmlzaXRvcpROjA9fZGlzYWJsZV9jb25maWeUTowHX3NvdXJjZZROjAxfZGVzdGluYXRpb26UjDBkb2MvZGlmZnMvaG9tZXN0ZWFkX2Rhb19mb3JrL2ZvcmsvaW5kZXgucGlja2xlNjSUjA1fY29uZmlnX2ZpbGVzlF2UjBFsaW5lX2xlbmd0aF9saW1pdJRNECeMCXRhYl93aWR0aJRLCIwQc3ludGF4X2hpZ2hsaWdodJSMBGxvbmeUjAxzbWFydF9xdW90ZXOUiYwTc21hcnRxdW90ZXNfbG9jYWxlc5ROjB1jaGFyYWN0ZXJfbGV2ZWxfaW5saW5lX21hcmt1cJSJjAZ3cml0ZXKUjAN4bWyUjBljb21wYXJlX3NlY3Rpb25zX2J5X25hbWVzlEsBjAxkdW1wX3JzdGRpZmaUTowFX2JvdGiUfZQoaEZOjAlnZW5lcmF0b3KUTowJZGF0ZXN0YW1wlE6MC3NvdXJjZV9saW5rlE6MCnNvdXJjZV91cmyUTowNdG9jX2JhY2tsaW5rc5RqSwUAAIwSZm9vdG5vdGVfYmFja2xpbmtzlEsBjA1zZWN0bnVtX3hmb3JtlEsBjA5kb2N0aXRsZV94Zm9ybZRLAYwNZG9jaW5mb194Zm9ybZRLAYwSc2VjdHN1YnRpdGxlX3hmb3JtlEsAjA5zdHJpcF9jb21tZW50c5ROjA5pbnB1dF9lbmNvZGluZ5ROjBxpbnB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwGc3RyaWN0lIwNbGFuZ3VhZ2VfY29kZZSMAmVulIwOcGVwX3JlZmVyZW5jZXOUTowMcGVwX2Jhc2VfdXJslIwfaHR0cDovL3d3dy5weXRob24ub3JnL2Rldi9wZXBzL5SMFXBlcF9maWxlX3VybF90ZW1wbGF0ZZSMCHBlcC0lMDRklIwOcmZjX3JlZmVyZW5jZXOUTowMcmZjX2Jhc2VfdXJslIwbaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvlIwddHJpbV9mb290bm90ZV9yZWZlcmVuY2Vfc3BhY2WUTowWZmlsZV9pbnNlcnRpb25fZW5hYmxlZJRLAYwLcmF3X2VuYWJsZWSUSwGMDmF1dG9faWRfcHJlZml4lIwCaWSUjAlpZF9wcmVmaXiUaAaMG3N0cmlwX2VsZW1lbnRzX3dpdGhfY2xhc3Nlc5ROjA1zdHJpcF9jbGFzc2VzlE51jARib3RolH2UjApfb3B0aW9uc1RvlIwFX2JvdGiUjAtfb2xkX3NvdXJjZZSMTy9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaS+UjAtfbmV3X3NvdXJjZZSMCWRvYy9kaWZmc5RqdzYAAGp4NgAAjBZpZ25vcmVfaW5fc2VjdGlvbl9uYW1llF2UKIwJaG9tZXN0ZWFklIwDZGFvlIwEZm9ya5RldWKMCHJlcG9ydGVylE6MEGluZGlyZWN0X3RhcmdldHOUXZSMEXN1YnN0aXR1dGlvbl9kZWZzlH2UjBJzdWJzdGl0dXRpb25fbmFtZXOUfZSMCHJlZm5hbWVzlH2UjAZyZWZpZHOUfZSMB25hbWVpZHOUfZSMCW5hbWV0eXBlc5R9lGgQfZSMDWZvb3Rub3RlX3JlZnOUfZSMDWNpdGF0aW9uX3JlZnOUfZSMDWF1dG9mb290bm90ZXOUXZSMEWF1dG9mb290bm90ZV9yZWZzlF2UjBBzeW1ib2xfZm9vdG5vdGVzlF2UjBRzeW1ib2xfZm9vdG5vdGVfcmVmc5RdlIwJZm9vdG5vdGVzlF2UjAljaXRhdGlvbnOUXZSMEmF1dG9mb290bm90ZV9zdGFydJRLAYwVc3ltYm9sX2Zvb3Rub3RlX3N0YXJ0lEsAjAppZF9jb3VudGVylIwLY29sbGVjdGlvbnOUjAdDb3VudGVylJOUfZSFlFKUjA5wYXJzZV9tZXNzYWdlc5RdlIwSdHJhbnNmb3JtX21lc3NhZ2VzlF2UjAt0cmFuc2Zvcm1lcpROjAtpbmNsdWRlX2xvZ5RdlIwKZGVjb3JhdGlvbpROaCFoA3ViLg==