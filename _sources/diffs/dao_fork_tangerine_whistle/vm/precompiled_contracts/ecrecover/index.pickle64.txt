gASVRT0AAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UaACMB3NlY3Rpb26Uk5QpgZR9lChoBWgGaAddlChoAIwFdGl0bGWUk5QpgZR9lChoBYw7Om1vZDpgZXRoZXJldW0uZGFvX2Zvcmsudm0ucHJlY29tcGlsZWRfY29udHJhY3RzLmVjcmVjb3ZlcmCUaAddlChoAIwJcmVmZXJlbmNllJOUKYGUfZQoaAVoBmgHXZRoAIwHbGl0ZXJhbJSTlCmBlH2UKGgFaBJoB12UaACMBFRleHSUk5SMNGV0aGVyZXVtLmRhb19mb3JrLnZtLnByZWNvbXBpbGVkX2NvbnRyYWN0cy5lY3JlY292ZXKUhZSBlH2UKGgFaAaMBnBhcmVudJRoG4wJX2RvY3VtZW50lGgDjAZzb3VyY2WUjCkudG94L2RvY3Mvc3RhZ2UwX291dC9hdXRvYXBpID0+IGRvYy9kaWZmc5SMBGxpbmWUSwB1YmGMCmF0dHJpYnV0ZXOUfZQojANpZHOUXZSMB2NsYXNzZXOUXZQojAR4cmVmlIwCcHmUjAZweS1tb2SUZYwFbmFtZXOUXZSMCGR1cG5hbWVzlF2UjAhiYWNrcmVmc5RdlHWMB3RhZ25hbWWUaBloJk5oKE5oJGgWdWJhaCl9lChoK12UaC1dlIwPY2hhbmdlLXJlcGxhY2VklGFoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIw7bW9kdWxlLWV0aGVyZXVtLmRhb19mb3JrLnZtLnByZWNvbXBpbGVkX2NvbnRyYWN0cy5lY3JlY292ZXKUjAhyZWZ0aXRsZZSMNGV0aGVyZXVtLmRhb19mb3JrLnZtLnByZWNvbXBpbGVkX2NvbnRyYWN0cy5lY3JlY292ZXKUdWg4aBRoJmgnaChLAGgkaBBoJWgDdWJoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBYxEOm1vZDpgZXRoZXJldW0udGFuZ2VyaW5lX3doaXN0bGUudm0ucHJlY29tcGlsZWRfY29udHJhY3RzLmVjcmVjb3ZlcmCUaAddlGgfjD1ldGhlcmV1bS50YW5nZXJpbmVfd2hpc3RsZS52bS5wcmVjb21waWxlZF9jb250cmFjdHMuZWNyZWNvdmVylIWUgZR9lChoBWgGaCRoSGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQojAR4cmVmlIwCcHmUjAZweS1tb2SUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRoRXViYWgpfZQoaCtdlGgtXZSMEmNoYW5nZS1yZXBsYWNlbWVudJRhaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMRG1vZHVsZS1ldGhlcmV1bS50YW5nZXJpbmVfd2hpc3RsZS52bS5wcmVjb21waWxlZF9jb250cmFjdHMuZWNyZWNvdmVylIwIcmVmdGl0bGWUjD1ldGhlcmV1bS50YW5nZXJpbmVfd2hpc3RsZS52bS5wcmVjb21waWxlZF9jb250cmFjdHMuZWNyZWNvdmVylHVoOGgUaCZoJ2goSwBoJGgQaCVoA3ViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhoDmgmjHwvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2Rhb19mb3JrL3ZtL3ByZWNvbXBpbGVkX2NvbnRyYWN0cy9lY3JlY292ZXIvaW5kZXgucnN0lGgoSwJoJGgLaCVoA3VijA9zcGhpbnguYWRkbm9kZXOUjAVpbmRleJSTlCmBlH2UKGgFaAZoB12UaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwHZW50cmllc5RdlCiMBHBhaXKUjDxtb2R1bGU7IGV0aGVyZXVtLmRhb19mb3JrLnZtLnByZWNvbXBpbGVkX2NvbnRyYWN0cy5lY3JlY292ZXKUjDttb2R1bGUtZXRoZXJldW0uZGFvX2Zvcmsudm0ucHJlY29tcGlsZWRfY29udHJhY3RzLmVjcmVjb3ZlcpRoBk50lGF1aDhobWgmaGtoKEsFaCRoC2glaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYw9RXRoZXJldW0gVmlydHVhbCBNYWNoaW5lIChFVk0pIEVDUkVDT1ZFUiBQUkVDT01QSUxFRCBDT05UUkFDVJRoB12UaB+MPUV0aGVyZXVtIFZpcnR1YWwgTWFjaGluZSAoRVZNKSBFQ1JF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YWxfYmxvY2uUk5QpgZR9lChoBViUAwAAZGVmIGVjcmVjb3Zlcihldm06IEV2bSkgLT4gTm9uZToKICAgIGV2bS5nYXNfbGVmdCA9IHN1YnRyYWN0X2dhcyhldm0uZ2FzX2xlZnQsIEdBU19FQ1JFQ09WRVIpCiAgICBkYXRhID0gZXZtLm1lc3NhZ2UuZGF0YQogICAgbWVzc2FnZV9oYXNoX2J5dGVzID0gbGVmdF9wYWRfemVyb19ieXRlcyhkYXRhWzozMl0sIDMyKQogICAgbWVzc2FnZV9oYXNoID0gSGFzaDMyKG1lc3NhZ2VfaGFzaF9ieXRlcykKICAgIHZfYnl0ZXMgPSBsZWZ0X3BhZF96ZXJvX2J5dGVzKGRhdGFbMzI6NjRdLCAzMikKICAgIHYgPSBVMjU2LmZyb21fYmVfYnl0ZXModl9ieXRlcykKICAgIHJfYnl0ZXMgPSBsZWZ0X3BhZF96ZXJvX2J5dGVzKGRhdGFbNjQ6OTZdLCAzMikKICAgIHIgPSBVMjU2LmZyb21fYmVfYnl0ZXMocl9ieXRlcykKICAgIHNfYnl0ZXMgPSBsZWZ0X3BhZF96ZXJvX2J5dGVzKGRhdGFbOTY6MTI4XSwgMzIpCiAgICBzID0gVTI1Ni5mcm9tX2JlX2J5dGVzKHNfYnl0ZXMpCgogICAgaWYgdiAhPSAyNyBhbmQgdiAhPSAyODoKICAgICAgICByZXR1cm4KICAgIGlmIDAgPj0gciBvciByID49IFNFQ1AyNTZLMU46CiAgICAgICAgcmV0dXJuCiAgICBpZiAwID49IHMgb3IgcyA+PSBTRUNQMjU2SzFOOgogICAgICAgIHJldHVybgoKICAgIHRyeToKICAgICAgICBwdWJsaWNfa2V5ID0gc2VjcDI1NmsxX3JlY292ZXIociwgcywgdiAtIDI3LCBtZXNzYWdlX2hhc2gpCiAgICBleGNlcHQgVmFsdWVFcnJvcjoKICAgICAgICAjIHVuYWJsZSB0byBleHRyYWN0IHB1YmxpYyBrZXkKICAgICAgICByZXR1cm4KCiAgICBhZGRyZXNzID0ga2VjY2FrMjU2KHB1YmxpY19rZXkpWzEyOjMyXQogICAgcGFkZGVkX2FkZHJlc3MgPSBsZWZ0X3BhZF96ZXJvX2J5dGVzKGFkZHJl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aAVoBmgHXZRoH4xDPSBsZWZ0X3BhZF96ZXJvX2J5dGVzKGFkZHJlc3MsIDMyKQogICAgZXZtLm91dHB1dCA9IHBhZGRlZF9hZGRyZXNzCpSFlIGUfZQoaAVoBmgkavEDAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UjA5jaGFuZ2UtcmVtb3ZlZJRhaDJdlGg0XZRoNl2UdWg4atECAABoJGp3AwAAaCVoA2gmaCdoKEsAdWJoH2gGhZSBlH2UKGgFaAZoJGp3AwAAaCVoA2gmaCdoKEsAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllIxtL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vZGFvX2Zvcmsvdm0vcHJlY29tcGlsZWRfY29udHJhY3RzL2VjcmVjb3Zlci5weZSMCXhtbDpzcGFjZZRqaQIAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lIwLbGluZW5vc3RhcnSUSwFzjAdsaW5lbm9zlIl1aDhqdQMAAGgmaGtoKEszaCRqiQIAAGglaAN1YmVoKX2UKGgrXZRqTgEAAGFoLV2UaDJdlIwJZWNyZWNvdmVylGFoNF2UaDZdlHVoOGgJaCZoa2goSyVoJGp4AgAAaCVoA3ViZWgpfZQoaCtdlGovAQAAYWgtXZRoMl2UjA5tb2R1bGUgZGV0YWlsc5RhaDRdlGg2XZR1aDhoCWgmaGtoKEsiaCRofmglaAN1YmVoKX2UKGgrXZSMO2V0aGVyZXVtLXZpcnR1YWwtbWFjaGluZS1ldm0tZWNyZWNvdmVyLXByZWNvbXBpbGVkLWNvbnRyYWN0lGFoLV2UaDJdlIw9ZXRoZXJldW0gdmlydHVhbCBtYWNoaW5lIChldm0pIGVjcmVjb3ZlciBwcmVjb21waWxlZCBjb250cmFjdJRhaDRdlGg2XZR1aDhoCWgmaGtoKEsHaCRoC2glaAN1YmVoKX2UKGgrXZQoaHyMNGV0aGVyZXVtLWRhby1mb3JrLXZtLXByZWNvbXBpbGVkLWNvbnRyYWN0cy1lY3JlY292ZXKUZWgtXZRoMl2UjDRldGhlcmV1bS5kYW9fZm9yay52bS5wcmVjb21waWxlZF9jb250cmFjdHMuZWNyZWNvdmVylGFoNF2UaDZdlHVoOGgJaCZoa2goSwJoJGgDaCVoA3ViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMBnNvdXJjZZRoJ3VoOGgBjA5jdXJyZW50X3NvdXJjZZRoJ4wMY3VycmVudF9saW5llEsAjAhzZXR0aW5nc5SMEWRvY3V0aWxzLmZyb250ZW5klIwGVmFsdWVzlJOUKYGUfZQojAxyZXBvcnRfbGV2ZWyUSwKMCmhhbHRfbGV2ZWyUSwSMEWV4aXRfc3RhdHVzX2xldmVslEsFjAVkZWJ1Z5ROjA53YXJuaW5nX3N0cmVhbZROjAl0cmFjZWJhY2uUTowPb3V0cHV0X2VuY29kaW5nlIwFdXRmLTiUjB1vdXRwdXRfZW5jb2RpbmdfZXJyb3JfaGFuZGxlcpSMEXhtbGNoYXJyZWZyZXBsYWNllIwOZXJyb3JfZW5jb2RpbmeUjAV1dGYtOJSMHGVycm9yX2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjBBiYWNrc2xhc2hyZXBsYWNllIwTcmVjb3JkX2RlcGVuZGVuY2llc5SMDmRvY3V0aWxzLnV0aWxzlIwORGVwZW5kZW5jeUxpc3SUk5QpgZR9lCiMBGxpc3SUXZSMBGZpbGWUTnVijAZjb25maWeUTowNZHVtcF9zZXR0aW5nc5ROjA5kdW1wX2ludGVybmFsc5ROjA9kdW1wX3RyYW5zZm9ybXOUTowPZHVtcF9wc2V1ZG9feG1slE6MEGV4cG9zZV9pbnRlcm5hbHOUTowOc3RyaWN0X3Zpc2l0b3KUTowPX2Rpc2FibGVfY29uZmlnlE6MB19zb3VyY2WUTowMX2Rlc3RpbmF0aW9ulIxWZG9jL2RpZmZzL2Rhb19mb3JrX3RhbmdlcmluZV93aGlzdGxlL3ZtL3ByZWNvbXBpbGVkX2NvbnRyYWN0cy9lY3JlY292ZXIvaW5kZXgucGlja2xlNjSUjA1fY29uZmlnX2ZpbGVzlF2UjBFsaW5lX2xlbmd0aF9saW1pdJRNECeMCXRhYl93aWR0aJRLCIwQc3ludGF4X2hpZ2hsaWdodJSMBGxvbmeUjAxzbWFydF9xdW90ZXOUiYwTc21hcnRxdW90ZXNfbG9jYWxlc5ROjB1jaGFyYWN0ZXJfbGV2ZWxfaW5saW5lX21hcmt1cJSJjAZ3cml0ZXKUjAN4bWyUjBljb21wYXJlX3NlY3Rpb25zX2J5X25hbWVzlImMDGR1bXBfcnN0ZGlmZpROjAVfYm90aJR9lChoDk6MCWdlbmVyYXRvcpROjAlkYXRlc3RhbXCUTowLc291cmNlX2xpbmuUTowKc291cmNlX3VybJROjA10b2NfYmFja2xpbmtzlGr+AQAAjBJmb290bm90ZV9iYWNrbGlua3OUSwGMDXNlY3RudW1feGZvcm2USwGMDmRvY3RpdGxlX3hmb3JtlEsBjA1kb2NpbmZvX3hmb3JtlEsBjBJzZWN0c3VidGl0bGVfeGZvcm2USwCMDnN0cmlwX2NvbW1lbnRzlE6MDmlucHV0X2VuY29kaW5nlE6MHGlucHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjAZzdHJpY3SUjA1sYW5ndWFnZV9jb2RllIwCZW6UjA5wZXBfcmVmZXJlbmNlc5ROjAxwZXBfYmFzZV91cmyUjB9odHRwOi8vd3d3LnB5dGhvbi5vcmcvZGV2L3BlcHMvlIwVcGVwX2ZpbGVfdXJsX3RlbXBsYXRllIwIcGVwLSUwNGSUjA5yZmNfcmVmZXJlbmNlc5ROjAxyZmNfYmFzZV91cmyUjBtodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC+UjB10cmltX2Zvb3Rub3RlX3JlZmVyZW5jZV9zcGFjZZROjBZmaWxlX2luc2VydGlvbl9lbmFibGVklEsBjAtyYXdfZW5hYmxlZJRLAYwOYXV0b19pZF9wcmVmaXiUjAJpZJSMCWlkX3ByZWZpeJRoBowbc3RyaXBfZWxlbWVudHNfd2l0aF9jbGFzc2VzlE6MDXN0cmlwX2NsYXNzZXOUTnWMBGJvdGiUfZSMCl9vcHRpb25zVG+UjAVfYm90aJSMC19vbGRfc291cmNllIwcLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaZSMC19uZXdfc291cmNllIwJZG9jL2RpZmZzlGp+BAAAan8EAAB1YowIcmVwb3J0ZXKUTowQaW5kaXJlY3RfdGFyZ2V0c5RdlIwRc3Vic3RpdHV0aW9uX2RlZnOUfZSMEnN1YnN0aXR1dGlvbl9uYW1lc5R9lIwIcmVmbmFtZXOUfZSMBnJlZmlkc5R9lIwHbmFtZWlkc5R9lIwJbmFtZXR5cGVzlH2UaCt9lIwNZm9vdG5vdGVfcmVmc5R9lIwNY2l0YXRpb25fcmVmc5R9lIwNYXV0b2Zvb3Rub3Rlc5RdlIwRYXV0b2Zvb3Rub3RlX3JlZnOUXZSMEHN5bWJvbF9mb290bm90ZXOUXZSMFHN5bWJvbF9mb290bm90ZV9yZWZzlF2UjAlmb290bm90ZXOUXZSMCWNpdGF0aW9uc5RdlIwSYXV0b2Zvb3Rub3RlX3N0YXJ0lEsBjBVzeW1ib2xfZm9vdG5vdGVfc3RhcnSUSwCMCmlkX2NvdW50ZXKUjAtjb2xsZWN0aW9uc5SMB0NvdW50ZXKUk5R9lIWUUpSMDnBhcnNlX21lc3NhZ2VzlF2UjBJ0cmFuc2Zvcm1fbWVzc2FnZXOUXZSMC3RyYW5zZm9ybWVylE6MC2luY2x1ZGVfbG9nlF2UjApkZWNvcmF0aW9ulE5oJWgDdWIu