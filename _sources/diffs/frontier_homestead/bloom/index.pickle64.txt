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JWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aA5oJmhraChLDmgkapkBAABoJWgDdWJorSmBlH2UKGgFWEgBAABUaGlzIG1vZHVsZXMgZGVmaW5lcyBmdW5jdGlvbnMgZm9yIGNhbGN1bGF0aW5nIGJsb29tIGZpbHRlcnMgb2YgbG9ncy4gRm9yIHRoZQpnZW5lcmFsIHRoZW9yeSBvZiBibG9vbSBmaWx0ZXJzIHNlZSBlLmcuIGBXaWtpcGVkaWEKPGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jsb29tX2ZpbHRlcj5gXy4gQmxvb20gZmlsdGVycyBhcmUgdXNlZCB0byBhbGxvdwpmb3IgZWZmaWNpZW50IHNlYXJjaGluZyBvZiBsb2dzIGJ5IGFkZHJlc3MgYW5kL29yIHRvcGljLCBieSByYXBpZGx5CmVsaW1pbmF0aW5nIGJsb2NrcyBhbmQgcmVjaWVwdHMgZnJvbSB0aGVpciBzZWFyY2gulGgHXZQoaACMBmlubGluZZSTlCmBlH2UKGgFaAZoB12UaB+Md1RoaXMgbW9kdWxlcyBkZWZpbmVzIGZ1bmN0aW9ucyBmb3IgY2FsY3VsYXRpbmcgYmxvb20gZmlsdGVycyBvZiBsb2dzLiBGb3IgdGhlCmdlbmVyYWwgdGhlb3J5IG9mIGJsb29tIGZpbHRlcnMgc2VlIGUuZy4glIWUgZR9lChoBWgGaCRqsAEAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZSMD2NoYW5nZS1yZXBsYWNlZJRhaDJdlGg0XZRoNl2UdWg4aq4BAABoJGqqAQAAaCVoA2gmaCdoKEsAdWJoFSmBlH2UKGgFjDlgV2lraXBlZGlhCjxodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CbG9vbV9maWx0ZXI+YF+UaAddlGgfjAlXaWtpcGVkaWGUhZSBlH2UKGgFaAZoJGq+AQAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlIwPY2hhbmdlLXJlcGxhY2VklGFoMl2UaDRdlGg2XZSMBG5hbWWUjAlXaWtpcGVkaWGUjAZyZWZ1cmmUjCpodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CbG9v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YW50IGJ5dGUpCiAgICAgICAgYml0X2luZGV4ID0gMHgwN0ZGIC0gYml0X3RvX3NldAoKICAgICAgICBieXRlX2luZGV4ID0gYml0X2luZGV4IC8vIDgKICAgICAgICBiaXRfdmFsdWUgPSAxIDw8ICg3IC0gKGJpdF9pbmRleCAlIDgpKQogICAgICAgIGJsb29tW2J5dGVfaW5kZXhdID0gYmxvb21bYnl0ZV9pbmRleF0gfCBiaXRfdmFsdWUKlGgHXZRoH1jyAgAAZGVmIGFkZF90b19ibG9vbShibG9vbTogYnl0ZWFycmF5LCBibG9vbV9lbnRyeTogYnl0ZXMpIC0+IE5vbmU6CiAgICBoYXNoID0ga2VjY2FrMjU2KGJsb29tX2VudHJ5KQoKICAgIGZvciBpZHggaW4gKDAsIDIsIDQpOgogICAgICAgICMgT2J0YWluIHRoZSBsZWFzdCBzaWduaWZpY2FudCAxMSBiaXRzIGZyb20gdGhlIHBhaXIgb2YgYnl0ZXMKICAgICAgICAjICgxNiBiaXRzKSwgYW5kIHNldCB0aGlzIGJpdCBpbiBibG9vbSBieXRlYXJyYXkuCiAgICAgICAgIyBUaGUgb2J0YWluZWQgYml0IGlzIDAtaW5kZXhlZCBpbiB0aGUgYmxvb20gZmlsdGVyIGZyb20gdGhlIGxlYXN0CiAgICAgICAgIyBzaWduaWZpY2FudCBiaXQgdG8gdGhlIG1vc3Qgc2lnbmlmaWNhbnQgYml0LgogICAgICAgIGJpdF90b19zZXQgPSBVaW50LmZyb21fYmVfYnl0ZXMoaGFzaFtpZHggOiBpZHggKyAyXSkgJiAweDA3RkYKICAgICAgICAjIEJlbG93IGlzIHRoZSBpbmRleCBvZiB0aGUgYml0IGluIHRoZSBieXRlYXJyYXkgKHdoZXJlIDAtaW5kZXhlZAogICAgICAgICMgYnl0ZSBpcyB0aGUgbW9zdCBzaWduaWZpY2FudCBieXRlKQogICAgICAgIGJpdF9pbmRleCA9IDB4MDdGRiAtIGJpdF90b19zZXQKCiAgICAgICAgYnl0ZV9pbmRleCA9IGJpdF9pbmRleCAvLyA4CiAgICAgICAgYml0X3ZhbHVlID0gMSA8PCAoNyAtIChiaXRfaW5kZXggJSA4KSkK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ZWgpfZQoaCtdlChofIwXZXRoZXJldW0tZnJvbnRpZXItYmxvb22UZWgtXZRoMl2UjBdldGhlcmV1bS5mcm9udGllci5ibG9vbZRhaDRdlGg2XZR1aDhoCWgmaGtoKEsCaCRoA2glaAN1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUaCd1aDhoAYwOY3VycmVudF9zb3VyY2WUaCeMDGN1cnJlbnRfbGluZZRLAIwIc2V0dGluZ3OUjBFkb2N1dGlscy5mcm9udGVuZJSMBlZhbHVlc5STlCmBlH2UKIwMcmVwb3J0X2xldmVslEsCjApoYWx0X2xldmVslEsEjBFleGl0X3N0YXR1c19sZXZlbJRLBYwFZGVidWeUTowOd2FybmluZ19zdHJlYW2UTowJdHJhY2ViYWNrlE6MD291dHB1dF9lbmNvZGluZ5SMBXV0Zi04lIwdb3V0cHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjBF4bWxjaGFycmVmcmVwbGFjZZSMDmVycm9yX2VuY29kaW5nlIwFdXRmLTiUjBxlcnJvcl9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwQYmFja3NsYXNocmVwbGFjZZSME3JlY29yZF9kZXBlbmRlbmNpZXOUjA5kb2N1dGlscy51dGlsc5SMDkRlcGVuZGVuY3lMaXN0lJOUKYGUfZQojARsaXN0lF2UjARmaWxllE51YowGY29uZmlnlE6MDWR1bXBfc2V0dGluZ3OUTowOZHVtcF9pbnRlcm5hbHOUTowPZHVtcF90cmFuc2Zvcm1zlE6MD2R1bXBfcHNldWRvX3htbJROjBBleHBvc2VfaW50ZXJuYWxzlE6MDnN0cmljdF92aXNpdG9ylE6MD19kaXNhYmxlX2NvbmZpZ5ROjAdfc291cmNllE6MDF9kZXN0aW5hdGlvbpSMMWRvYy9kaWZmcy9mcm9udGllcl9ob21lc3RlYWQvYmxvb20vaW5kZXgucGlja2xlNjSUjA1fY29uZmlnX2ZpbGVzlF2UjBFsaW5lX2xlbmd0aF9saW1pdJRNECeMCXRhYl93aWR0aJRLCIwQc3ludGF4X2hpZ2hsaWdodJSMBGxvbmeUjAxzbWFydF9xdW90ZXOUiYwTc21hcnRxdW90ZXNfbG9jYWxlc5ROjB1jaGFyYWN0ZXJfbGV2ZWxfaW5saW5lX21hcmt1cJSJjAZ3cml0ZXKUjAN4bWyUjBljb21wYXJlX3NlY3Rpb25zX2J5X25hbWVzlImMDGR1bXBfcnN0ZGlmZpROjAVfYm90aJR9lChoDk6MCWdlbmVyYXRvcpROjAlkYXRlc3RhbXCUTowLc291cmNlX2xpbmuUTowKc291cmNlX3VybJROjA10b2NfYmFja2xpbmtzlGqrAgAAjBJmb290bm90ZV9iYWNrbGlua3OUSwGMDXNlY3RudW1feGZvcm2USwGMDmRvY3RpdGxlX3hmb3JtlEsBjA1kb2NpbmZvX3hmb3JtlEsBjBJzZWN0c3VidGl0bGVfeGZvcm2USwCMDnN0cmlwX2NvbW1lbnRzlE6MDmlucHV0X2VuY29kaW5nlE6MHGlucHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjAZzdHJpY3SUjA1sYW5ndWFnZV9jb2RllIwCZW6UjA5wZXBfcmVmZXJlbmNlc5ROjAxwZXBfYmFzZV91cmyUjB9odHRwOi8vd3d3LnB5dGhvbi5vcmcvZGV2L3BlcHMvlIwVcGVwX2ZpbGVfdXJsX3RlbXBsYXRllIwIcGVwLSUwNGSUjA5yZmNfcmVmZXJlbmNlc5ROjAxyZmNfYmFzZV91cmyUjBtodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC+UjB10cmltX2Zvb3Rub3RlX3JlZmVyZW5jZV9zcGFjZZROjBZmaWxlX2luc2VydGlvbl9lbmFibGVklEsBjAtyYXdfZW5hYmxlZJRLAYwOYXV0b19pZF9wcmVmaXiUjAJpZJSMCWlkX3ByZWZpeJRoBowbc3RyaXBfZWxlbWVudHNfd2l0aF9jbGFzc2VzlE6MDXN0cmlwX2NsYXNzZXOUTnWMBGJvdGiUfZSMCl9vcHRpb25zVG+UjAVfYm90aJSMC19vbGRfc291cmNllIwcLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaZSMC19uZXdfc291cmNllIwJZG9jL2RpZmZzlGoOCAAAag8IAAB1YowIcmVwb3J0ZXKUTowQaW5kaXJlY3RfdGFyZ2V0c5RdlIwRc3Vic3RpdHV0aW9uX2RlZnOUfZSMEnN1YnN0aXR1dGlvbl9uYW1lc5R9lIwIcmVmbmFtZXOUfZSMBnJlZmlkc5R9lIwHbmFtZWlkc5R9lIwJbmFtZXR5cGVzlH2UaCt9lIwNZm9vdG5vdGVfcmVmc5R9lIwNY2l0YXRpb25fcmVmc5R9lIwNYXV0b2Zvb3Rub3Rlc5RdlIwRYXV0b2Zvb3Rub3RlX3JlZnOUXZSMEHN5bWJvbF9mb290bm90ZXOUXZSMFHN5bWJvbF9mb290bm90ZV9yZWZzlF2UjAlmb290bm90ZXOUXZSMCWNpdGF0aW9uc5RdlIwSYXV0b2Zvb3Rub3RlX3N0YXJ0lEsBjBVzeW1ib2xfZm9vdG5vdGVfc3RhcnSUSwCMCmlkX2NvdW50ZXKUjAtjb2xsZWN0aW9uc5SMB0NvdW50ZXKUk5R9lIWUUpSMDnBhcnNlX21lc3NhZ2VzlF2UjBJ0cmFuc2Zvcm1fbWVzc2FnZXOUXZSMC3RyYW5zZm9ybWVylE6MC2luY2x1ZGVfbG9nlF2UjApkZWNvcmF0aW9ulE5oJWgDdWIu