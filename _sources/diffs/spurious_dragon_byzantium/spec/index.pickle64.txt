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aCtdlGgtXZRoMl2UaDRdlGg2XZSMCXhtbDpzcGFjZZSMCHByZXNlcnZllHVoOGpmBQAAaCZqZAUAAGgoTmgkakYFAAB1YmVoKX2UKGgrXZRqAQEAAGFoLV2UaDJdlIwHY2xhc3Nlc5RhaDRdlGg2XZR1aDhoCWgmaGtoKEsXaCRqNQUAAGglaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYwJRnVuY3Rpb25zlGgHXZRoH4wJRnVuY3Rpb25zlIWUgZR9lChoBWgGaCRqEAYAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhoDmgmaGtoKEsgaCRqDQYAAHVialgFAAApgZR9lChoBWgGaAddlGgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMBHNwZWOUamMFAAB1aDhqVwUAAGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgoTmgkag0GAAB1YmpnBQAAKYGUfZQoaAVYKAUAAAoKCgphcHBseV9mb3JrCgpUcmFuc2Zvcm1zIHRoZSBzdGF0ZSBmcm9tIHRoZSBwcmV2aW91cyBoYXJkIGZvcmsgKG9sZCkgaW50byB0aGUgYmxvY2sKCmdldF9sYXN0XzI1Nl9ibG9ja19oYXNoZXMKCk9idGFpbiB0aGUgbGlzdCBvZiBoYXNoZXMgb2YgdGhlIHByZXZpb3VzIDI1NiBibG9ja3MgaW4gb3JkZXIgb2YgaW5jcmVhc2luZwoKc3RhdGVfdHJhbnNpdGlvbgoKQXR0ZW1wdHMgdG8gYXBwbHkgYSBibG9jayB0byBhbiBleGlzdGluZyBibG9jayBjaGFpbi4KCnZhbGlkYXRlX2hlYWRlcgoKVmVyaWZpZXMgYSBibG9jayBoZWFkZXIuCgpnZW5lcmF0ZV9oZWFkZXJfaGFzaF9mb3JfcG93CgpHZW5lcmF0ZSBybHAgaGFzaCBvZiB0aGUgaGVhZGVyIHdoaWNoIGlzIHRvIGJlIHVzZWQgZm9yIFByb29mLW9mLVdvcmsKCnZhbGlkYXRlX3Byb29mX29mX3dvcmsKClZhbGlkYXRlcyB0aGUgUHJvb2Ygb2YgV29yayBjb25zdHJhaW50cy4KCmFwcGx5X2JvZHkKCkV4ZWN1dGVzIGEgYmxvY2suCgp2YWxpZGF0ZV9vbW1lcnMKClZhbGlkYXRlcyB0aGUgb21tZXJzIG1lbnRpb25lZCBpbiB0aGUgYmxvY2suCgpwYXlfcmV3YXJkcwoKUGF5IHJld2FyZHMgdG8gdGhlIGJsb2NrIG1pbmVyIGFzIHdlbGwgYXMgdGhlIG9tbWVycyBtaW5lcnMuCgpwcm9jZXNzX3RyYW5zYWN0aW9uCgpFeGVjdXRlIGEgdHJhbnNhY3Rpb24gYWdhaW5zdCB0aGUgcHJvdmlkZWQgZW52aXJvbm1lbnQuCgp2YWxpZGF0ZV90cmFuc2FjdGlvbgoKVmVyaWZpZXMgYSB0cmFuc2FjdGlvbi4KCmNhbGN1bGF0ZV9pbnRyaW5zaWNfY29zdAoKQ2FsY3VsYXRlcyB0aGUgaW50cmluc2ljIGNvc3Qgb2YgdGhlIHRyYW5zYWN0aW9uIHRoYXQgaXMgY2hhcmdlZCBiZWZvcmUKCnJlY292ZXJfc2VuZGVyCgpFeHRyYWN0cyB0aGUgc2VuZGVyIGFkZHJlc3MgZnJvbSBhIHRyYW5zYWN0aW9uLgoKc2lnbmluZ19oYXNoX3ByZTE1NQoKQ29tcHV0ZSB0aGUgaGFzaCBvZiBhIHRyYW5zYWN0aW9uIHVzZWQgaW4gYSBsZWdhY3kgKHByZSBFSVAgMTU1KSBzaWduYXR1cmUuCgpzaWduaW5nX2hhc2hfMTU1CgpDb21wdXRlIHRoZSBoYXNoIG9mIGEgdHJhbnNhY3Rpb24gdXNlZCBpbiBhIEVJUCAxNTUgc2lnbmF0dXJlLgoKY29tcHV0ZV9oZWFkZXJfaGFzaAoKQ29tcHV0ZXMgdGhlIGhhc2ggb2YgYSBibG9jayBoZWFkZXIuCgpjaGVja19nYXNfbGltaXQKClZhbGlkYXRlcyB0aGUgZ2FzIGxpbWl0IGZvciBhIGJsb2NrLgoKY2FsY3VsYXRlX2Jsb2NrX2RpZmZpY3VsdHkKCkNvbXB1dGVzIGRpZmZpY3VsdHkgb2YgYSBibG9jayB1c2luZyBpdHMgaGVhZGVyIGFuZCBw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lGg0XZRoNl2UdWg4aBloJk5oKE5oJGq6BgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDdldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5nZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzlIwIcmVmdGl0bGWUjDdldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5nZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzlHVoOGgUaCZOaChOaCRqtgYAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGqzBgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqWBQAAaCZOaChOaCRqsAYAAHViapcFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMS09idGFpbiB0aGUgbGlzdCBvZiBoYXNoZXMgb2YgdGhlIHByZXZpb3VzIDI1NiBibG9ja3MgaW4gb3JkZXIgb2YgaW5jcmVhc2luZ5RoB12UaB+MS09idGFpbiB0aGUgbGlzdCBvZiBoYXNoZXMgb2YgdGhlIHByZXZpb3VzIDI1NiBibG9ja3MgaW4gb3JkZXIgb2YgaW5jcmVhc2luZ5SFlIGUfZQoaAVoBmgkaucGAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRq5AYAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkarAGAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apEFAABoJk5oKE5oJGpHBgAAdWJqkgUAACmBlH2UKGgFaAZoB12UKGqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEg6b2JqOmBzdGF0ZV90cmFuc2l0aW9uIDxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5zdGF0ZV90cmFuc2l0aW9uPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFagoHAABoB12UaB+MEHN0YXRlX3RyYW5zaXRpb26UhZSBlH2UKGgFaAZoJGoPBwAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlChoL4wCcHmUjAZweS1vYmqUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRqDAcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIwuZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuc3RhdGVfdHJhbnNpdGlvbpSMCHJlZnRpdGxllIwuZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuc3RhdGVfdHJhbnNpdGlvbpR1aDhoFGgmTmgoTmgkaggHAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqBQcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkagIHAAB1YmqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjDVBdHRlbXB0cyB0byBhcHBseSBhIGJsb2NrIHRvIGFuIGV4aXN0aW5nIGJsb2NrIGNoYWluLpRoB12UaB+MNUF0dGVtcHRzIHRvIGFwcGx5IGEgYmxvY2sgdG8gYW4gZXhpc3RpbmcgYmxvY2sgY2hhaW4ulIWUgZR9lChoBWgGaCRqOQcAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGo2BwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqWBQAAaCZOaChOaCRqAgcAAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqkQUAAGgmTmgoTmgkakcGAAB1YmqSBQAAKYGUfZQoaAVoBmgHXZQoapcFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMRjpvYmo6YHZhbGlkYXRlX2hlYWRlciA8ZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMudmFsaWRhdGVfaGVhZGVyPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFalwHAABoB12UaB+MD3ZhbGlkYXRlX2hlYWRlcpSFlIGUfZQoaAVoBmgkamEHAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGpeBwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjC1ldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy52YWxpZGF0ZV9oZWFkZXKUjAhyZWZ0aXRsZZSMLWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnZhbGlkYXRlX2hlYWRlcpR1aDhoFGgmTmgoTmgkaloHAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqVwcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgk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a5SFlIGUfZQoaAVoBmgkagUIAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGoCCAAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDRldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy52YWxpZGF0ZV9wcm9vZl9vZl93b3JrlIwIcmVmdGl0bGWUjDRldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy52YWxpZGF0ZV9wcm9vZl9vZl93b3JrlHVoOGgUaCZOaChOaCRq/gcAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGr7BwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqWBQAAaCZOaChOaCRq+AcAAHViapcFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMKFZhbGlkYXRlcyB0aGUgUHJvb2Ygb2YgV29yayBjb25zdHJhaW50cy6UaAddlGgfjChWYWxpZGF0ZXMgdGhlIFByb29mIG9mIFdvcmsgY29uc3RyYWludHMulIWUgZR9lChoBWgGaCRqLwgAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGosCAAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqWBQAAaCZOaChOaCRq+AcAAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq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cnMgbWVudGlvbmVkIGluIHRoZSBibG9jay6UhZSBlH2UKGgFaAZoJGrTCAAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkatAIAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGqcCAAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqRBQAAaCZOaChOaCRqRwYAAHViapIFAAApgZR9lChoBWgGaAddlChqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYw+Om9iajpgcGF5X3Jld2FyZHMgPGV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnBheV9yZXdhcmRzPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFavYIAABoB12UaB+MC3BheV9yZXdhcmRzlIWUgZR9lChoBWgGaCRq+wgAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkavgIAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMKWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnBheV9yZXdhcmRzlIwIcmVmdGl0bGWUjClldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5wYXlfcmV3YXJkc5R1aDhoFGgmTmgoTmgkavQIAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRq8QgAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkau4IAAB1YmqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjDxQYXkgcmV3YXJkcyB0byB0aGUgYmxvY2sgbWluZXIgYXMgd2VsbCBhcyB0aGUgb21tZXJzIG1pbmVycy6UaAddlGgfjDxQYXkgcmV3YXJkcyB0byB0aGUgYmxvY2sgbWluZXIgYXMgd2VsbCBhcyB0aGUgb21tZXJzIG1pbmVycy6UhZSBlH2UKGgFaAZoJGolCQAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkaiIJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGruCAAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqRBQAAaCZOaChOaCRqRwYAAHViapIFAAApgZR9lChoBWgGaAddlChqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxOOm9iajpgcHJvY2Vzc190cmFuc2FjdGlvbiA8ZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMucHJvY2Vzc190cmFuc2FjdGlvbj5glGgHXZRoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBWpICQAAaAddlGgfjBNwcm9jZXNzX3RyYW5zYWN0aW9ulIWUgZR9lChoBWgGaCRqTQkAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkakoJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMMWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnByb2Nlc3NfdHJhbnNhY3Rpb26UjAhyZWZ0aXRsZZSMMWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnByb2Nlc3NfdHJhbnNhY3Rpb26UdWg4aBRoJk5oKE5oJGpGCQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkakMJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGpACQAAdWJqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYw3RXhlY3V0ZSBhIHRyYW5zYWN0aW9uIGFnYWluc3QgdGhlIHByb3ZpZGVkIGVudmlyb25tZW50LpRoB12UaB+MN0V4ZWN1dGUgYSB0cmFuc2FjdGlvbiBhZ2FpbnN0IHRoZSBwcm92aWRlZCBlbnZpcm9ubWVudC6UhZSBlH2UKGgFaAZoJGp3CQAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkanQJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGpACQAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqRBQAAaCZOaChOaCRqRwYAAHViapIFAAApgZR9lChoBWgGaAddlChqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxQOm9iajpgdmFsaWRhdGVfdHJhbnNhY3Rpb24gPGV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnZhbGlkYXRlX3RyYW5zYWN0aW9uPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFapoJAABoB12UaB+MFHZhbGlkYXRlX3RyYW5zYWN0aW9ulIWUgZR9lChoBWgGaCRqnwkAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkapwJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMMmV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnZhbGlkYXRlX3RyYW5zYWN0aW9ulIwIcmVmdGl0bGWUjDJldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy52YWxpZGF0ZV90cmFuc2FjdGlvbpR1aDhoFGgmTmgoTmgkapgJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqlQkAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkapIJAAB1YmqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjBdWZXJpZmllcyBhIHRyYW5zYWN0aW9uLpRoB12UaB+MF1ZlcmlmaWVzIGEgdHJhbnNhY3Rpb24ulIWUgZR9lChoBWgGaCRqyQkAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGrGCQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqWBQAAaCZOaChOaCRqkgkAAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqkQUAAGgmTmgoTmgkakcGAAB1YmqSBQAAKYGUfZQoaAVoBmgHXZQoapcFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMWDpvYmo6YGNhbGN1bGF0ZV9pbnRyaW5zaWNfY29zdCA8ZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuY2FsY3VsYXRlX2ludHJpbnNpY19jb3N0PmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFauwJAABoB12UaB+MGGNhbGN1bGF0ZV9pbnRyaW5zaWNfY29zdJSFlIGUfZQoaAVoBmgkavEJAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGruCQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDZldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5jYWxjdWxhdGVfaW50cmluc2ljX2Nvc3SUjAhyZWZ0aXRsZZSMNmV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLmNhbGN1bGF0ZV9pbnRyaW5zaWNfY29zdJR1aDhoFGgmTmgoTmgkauoJAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRq5wkAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkauQJAAB1YmqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEdDYWxjdWxhdGVzIHRoZSBpbnRyaW5zaWMgY29zdCBvZiB0aGUgdHJhbnNhY3Rpb24gdGhhdCBpcyBjaGFyZ2VkIGJlZm9yZZRoB12UaB+MR0NhbGN1bGF0ZXMgdGhlIGludHJpbnNpYyBjb3N0IG9mIHRoZSB0cmFuc2FjdGlvbiB0aGF0IGlzIGNoYXJnZWQgYmVmb3JllIWUgZR9lChoBWgGaCRqGwoAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjL2luZGV4LnJzdDo1Nzo8YXV0b3N1bW1hcnk+lGgoSwFoJGoYCgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqWBQAAaCZOaChOaCRq5AkAAHViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqkQUAAGgmTmgoTmgkakcGAAB1YmqSBQAAKYGUfZQoaAVoBmgHXZQoapcFAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMRDpvYmo6YHJlY292ZXJfc2VuZGVyIDxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5yZWNvdmVyX3NlbmRlcj5glGgHXZRoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBWo+CgAAaAddlGgfjA5yZWNvdmVyX3NlbmRlcpSFlIGUfZQoaAVoBmgkakMKAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGpACgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjCxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5yZWNvdmVyX3NlbmRlcpSMCHJlZnRpdGxllIwsZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMucmVjb3Zlcl9zZW5kZXKUdWg4aBRoJk5oKE5oJGo8CgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkajkKAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGo2CgAAdWJqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYwvRXh0cmFjdHMgdGhlIHNlbmRlciBhZGRyZXNzIGZyb20gYSB0cmFuc2FjdGlvbi6UaAddlGgfjC9FeHRyYWN0cyB0aGUgc2VuZGVyIGFkZHJlc3MgZnJvbSBhIHRyYW5zYWN0aW9uLpSFlIGUfZQoaAVoBmgkam0KAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqagoAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkajYKAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apEFAABoJk5oKE5oJGpHBgAAdWJqkgUAACmBlH2UKGgFaAZoB12UKGqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjE46b2JqOmBzaWduaW5nX2hhc2hfcHJlMTU1IDxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5zaWduaW5nX2hhc2hfcHJlMTU1PmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFapAKAABoB12UaB+ME3NpZ25pbmdfaGFzaF9wcmUxNTWUhZSBlH2UKGgFaAZoJGqVCgAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlChoL4wCcHmUjAZweS1vYmqUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRqkgoAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIwxZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuc2lnbmluZ19oYXNoX3ByZTE1NZSMCHJlZnRpdGxllIwxZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuc2lnbmluZ19oYXNoX3ByZTE1NZR1aDhoFGgmTmgoTmgkao4KAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqiwoAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkaogKAAB1YmqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEtDb21wdXRlIHRoZSBoYXNoIG9mIGEgdHJhbnNhY3Rpb24gdXNlZCBpbiBhIGxlZ2FjeSAocHJlIEVJUCAxNTUpIHNpZ25hdHVyZS6UaAddlGgfjEtDb21wdXRlIHRoZSBoYXNoIG9mIGEgdHJhbnNhY3Rpb24gdXNlZCBpbiBhIGxlZ2FjeSAocHJlIEVJUCAxNTUpIHNpZ25hdHVyZS6UhZSBlH2UKGgFaAZoJGq/CgAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkarwKAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGqICgAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqRBQAAaCZOaChOaCRqRwYAAHViapIFAAApgZR9lChoBWgGaAddlChqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxIOm9iajpgc2lnbmluZ19oYXNoXzE1NSA8ZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuc2lnbmluZ19oYXNoXzE1NT5glGgHXZRoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBWriCgAAaAddlGgfjBBzaWduaW5nX2hhc2hfMTU1lIWUgZR9lChoBWgGaCRq5woAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkauQKAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMLmV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnNpZ25pbmdfaGFzaF8xNTWUjAhyZWZ0aXRsZZSMLmV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLnNpZ25pbmdfaGFzaF8xNTWUdWg4aBRoJk5oKE5oJGrgCgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkat0KAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGraCgAAdWJqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYw+Q29tcHV0ZSB0aGUgaGFzaCBvZiBhIHRyYW5zYWN0aW9uIHVzZWQgaW4gYSBFSVAgMTU1IHNpZ25hdHVyZS6UaAddlGgfjD5Db21wdXRlIHRoZSBoYXNoIG9mIGEgdHJhbnNhY3Rpb24gdXNlZCBpbiBhIEVJUCAxNTUgc2lnbmF0dXJlLpSFlIGUfZQoaAVoBmgkahELAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqDgsAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkatoKAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apEFAABoJk5oKE5oJGpHBgAAdWJqkgUAACmBlH2UKGgFaAZoB12UKGqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjE46b2JqOmBjb21wdXRlX2hlYWRlcl9oYXNoIDxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5jb21wdXRlX2hlYWRlcl9oYXNoPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFajQLAABoB12UaB+ME2NvbXB1dGVfaGVhZGVyX2hhc2iUhZSBlH2UKGgFaAZoJGo5CwAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlChoL4wCcHmUjAZweS1vYmqUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRqNgsAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIwxZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuY29tcHV0ZV9oZWFkZXJfaGFzaJSMCHJlZnRpdGxllIwxZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuY29tcHV0ZV9oZWFkZXJfaGFzaJR1aDhoFGgmTmgoTmgkajILAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6NTc6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqLwsAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkaiwLAAB1YmqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjCRDb21wdXRlcyB0aGUgaGFzaCBvZiBhIGJsb2NrIGhlYWRlci6UaAddlGgfjCRDb21wdXRlcyB0aGUgaGFzaCBvZiBhIGJsb2NrIGhlYWRlci6UhZSBlH2UKGgFaAZoJGpjCwAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMdi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMvaW5kZXgucnN0OjU3OjxhdXRvc3VtbWFyeT6UaChLAWgkamALAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4apYFAABoJk5oKE5oJGosCwAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGqRBQAAaCZOaChOaCRqRwYAAHViapIFAAApgZR9lChoBWgGaAddlChqlwUAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxGOm9iajpgY2hlY2tfZ2FzX2xpbWl0IDxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5jaGVja19nYXNfbGltaXQ+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVqhgsAAGgHXZRoH4wPY2hlY2tfZ2FzX2xpbWl0lIWUgZR9lChoBWgGaCRqiwsAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkaogLAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMLWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLmNoZWNrX2dhc19saW1pdJSMCHJlZnRpdGxllIwtZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWMuY2hlY2tfZ2FzX2xpbWl0lHVoOGgUaCZOaChOaCRqhAsAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjHYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVj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RkFDVE9SIDxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5HQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1I+YFyUaAddlChoFSmBlH2UKGgFaAZoB12UaBopgZR9lChoBYxeOm9iajpgR0FTX0xJTUlUX0FESlVTVE1FTlRfRkFDVE9SIDxldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5HQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1I+YJRoB12UaB+MG0dBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUpSFlIGUfZQoaAVoBmgkatwMAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGrZDAAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDlldGhlcmV1bS5zcHVyaW91c19kcmFnb24uc3BlYy5HQVNfTElNSVRfQURKVVNUTUVOVF9GQUNUT1KUjAhyZWZ0aXRsZZSMOWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi5zcGVjLkdBU19MSU1JVF9BREpVU1RNRU5UX0ZBQ1RPUpR1aDhoFGgmTmgoTmgkatUMAAB1YmgfaAaFlIGUfZQoaAVoBmgkatUMAABoJWgDaCZoJ2goSwB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJox2L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy9pbmRleC5yc3Q6Njk6PGF1dG9zdW1tYXJ5PpRoKEsBaCRq0gwAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgkas8MAAB1YmqXBQAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFaAZoB12UaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCZOaChOaCRqBw0AAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqlgUAAGgmTmgoTmgk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ICAgICAgcmVjZW50X2Jsb2NrX2hhc2hlcy5hcHBlbmQocHJldl9ibG9ja19oYXNoKQoKICAgICMgV2UgYXJlIGNvbXB1dGluZyB0aGUgaGFzaCBvbmx5IGZvciB0aGUgbW9zdCByZWNlbnQgYmxvY2sgYW5kIG5vdCBmb3IKICAgICMgdGhlIHJlc3Qgb2YgdGhlIGJsb2NrcyBhcyB0aGV5IGhhdmUgc3VjY2Vzc29ycyB3aGljaCBoYXZlIHRoZSBoYXNoIG9mCiAgICAjIHRoZSBjdXJyZW50IGJsb2NrIGFzIHBhcmVudCBoYXNoLgogICAgbW9zdF9yZWNlbnRfYmxvY2tfaGFzaCA9IGtlY2NhazI1NihybHAuZW5jb2RlKHJlY2VudF9ibG9ja3NbLTFdLmhlYWRlcikpCiAgICByZWNlbnRfYmxvY2tfaGFzaGVzLmFwcGVuZChtb3N0X3JlY2VudF9ibG9ja19oYXNoKQoKICAgIHJldHVybiByZWNlbnRfYmxvY2tfaGFzaGVzCpRoB12UaB9Y3wIAAGRlZiBnZXRfbGFzdF8yNTZfYmxvY2tfaGFzaGVzKGNoYWluOiBCbG9ja0NoYWluKSAtPiBMaXN0W0hhc2gzMl06CiAgICByZWNlbnRfYmxvY2tzID0gY2hhaW4uYmxvY2tzWy0yNTU6XQogICAgIyBUT0RPOiBUaGlzIGZ1bmN0aW9uIGhhcyBub3QgYmVlbiB0ZXN0ZWQgcmlnb3JvdXNseQogICAgaWYgbGVuKHJlY2VudF9ibG9ja3MpID09IDA6CiAgICAgICAgcmV0dXJuIFtdCgogICAgcmVjZW50X2Jsb2NrX2hhc2hlcyA9IFtdCgogICAgZm9yIGJsb2NrIGluIHJlY2VudF9ibG9ja3M6CiAgICAgICAgcHJldl9ibG9ja19oYXNoID0gYmxvY2suaGVhZGVyLnBhcmVudF9oYXNoCiAgICAgICAgcmVjZW50X2Jsb2NrX2hhc2hlcy5hcHBlbmQocHJldl9ibG9ja19oYXNoKQoKICAgICMgV2UgYXJlIGNvbXB1dGluZyB0aGUgaGFzaCBvbmx5IGZvciB0aGUgbW9zdCByZWNlbnQgYmxvY2sgYW5kIG5vdCBmb3IKICAgICMgdGhlIHJlc3Qgb2YgdGhlIGJsb2Nr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aGVhZGVyCiAgICB2YWxpZGF0ZV9oZWFkZXIoYmxvY2suaGVhZGVyLCBwYXJlbnRfaGVhZGVyKQogICAgdmFsaWRhdGVfb21tZXJzKGJsb2NrLm9tbWVycywgYmxvY2suaGVhZGVyLCBjaGFpbikKICAgICgKICAgICAgICBnYXNfdXNlZCwKICAgICAgICB0cmFuc2FjdGlvbnNfcm9vdCwKICAgICAgICByZWNlaXB0X3Jvb3QsCiAgICAgICAgYmxvY2tfbG9nc19ibG9vbSwKICAgICAgICBzdGF0ZSwKICAgICkgPSBhcHBseV9ib2R5KAogICAgICAgIGNoYWluLnN0YXRlLAogICAgICAgIGdldF9sYXN0XzI1Nl9ibG9ja19oYXNoZXMoY2hhaW4pLAogICAgICAgIGJsb2NrLmhlYWRlci5jb2luYmFzZSwKICAgICAgICBibG9jay5oZWFkZXIubnVtYmVyLAogICAgICAgIGJsb2NrLmhlYWRlci5nYXNfbGltaXQsCiAgICAgICAgYmxvY2suaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBibG9jay5oZWFkZXIuZGlmZmljdWx0eSwKICAgICAgICBibG9jay50cmFuc2FjdGlvbnMsCiAgICAgICAgYmxvY2sub21tZXJzLAogICAgKQogICAgZW5zdXJlKGdhc191c2VkID09IGJsb2NrLmhlYWRlci5nYXNfdXNlZCwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKHRyYW5zYWN0aW9uc19yb290ID09IGJsb2NrLmhlYWRlci50cmFuc2FjdGlvbnNfcm9vdCwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKHN0YXRlX3Jvb3Qoc3RhdGUpID09IGJsb2NrLmhlYWRlci5zdGF0ZV9yb290LCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUocmVjZWlwdF9yb290ID09IGJsb2NrLmhlYWRlci5yZWNlaXB0X3Jvb3QsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZShibG9ja19sb2dzX2Jsb29tID09IGJsb2NrLmhlYWRlci5ibG9vbSwgSW52YWxpZEJsb2NrKQoKICAgIGNoYWluLmJsb2Nrcy5hcHBlbmQoYmxvY2spCiAgICBpZiBsZW4oY2hhaW4uYmxvY2tzKSA+IDI1NToKICAgICAgICAjIFJlYWwgY2xpZW50cyBoYXZlIHRvIHN0b3JlIG1vcmUgYmxvY2tzIHRvIGRlYWwgd2l0aCByZW9yZ3MsIGJ1dCB0aGUKICAgICAgICAjIHByb3RvY29sIG9ubHkgcmVxdWlyZXMgdGhlIGxhc3QgMjU1CiAgICAgICAgY2hhaW4uYmxvY2tzID0gY2hhaW4uYmxvY2tzWy0yNTU6XQqUaAddlGgfWKoEAABkZWYgc3RhdGVfdHJhbnNpdGlvbihjaGFpbjogQmxvY2tDaGFpbiwgYmxvY2s6IEJsb2NrKSAtPiBOb25lOgogICAgcGFyZW50X2hlYWRlciA9IGNoYWluLmJsb2Nrc1stMV0uaGVhZGVyCiAgICB2YWxpZGF0ZV9oZWFkZXIoYmxvY2suaGVhZGVyLCBwYXJlbnRfaGVhZGVyKQogICAgdmFsaWRhdGVfb21tZXJzKGJsb2NrLm9tbWVycywgYmxvY2suaGVhZGVyLCBjaGFpbikKICAgICgKICAgICAgICBnYXNfdXNlZCwKICAgICAgICB0cmFuc2FjdGlvbnNfcm9vdCwKICAgICAgICByZWNlaXB0X3Jvb3QsCiAgICAgICAgYmxvY2tfbG9nc19ibG9vbSwKICAgICAgICBzdGF0ZSwKICAgICkgPSBhcHBseV9ib2R5KAogICAgICAgIGNoYWluLnN0YXRlLAogICAgICAgIGdldF9sYXN0XzI1Nl9ibG9ja19oYXNoZXMoY2hhaW4pLAogICAgICAgIGJsb2NrLmhlYWRlci5jb2luYmFzZSwKICAgICAgICBibG9jay5oZWFkZXIubnVtYmVyLAogICAgICAgIGJsb2NrLmhlYWRlci5nYXNfbGltaXQsCiAgICAgICAgYmxvY2suaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBibG9jay5oZWFkZXIuZGlmZmljdWx0eSwKICAgICAgICBibG9jay50cmFuc2FjdGlvbnMsCiAgICAgICAgYmxvY2sub21tZXJzLAogICAgKQogICAgZW5zdXJlKGdhc191c2VkID09IGJsb2NrLmhlYWRlci5nYXNfdXNlZCwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKHRyYW5zYWN0aW9uc19yb290ID09IGJsb2NrLmhlYWRlci50cmFuc2FjdGlvbnNfcm9vdCwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKHN0YXRlX3Jvb3Qoc3RhdGUpID09IGJsb2NrLmhlYWRlci5zdGF0ZV9yb290LCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUocmVjZWlwdF9yb290ID09IGJsb2NrLmhlYWRlci5yZWNlaXB0X3Jvb3QsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZShibG9ja19sb2dzX2Jsb29tID09IGJsb2NrLmhlYWRlci5ibG9vbSwgSW52YWxpZEJsb2NrKQoKICAgIGNoYWluLmJsb2Nrcy5hcHBlbmQoYmxvY2spCiAgICBpZiBsZW4oY2hhaW4uYmxvY2tzKSA+IDI1NToKICAgICAgICAjIFJlYWwgY2xpZW50cyBoYXZlIHRvIHN0b3JlIG1vcmUgYmxvY2tzIHRvIGRlYWwgd2l0aCByZW9yZ3MsIGJ1dCB0aGUKICAgICAgICAjIHByb3RvY29sIG9ubHkgcmVxdWlyZXMgdGhlIGxhc3QgMjU1CiAgICAgICAgY2hhaW4uYmxvY2tzID0gY2hhaW4uYmxvY2tzWy0yNTU6XQqUhZSBlH2UKGgFaAZoJGpZGAAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllIxWL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMucHmUjAl4bWw6c3BhY2WUagUGAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqiA8AAEsBc4wHbGluZW5vc5SJdWg4ak4PAABoJmhraChL5WgkaisXAAB1YmVoKX2UKGgrXZRq6AIAAGFoLV2UaDJdlIwQc3RhdGVfdHJhbnNpdGlvbpRhaDRdlGg2XZR1aDhoCWgmaGtoKEvXaCRq2Q4AAGglaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYwPdmFsaWRhdGVfaGVhZGVylGgHXZRoH4wPdmFs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ZXNjdHlwZZRqixkAAIwHbm9pbmRleJSJdWg4agoPAABoJmgnaChLAGgkancYAABoJWgDdWJqTw8AACmBlH2UKGgFWAIDAABkZWYgdmFsaWRhdGVfaGVhZGVyKGhlYWRlcjogSGVhZGVyLCBwYXJlbnRfaGVhZGVyOiBIZWFkZXIpIC0+IE5vbmU6CiAgICBlbnN1cmUoaGVhZGVyLnRpbWVzdGFtcCA+IHBhcmVudF9oZWFkZXIudGltZXN0YW1wLCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUoaGVhZGVyLm51bWJlciA9PSBwYXJlbnRfaGVhZGVyLm51bWJlciArIDEsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZSgKICAgICAgICBjaGVja19nYXNfbGltaXQoaGVhZGVyLmdhc19saW1pdCwgcGFyZW50X2hlYWRlci5nYXNfbGltaXQpLAogICAgICAgIEludmFsaWRCbG9jaywKICAgICkKICAgIGVuc3VyZShsZW4oaGVhZGVyLmV4dHJhX2RhdGEpIDw9IDMyLCBJbnZhbGlkQmxvY2spCgogICAgYmxvY2tfZGlmZmljdWx0eSA9IGNhbGN1bGF0ZV9ibG9ja19kaWZmaWN1bHR5KAogICAgICAgIGhlYWRlci5udW1iZXIsCiAgICAgICAgaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBwYXJlbnRfaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBwYXJlbnRfaGVhZGVyLmRpZmZpY3VsdHksCiAgICApCiAgICBlbnN1cmUoaGVhZGVyLmRpZmZpY3VsdHkgPT0gYmxvY2tfZGlmZmljdWx0eSwgSW52YWxpZEJsb2NrKQoKICAgIGJsb2NrX3BhcmVudF9oYXNoID0ga2VjY2FrMjU2KHJscC5lbmNvZGUocGFyZW50X2hlYWRlcikpCiAgICBlbnN1cmUoaGVhZGVyLnBhcmVudF9oYXNoID09IGJsb2NrX3BhcmVudF9oYXNoLCBJbnZhbGlkQmxvY2spCgogICAgdmFsaWRhdGVfcHJvb2Zfb2Zfd29yayhoZWFkZXIpCpRoB12UKGgfjEhkZWYgdmFsaWRhdGVfaGVhZGVyKGhlYWRlcjogSGVhZGVyLCBwYXJlbnRfaGVhZGVyOiBIZWFkZXIpIC0+IE5vbmU6CiAgICCUhZSBlH2UKGgFaAZoJGqTGQAAaCVoA2gmaCdoKEsAdWJqWQ8AACmBlH2UKGgFaAZoB12UaB+MRnBhcmVudF9oYXNfb21tZXJzID0gcGFyZW50X2hlYWRlci5vbW1lcnNfaGFzaCAhPSBFTVBUWV9PTU1FUl9IQVNICiAgICCUhZSBlH2UKGgFaAZoJGqbGQAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlIwMY2hhbmdlLWFkZGVklGFoMl2UaDRdlGg2XZR1aDhqWA8AAGgkapMZAABoJWgDaCZoJ2goSwB1YmgfWNQBAABlbnN1cmUoaGVhZGVyLnRpbWVzdGFtcCA+IHBhcmVudF9oZWFkZXIudGltZXN0YW1wLCBJbnZhbGlkQmxvY2spCiAgICBlbnN1cmUoaGVhZGVyLm51bWJlciA9PSBwYXJlbnRfaGVhZGVyLm51bWJlciArIDEsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZSgKICAgICAgICBjaGVja19nYXNfbGltaXQoaGVhZGVyLmdhc19saW1pdCwgcGFyZW50X2hlYWRlci5nYXNfbGltaXQpLAogICAgICAgIEludmFsaWRCbG9jaywKICAgICkKICAgIGVuc3VyZShsZW4oaGVhZGVyLmV4dHJhX2RhdGEpIDw9IDMyLCBJbnZhbGlkQmxvY2spCgogICAgYmxvY2tfZGlmZmljdWx0eSA9IGNhbGN1bGF0ZV9ibG9ja19kaWZmaWN1bHR5KAogICAgICAgIGhlYWRlci5udW1iZXIsCiAgICAgICAgaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBwYXJlbnRfaGVhZGVyLnRpbWVzdGFtcCwKICAgICAgICBwYXJlbnRfaGVhZGVyLmRpZmZpY3VsdHksCiAgICCUhZSBlH2UKGgFaAZoJGqTGQAAaCVoA2gmaCdoKEsAdWJqWQ8AACmBlH2UKGgFaAZoB12UaB+MF3BhcmVudF9oYXNfb21tZXJzLAogICAglIWUgZR9lChoBWgGaCRqrRkAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZSMDGNoYW5nZS1hZGRlZJRhaDJdlGg0XZRoNl2UdWg4algPAABoJGqTGQAAaCVoA2gmaCdoKEsAdWJoH4zmKQogICAgZW5zdXJlKGhlYWRlci5kaWZmaWN1bHR5ID09IGJsb2NrX2RpZmZpY3VsdHksIEludmFsaWRCbG9jaykKCiAgICBibG9ja19wYXJlbnRfaGFzaCA9IGtlY2NhazI1NihybHAuZW5jb2RlKHBhcmVudF9oZWFkZXIpKQogICAgZW5zdXJlKGhlYWRlci5wYXJlbnRfaGFzaCA9PSBibG9ja19wYXJlbnRfaGFzaCwgSW52YWxpZEJsb2NrKQoKICAgIHZhbGlkYXRlX3Byb29mX29mX3dvcmsoaGVhZGVyKQqUhZSBlH2UKGgFaAZoJGqTGQAAaCVoA2gmaCdoKEsAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllIxWL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3NwZWMucHmUjAl4bWw6c3BhY2WUagUGAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqiA8AAEsBc4wHbGluZW5vc5SJdWg4ak4PAABoJmhraChL+GgkancYAABoJWgDdWJlaCl9lChoK12UagoDAABhaC1dlGgyXZSMD3ZhbGlkYXRlX2hlYWRlcpRhaDRdlGg2XZR1aDhoCWgmaGtoKEvqaCRq2Q4AAGglaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYwcZ2VuZXJhdGVfaGVhZGVyX2hhc2hfZm9yX3Bvd5RoB12UaB+MHGdlbmVyYXRlX2hlYWRlcl9oYXNoX2Zvcl9wb3eUhZSBlH2UKGgFaAZoJGrYGQAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGgOaCZoa2goS/1oJGrVGQAAdWJobimBlH2UKGgFaAZoB12UaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwHZW50cmllc5RdlHVoOGhtaCZOaChOaCRq1RkAAHViagsPAAApgZR9lChoBWgGaAddlChqEA8AACmBlH2UKGgFjCRnZW5lcmF0ZV9oZWFkZXJfaGFzaF9mb3Jf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dWJqTw8AACmBlH2UKGgFWAMCAABkZWYgZ2VuZXJhdGVfaGVhZGVyX2hhc2hfZm9yX3BvdyhoZWFkZXI6IEhlYWRlcikgLT4gSGFzaDMyOgogICAgaGVhZGVyX2RhdGFfd2l0aG91dF9wb3dfYXJ0ZWZhY3RzID0gWwogICAgICAgIGhlYWRlci5wYXJlbnRfaGFzaCwKICAgICAgICBoZWFkZXIub21tZXJzX2hhc2gsCiAgICAgICAgaGVhZGVyLmNvaW5iYXNlLAogICAgICAgIGhlYWRlci5zdGF0ZV9yb290LAogICAgICAgIGhlYWRlci50cmFuc2FjdGlvbnNfcm9vdCwKICAgICAgICBoZWFkZXIucmVjZWlwdF9yb290LAogICAgICAgIGhlYWRlci5ibG9vbSwKICAgICAgICBoZWFkZXIuZGlmZmljdWx0eSwKICAgICAgICBoZWFkZXIubnVtYmVyLAogICAgICAgIGhlYWRlci5nYXNfbGltaXQsCiAgICAgICAgaGVhZGVyLmdhc191c2VkLAogICAgICAgIGhlYWRlci50aW1lc3RhbXAsCiAgICAgICAgaGVhZGVyLmV4dHJhX2RhdGEsCiAgICBdCgogICAgcmV0dXJuIHJscC5ybHBfaGFzaChoZWFkZXJfZGF0YV93aXRob3V0X3Bvd19hcnRlZmFjdHMpCpRoB12UaB9YAwIAAGRlZiBnZW5lcmF0ZV9oZWFkZXJfaGFzaF9mb3JfcG93KGhlYWRlcjogSGVhZGVyKSAtPiBIYXNoMzI6CiAgICBoZWFkZXJfZGF0YV93aXRob3V0X3Bvd19hcnRlZmFjdHMgPSBbCiAgICAgICAgaGVhZGVyLnBhcmVudF9oYXNoLAogICAgICAgIGhlYWRlci5vbW1lcnNfaGFzaCwKICAgICAgICBoZWFkZXIuY29pbmJhc2UsCiAgICAgICAgaGVhZGVyLnN0YXRlX3Jvb3QsCiAgICAgICAgaGVhZGVyLnRyYW5zYWN0aW9uc19yb290LAogICAgICAgIGhlYWRlci5yZWNlaXB0X3Jvb3QsCiAgICAgICAgaGVhZGVyLmJsb29tLAogICAgICAgIGhlYWRlci5kaWZmaWN1bHR5LAogICAgICAgIGhlYWRlci5udW1iZXIsCiAgICAgICAg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dGEgaW5zdGVhZCBvZgogICAgIyBjYWxjdWxhdGluZyBjYWNoZSBmb3IgZXZlcnkgYmxvY2sgdmFsaWRhdGlvbi4KICAgIGNhY2hlID0gZ2VuZXJhdGVfY2FjaGUoaGVhZGVyLm51bWJlcikKICAgIG1peF9kaWdlc3QsIHJlc3VsdCA9IGhhc2hpbW90b19saWdodCgKICAgICAgICBoZWFkZXJfaGFzaCwgaGVhZGVyLm5vbmNlLCBjYWNoZSwgZGF0YXNldF9zaXplKGhlYWRlci5udW1iZXIpCiAgICApCgogICAgZW5zdXJlKG1peF9kaWdlc3QgPT0gaGVhZGVyLm1peF9kaWdlc3QsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZSgKICAgICAgICBVaW50LmZyb21fYmVfYnl0ZXMocmVzdWx0KSA8PSAoVTI1Nl9DRUlMX1ZBTFVFIC8vIGhlYWRlci5kaWZmaWN1bHR5KSwKICAgICAgICBJbnZhbGlkQmxvY2ssCiAgICApCpRoB12UaB9YNgIAAGRlZiB2YWxpZGF0ZV9wcm9vZl9vZl93b3JrKGhlYWRlcjogSGVhZGVyKSAtPiBOb25lOgogICAgaGVhZGVyX2hhc2ggPSBnZW5lcmF0ZV9oZWFkZXJfaGFzaF9mb3JfcG93KGhlYWRlcikKICAgICMgVE9ETzogTWVtb2l6ZSB0aGlzIHNvbWV3aGVyZSBhbmQgcmVhZCBmcm9tIHRoYXQgZGF0YSBpbnN0ZWFkIG9mCiAgICAjIGNhbGN1bGF0aW5nIGNhY2hlIGZvciBldmVyeSBibG9jayB2YWxpZGF0aW9uLgogICAgY2FjaGUgPSBnZW5lcmF0ZV9jYWNoZShoZWFkZXIubnVtYmVyKQogICAgbWl4X2RpZ2VzdCwgcmVzdWx0ID0gaGFzaGltb3RvX2xpZ2h0KAogICAgICAgIGhlYWRlcl9oYXNoLCBoZWFkZXIubm9uY2UsIGNhY2hlLCBkYXRhc2V0X3NpemUoaGVhZGVyLm51bWJlcikKICAgICkKCiAgICBlbnN1cmUobWl4X2RpZ2VzdCA9PSBoZWFkZXIubWl4X2RpZ2VzdCwgSW52YWxpZEJsb2NrKQogICAgZW5zdXJlKAogICAgICAgIFVpbnQuZnJvbV9iZV9ieXRl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BmgHXZRorSmBlH2UKGgFWNgBAABnYXNfYXZhaWxhYmxlIChldGgxc3BlYy5iYXNlX3R5cGVzLlVpbnQpIC0tIFJlbWFpbmluZyBnYXMgYWZ0ZXIgYWxsIHRyYW5zYWN0aW9ucyBoYXZlIGJlZW4gZXhlY3V0ZWQuCgp0cmFuc2FjdGlvbnNfcm9vdCAoZXRoMXNwZWMuZXRoX3R5cGVzLlJvb3QpIC0tIFRyaWUgcm9vdCBvZiBhbGwgdGhlIHRyYW5zYWN0aW9ucyBpbiB0aGUgYmxvY2suCgpyZWNlaXB0X3Jvb3QgKGV0aDFzcGVjLmV0aF90eXBlcy5Sb290KSAtLSBUcmllIHJvb3Qgb2YgYWxsIHRoZSByZWNlaXB0cyBpbiB0aGUgYmxvY2suCgpibG9ja19sb2dzX2Jsb29tIChCbG9vbSkgLS0gTG9ncyBibG9vbSBvZiBhbGwgdGhlIGxvZ3MgaW5jbHVkZWQgaW4gYWxsIHRoZSB0cmFuc2FjdGlvbnMgb2YgdGhlCmJsb2NrLgoKc3RhdGUgKGV0aDFzcGVjLmV0aF90eXBlcy5TdGF0ZSkgLS0gU3RhdGUgYWZ0ZXIgYWxsIHRyYW5zYWN0aW9ucyBoYXZlIGJlZW4gZXhlY3V0ZWQulGgHXZRooymBlH2UKGgFaAZoB12UKGioKYGUfZQoaAWMaioqZ2FzX2F2YWlsYWJsZSoqIChgZXRoMXNwZWMuYmFzZV90eXBlcy5VaW50YCkgLS0gUmVtYWluaW5nIGdhcyBhZnRlciBhbGwgdHJhbnNhY3Rpb25zIGhhdmUgYmVlbiBleGVjdXRlZC6UaAddlGitKYGUfZQoaAVq5CAAAGgHXZQoai8VAAApgZR9lChoBYwRKipnYXNfYXZhaWxhYmxlKiqUaAddlGgfjA1nYXNfYXZhaWxhYmxllIWUgZR9lChoBWgGaCRq6SAAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqLhUAAGgmTmgoTmgkauYgAAB1YmgfjAIgKJSFlIGUfZQoaAVoBmgkauYgAABoJWgDaCZoJ2goSwB1YmqKBgAAKYGUfZQoaAWMGmBldGgxc3BlYy5iYXNlX3R5cGVzLlVpbnRglGgHXZRoH4wYZXRoMXNwZWMuYmFzZV90eXBl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IFVpbnQsCiAgICB0cmFuc2FjdGlvbnM6IFR1cGxlW1RyYW5zYWN0aW9uLCAuLi5dLAogICAgb21tZXJzOiBUdXBsZVtIZWFkZXIsIC4uLl0sCikgLT4gVHVwbGVbVWludCwgUm9vdCwgUm9vdCwgQmxvb20sIFN0YXRlXToKICAgIGdhc19hdmFpbGFibGUgPSBibG9ja19nYXNfbGltaXQKICAgIHRyYW5zYWN0aW9uc190cmllOiBUcmllW0J5dGVzLCBPcHRpb25hbFtUcmFuc2FjdGlvbl1dID0gVHJpZSgKICAgICAgICBzZWN1cmVkPUZhbHNlLCBkZWZhdWx0PU5vbmUKICAgICkKICAgIHJlY2VpcHRzX3RyaWU6IFRyaWVbQnl0ZXMsIE9wdGlvbmFsW1JlY2VpcHRdXSA9IFRyaWUoCiAgICAgICAgc2VjdXJlZD1GYWxzZSwgZGVmYXVsdD1Ob25lCiAgICApCiAgICBibG9ja19sb2dzOiBUdXBsZVtMb2csIC4uLl0gPSAoKQoKICAgIGZvciBpLCB0eCBpbiBlbnVtZXJhdGUodHJhbnNhY3Rpb25zKToKICAgICAgICB0cmllX3NldCh0cmFuc2FjdGlvbnNfdHJpZSwgcmxwLmVuY29kZShVaW50KGkpKSwgdHgpCgogICAgICAgIGVuc3VyZSh0eC5nYXMgPD0gZ2FzX2F2YWlsYWJsZSwgSW52YWxpZEJsb2NrKQogICAgICAgIHNlbmRlcl9hZGRyZXNzID0gcmVjb3Zlcl9zZW5kZXIodHgpCgogICAgICAgIGVudiA9IHZtLkVudmlyb25tZW50KAogICAgICAgICAgICBjYWxsZXI9c2VuZGVyX2FkZHJlc3MsCiAgICAgICAgICAgIG9yaWdpbj1zZW5kZXJfYWRkcmVzcywKICAgICAgICAgICAgYmxvY2tfaGFzaGVzPWJsb2NrX2hhc2hlcywKICAgICAgICAgICAgY29pbmJhc2U9Y29pbmJhc2UsCiAgICAgICAgICAgIG51bWJlcj1ibG9ja19udW1iZXIsCiAgICAgICAgICAgIGdhc19saW1pdD1ibG9ja19nYXNfbGltaXQsCiAgICAgICAgICAgIGdhc19wcmljZT10eC5nYXNfcHJpY2UsCiAgICAgICAgICAgIHRpbWU9YmxvY2tfdGltZSwKICAgICAgICAgICAgZGlmZmljdWx0eT1ibG9ja19kaWZmaWN1bHR5LAogICAgICAgICAgICBzdGF0ZT1zdGF0ZSwKICAgICAgICApCgogICAgICAgIGdhc191c2VkLCBsb2dzID0gcHJvY2Vzc190cmFuc2FjdGlvbihlbnYsIHR4KQogICAgICAgIGdhc19hdmFpbGFibGUgLT0gZ2FzX3VzZWQKCiAgICAgICAgdHJpZV9zZXQoCiAgICAgICAgICAgIHJlY2VpcHRzX3RyaWUsCiAgICAgICAgICAgIHJscC5lbmNvZGUoVWludChpKSksCiAgICAgICAgICAgIFJlY2VpcHQoCiAgICAgICAgICAgICAgICBwb3N0X3N0YXRlPXN0YXRlX3Jvb3Qoc3RhdGUpLAogICAgICAgICAgICAgICAgY3VtdWxhdGl2ZV9nYXNfdXNlZD0oYmxvY2tfZ2FzX2xpbWl0IC0gZ2FzX2F2YWlsYWJsZSksCiAgICAgICAgICAgICAgICBibG9vbT1sb2dzX2Jsb29tKGxvZ3MpLAogICAgICAgICAgICAgICAgbG9ncz1sb2dzLAogICAgICAgICAgICApLAogICAgICAgICkKICAgICAgICBibG9ja19sb2dzICs9IGxvZ3MKCiAgICBwYXlfcmV3YXJkcyhzdGF0ZSwgYmxvY2tfbnVtYmVyLCBjb2luYmFzZSwgb21tZXJzKQoKICAgIGdhc19yZW1haW5pbmcgPSBibG9ja19nYXNfbGltaXQgLSBnYXNfYXZhaWxhYmxlCgogICAgYmxvY2tfbG9nc19ibG9vbSA9IGxvZ3NfYmxvb20oYmxvY2tfbG9ncykKCiAgICByZXR1cm4gKAogICAgICAgIGdhc19yZW1haW5pbmcsCiAgICAgICAgcm9vdCh0cmFuc2FjdGlvbnNfdHJpZSksCiAgICAgICAgcm9vdChyZWNlaXB0c190cmllKSwKICAgICAgICBibG9ja19sb2dzX2Jsb29tLAogICAgICAgIHN0YXRlLAogICAgKQqUaAddlChoH1isBAAAZGVmIGFwcGx5X2JvZHkoCiAgICBzdGF0ZTogU3RhdGUsCiAgICBibG9ja19oYXNoZXM6IExpc3RbSGFzaDMyXSwKICAgIGNvaW5iYXNlOiBBZGRyZXNzLAogICAgYmxvY2tfbnVtYmVyOiBVaW50LAogICAgYmxvY2tfZ2FzX2xpbWl0OiBVaW50LAogICAgYmxvY2tfdGltZTogVTI1NiwKICAgIGJsb2NrX2RpZmZpY3VsdHk6IFVpbnQsCiAgICB0cmFuc2FjdGlvbnM6IFR1cGxlW1RyYW5zYWN0aW9uLCAuLi5dLAogICAgb21tZXJzOiBUdXBsZVtIZWFkZXIsIC4uLl0sCikgLT4gVHVwbGVbVWludCwgUm9vdCwgUm9vdCwgQmxvb20sIFN0YXRlXToKICAgIGdhc19hdmFpbGFibGUgPSBibG9ja19nYXNfbGltaXQKICAgIHRyYW5zYWN0aW9uc190cmllOiBUcmllW0J5dGVzLCBPcHRpb25hbFtUcmFuc2FjdGlvbl1dID0gVHJpZSgKICAgICAgICBzZWN1cmVkPUZhbHNlLCBkZWZhdWx0PU5vbmUKICAgICkKICAgIHJlY2VpcHRzX3RyaWU6IFRyaWVbQnl0ZXMsIE9wdGlvbmFsW1JlY2VpcHRdXSA9IFRyaWUoCiAgICAgICAgc2VjdXJlZD1GYWxzZSwgZGVmYXVsdD1Ob25lCiAgICApCiAgICBibG9ja19sb2dzOiBUdXBsZVtMb2csIC4uLl0gPSAoKQoKICAgIGZvciBpLCB0eCBpbiBlbnVtZXJhdGUodHJhbnNhY3Rpb25zKToKICAgICAgICB0cmllX3NldCh0cmFuc2FjdGlvbnNfdHJpZSwgcmxwLmVuY29kZShVaW50KGkpKSwgdHgpCgogICAgICAgIGVuc3VyZSh0eC5nYXMgPD0gZ2FzX2F2YWlsYWJsZSwgSW52YWxpZEJsb2NrKQogICAgICAgIHNlbmRlcl9hZGRyZXNzID0gcmVjb3Zlcl9zZW5kZXIodHgpCgogICAgICAgIGVudiA9IHZtLkVudmlyb25tZW50KAogICAgICAgICAgICBjYWxsZXI9c2VuZGVyX2FkZHJlc3MsCiAgICAgICAgICAgIG9yaWdpbj1zZW5kZXJfYWRkcmVzcywKICAgICAgICAgICAgYmxvY2tfaGFzaGVzPWJsb2NrX2hhc2hlcywKICAgICAgICAgICAgY29pbmJhc2U9Y29pbmJhc2UsCiAgICAgICAgICAgIG51bWJlcj1ibG9ja19udW1iZXIsCiAgICAgICAgICAgIGdhc19saW1pdD1ibG9ja19nYXNfbGltaXQsCiAgICAgICAgICAgIGdhc19wcmljZT10eC5nYXNfcHJpY2UsCiAgICAgICAgICAgIHRpbWU9YmxvY2tfdGltZSwKICAgICAgICAgICAgZGlmZmljdWx0eT1ibG9ja19kaWZmaWN1bHR5LAogICAgICAgICAgICBzdGF0ZT1zdGF0ZSwKICAgICAgICApCgogICAgICAgIGdhc191c2VkLCCUhZSBlH2UKGgFaAZoJGomIgAAaCVoA2gmaCdoKEsAdWJqWQ8AACmBlH2UKGgFaAZoB12UaB9YlwEAAGxvZ3MsIGhhc19lcnJlZCA9IHByb2Nlc3NfdHJhbnNhY3Rpb24oZW52LCB0eCkKICAgICAgICBnYXNfYXZhaWxhYmxlIC09IGdhc191c2VkCgogICAgICAgIHRyaWVfc2V0KAogICAgICAgICAgICByZWNlaXB0c190cmllLAogICAgICAgICAgICBybHAuZW5jb2RlKFVpbnQoaSkpLAogICAgICAgICAgICBSZWNlaXB0KAogICAgICAgICAgICAgICAgc3VjY2VlZGVkPW5vdCBoYXNfZXJyZWQsCiAgICAgICAgICAgICAgICBjdW11bGF0aXZlX2dhc191c2VkPShibG9ja19nYXNfbGltaXQgLSBnYXNfYXZhaWxhYmxlKSwKICAgICAgICAgICAgICAgIGJsb29tPWxvZ3NfYmxvb20obG9ncyksCiAgICAgICAgICAgICAgICBsb2dzPWxvZ3MsCiAgICAgICAgICAgICksCiAgICAgICAgKQogICAgICAgIGJsb2NrX2xvZ3MgKz0glIWUgZR9lChoBWgGaCRqLiIAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZSMDGNoYW5nZS1hZGRlZJRhaDJdlGg0XZRoNl2UdWg4algPAABoJGomIgAAaCVoA2gmaCdoKEsAdWJoH4wFbG9ncyCUhZSBlH2UKGgFaAZoJGomIgAAaCVoA2gmaCdoKEsAdWJqWQ8AACmBlH2UKGgFaAZoB12UaB+MRnBheV9yZXdhcmRzKHN0YXRlLCBibG9ja19udW1iZXIsIGNv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IHJldHVybgoKICAgICMgQ2hlY2sgdGhhdCBlYWNoIG9tbWVyIHNhdGlzZmllcyB0aGUgY29uc3RyYWludHMgb2YgYSBoZWFkZXIKICAgIGZvciBvbW1lciBpbiBvbW1lcnM6CiAgICAgICAgZW5zdXJlKDEgPD0gb21tZXIubnVtYmVyIDwgYmxvY2tfaGVhZGVyLm51bWJlciwgSW52YWxpZEJsb2NrKQogICAgICAgIG9tbWVyX3BhcmVudF9oZWFkZXIgPSBjaGFpbi5ibG9ja3NbCiAgICAgICAgICAgIC0oYmxvY2tfaGVhZGVyLm51bWJlciAtIG9tbWVyLm51bWJlcikgLSAxCiAgICAgICAgXS5oZWFkZXIKICAgICAgICB2YWxpZGF0ZV9oZWFkZXIob21tZXIsIG9tbWVyX3BhcmVudF9oZWFkZXIpCgogICAgIyBDaGVjayB0aGF0IHRoZXJlIGNhbiBiZSBvbmx5IGF0IG1vc3QgMiBvbW1lcnMgZm9yIGEgYmxvY2suCiAgICBlbnN1cmUobGVuKG9tbWVycykgPD0gMiwgSW52YWxpZEJsb2NrKQoKICAgIG9tbWVyc19oYXNoZXMgPSBbcmxwLnJscF9oYXNoKG9tbWVyKSBmb3Igb21tZXIgaW4gb21tZXJzXQogICAgIyBDaGVjayB0aGF0IHRoZXJlIGFyZSBubyBkdXBsaWNhdGVzIGluIHRoZSBvbW1lcnMgb2YgY3VycmVudCBibG9jawogICAgZW5zdXJlKGxlbihvbW1lcnNfaGFzaGVzKSA9PSBsZW4oc2V0KG9tbWVyc19oYXNoZXMpKSwgSW52YWxpZEJsb2NrKQoKICAgIHJlY2VudF9jYW5vbmljYWxfYmxvY2tzID0gY2hhaW4uYmxvY2tzWy0oTUFYX09NTUVSX0RFUFRIICsgMSkgOl0KICAgIHJlY2VudF9jYW5vbmljYWxfYmxvY2tfaGFzaGVzID0gewogICAgICAgIHJscC5ybHBfaGFzaChibG9jay5oZWFkZXIpIGZvciBibG9jayBpbiByZWNlbnRfY2Fub25pY2FsX2Jsb2NrcwogICAgfQogICAgcmVjZW50X29tbWVyc19oYXNoZXM6IFNldFtIYXNoMzJdID0gc2V0KCkKICAgIGZvciBibG9jayBpbiByZWNlbnRfY2Fub25pY2FsX2Jsb2NrczoKICAgICAgICByZWNlbnRfb21tZXJzX2hhc2hlcyA9IHJlY2VudF9vbW1lcnNfaGFzaGVzLnVuaW9uKAogICAgICAgICAgICB7cmxwLnJscF9oYXNoKG9tbWVyKSBmb3Igb21tZXIgaW4gYmxvY2sub21tZXJzfQogICAgICAgICkKCiAgICBmb3Igb21tZXJfaW5kZXgsIG9tbWVyIGluIGVudW1lcmF0ZShvbW1lcnMpOgogICAgICAgIG9tbWVyX2hhc2ggPSBvbW1lcnNfaGFzaGVzW29tbWVyX2luZGV4XQogICAgICAgICMgVGhlIGN1cnJlbnQgYmxvY2sgc2hvdWxkbid0IGJlIHRoZSBvbW1lcgogICAgICAgIGVuc3VyZShvbW1lcl9oYXNoICE9IGJsb2NrX2hhc2gsIEludmFsaWRCbG9jaykKCiAgICAgICAgIyBPbW1lciBzaG91bGRuJ3QgYmUgb25lIG9mIHRoZSByZWNlbnQgY2Fub25pY2FsIGJsb2NrcwogICAgICAgIGVuc3VyZShvbW1lcl9oYXNoIG5vdCBpbiByZWNlbnRfY2Fub25pY2FsX2Jsb2NrX2hhc2hlcywgSW52YWxpZEJsb2NrKQoKICAgICAgICAjIE9tbWVyIHNob3VsZG4ndCBiZSBvbmUgb2YgdGhlIHVuY2xlcyBtZW50aW9uZWQgaW4gdGhlIHJlY2VudAogICAgICAgICMgY2Fub25pY2FsIGJsb2NrcwogICAgICAgIGVuc3VyZShvbW1lcl9oYXNoIG5vdCBpbiByZWNlbnRfb21tZXJzX2hhc2hlcywgSW52YWxpZEJsb2NrKQoKICAgICAgICAjIE9tbWVyIGFnZSB3aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgYmxvY2suIEZvciBleGFtcGxlLCBhbiBhZ2Ugb2YKICAgICAgICAjIDEgaW5kaWNhdGVzIHRoYXQgdGhlIG9tbWVyIGlzIGEgc2libGluZyBvZiBwcmV2aW91cyBibG9jay4KICAgICAgICBvbW1lcl9hZ2UgPSBibG9ja19oZWFkZXIubnVtYmVyIC0gb21tZXIubnVtYmVyCiAgICAgICAgZW5zdXJlKDEgPD0gb21tZXJfYWdlIDw9IE1BWF9PTU1FUl9ERVBUSCwgSW52YWxpZEJsb2NrKQoKICAgICAgICBlbnN1cmUoCiAgICAgICAgICAgIG9tbWVyLnBhcmVudF9oYXNoIGluIHJlY2VudF9jYW5vbmljYWxfYmxvY2tfaGFzaGVzLCBJbnZhbGlkQmxvY2sKICAgICAgICApCiAgICAgICAgZW5zdXJlKG9tbWVyLnBhcmVudF9oYXNoICE9IGJsb2NrX2hlYWRlci5wYXJlbnRfaGFzaCwgSW52YWxpZEJsb2NrKQqUaAddlGgfWAEJAABkZWYgdmFsaWRhdGVfb21tZXJzKAogICAgb21tZXJzOiBUdXBsZVtIZWFkZXIsIC4uLl0sIGJsb2NrX2hlYWRlcjogSGVhZGVyLCBjaGFpbjogQmxvY2tDaGFpbgopIC0+IE5vbmU6CiAgICBibG9ja19oYXNoID0gcmxwLnJscF9oYXNoKGJsb2NrX2hlYWRlcikKCiAgICBlbnN1cmUocmxwLnJscF9oYXNoKG9tbWVycykgPT0gYmxvY2tfaGVhZGVyLm9tbWVyc19oYXNoLCBJbnZhbGlkQmxvY2spCgogICAgaWYgbGVuKG9tbWVycykgPT0gMDoKICAgICAgICAjIE5vdGhpbmcgdG8gdmFsaWRhdGUKICAgICAgICByZXR1cm4KCiAgICAjIENoZWNrIHRoYXQgZWFjaCBvbW1lciBzYXRpc2ZpZXMgdGhlIGNvbnN0cmFpbnRzIG9mIGEgaGVhZGVyCiAgICBmb3Igb21tZXIgaW4gb21tZXJzOgogICAgICAgIGVuc3VyZSgxIDw9IG9tbWVyLm51bWJlciA8IGJsb2NrX2hlYWRlci5udW1iZXIsIEludmFsaWRCbG9jaykKICAgICAgICBvbW1lcl9wYXJlbnRfaGVhZGVyID0gY2hhaW4uYmxvY2tzWwogICAgICAgICAgICAtKGJsb2NrX2hlYWRlci5udW1iZXIgLSBvbW1lci5udW1iZXIpIC0gMQogICAgICAgIF0uaGVhZGVyCiAgICAgICAgdmFsaWRhdGVfaGVhZGVyKG9tbWVyLCBvbW1lcl9wYXJlbnRfaGVhZGVyKQoKICAgICMgQ2hlY2sgdGhhdCB0aGVyZSBjYW4gYmUgb25seSBhdCBtb3N0IDIgb21tZXJzIGZvciBhIGJsb2NrLgogICAgZW5zdXJlKGxlbihvbW1lcnMpIDw9IDIsIEludmFsaWRCbG9jaykKCiAgICBvbW1lcnNfaGFzaGVzID0gW3JscC5ybHBfaGFzaChvbW1lcikgZm9yIG9tbWVyIGluIG9tbWVyc10KICAgICMgQ2hlY2sgdGhhdCB0aGVyZSBhcmUgbm8gZHVwbGljYXRlcyBpbiB0aGUgb21tZXJzIG9mIGN1cnJlbnQgYmxvY2sKICAgIGVuc3VyZShsZW4ob21tZXJzX2hhc2hlcykgPT0gbGVuKHNldChvbW1lcnNfaGFzaGVzKSksIEludmFsaWRCbG9jaykKCiAgICByZWNlbnRfY2Fub25pY2FsX2Jsb2NrcyA9IGNoYWluLmJsb2Nrc1stKE1BWF9PTU1FUl9ERVBUSCArIDEpIDpdCiAgICByZWNlbnRfY2Fub25pY2FsX2Jsb2NrX2hhc2hlcyA9IHsKICAgICAgICBybHAucmxwX2hhc2goYmxvY2suaGVhZGVyKSBmb3IgYmxvY2sgaW4gcmVjZW50X2Nhbm9uaWNhbF9ibG9ja3MKICAgIH0KICAgIHJlY2VudF9vbW1lcnNfaGFzaGVzOiBTZXRbSGFzaDMyXSA9IHNldCgpCiAgICBmb3IgYmxvY2sgaW4gcmVjZW50X2Nhbm9uaWNhbF9ibG9ja3M6CiAgICAgICAgcmVjZW50X29tbWVyc19oYXNoZXMgPSByZWNlbnRfb21tZXJzX2hhc2hlcy51bmlvbigKICAgICAgICAgICAge3JscC5ybHBfaGFzaChvbW1lcikgZm9yIG9tbWVyIGluIGJsb2NrLm9tbWVyc30KICAgICAgICApCgogICAgZm9yIG9tbWVyX2luZGV4LCBvbW1lciBpbiBlbnVtZXJhdGUob21tZXJzKToKICAgICAgICBvbW1lcl9oYXNoID0gb21tZXJzX2hhc2hlc1tvbW1lcl9pbmRleF0KICAgICAgICAjIFRoZSBjdXJyZW50IGJsb2NrIHNob3VsZG4ndCBiZSB0aGUgb21tZXIKICAgICAgICBlbnN1cmUob21tZXJfaGFzaCAhPSBibG9ja19oYXNoLCBJbnZhbGlkQmxvY2spCgogICAgICAgICMgT21tZXIgc2hvdWxkbid0IGJlIG9uZSBvZiB0aGUgcmVjZW50IGNhbm9uaWNhbCBibG9ja3MKICAgICAgICBlbnN1cmUob21tZXJfaGFzaCBub3QgaW4gcmVjZW50X2Nhbm9uaWNhbF9ibG9ja19oYXNoZXMsIEludmFsaWRCbG9jaykKCiAgICAgICAgIyBPbW1lciBzaG91bGRuJ3QgYmUgb25lIG9mIHRoZSB1bmNsZXMgbWVudGlvbmVkIGluIHRoZSByZWNlbnQKICAgICAgICAjIGNhbm9uaWNhbCBibG9ja3MKICAgICAgICBlbnN1cmUob21tZXJfaGFzaCBub3QgaW4gcmVjZW50X29tbWVyc19oYXNoZXMsIEludmFsaWRCbG9jaykKCiAgICAgICAgIyBPbW1lciBhZ2Ugd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IGJsb2NrLiBGb3IgZXhhbXBsZSwgYW4gYWdlIG9mCiAgICAgICAgIyAxIGluZGljYXRlcyB0aGF0IHRoZSBvbW1lciBpcyBhIHNpYmxpbmcgb2YgcHJldmlvdXMgYmxvY2suCiAgICAgICAgb21tZXJfYWdlID0gYmxvY2tfaGVhZGVyLm51bWJlciAtIG9tbWVyLm51bWJlcgogICAgICAgIGVuc3VyZSgxIDw9IG9tbWVyX2FnZSA8PSBNQVhfT01NRVJfREVQVEgsIEludmFsaWRCbG9jaykKCiAgICAgICAgZW5zdXJlKAogICAgICAgICAgICBvbW1lci5wYXJlbnRfaGFzaCBpbiByZWNlbnRfY2Fub25pY2FsX2Jsb2NrX2hhc2hlcywgSW52YWxpZEJsb2NrCiAgICAgICAgKQogICAgICAgIGVuc3VyZShvbW1lci5wYXJlbnRfaGFzaCAhPSBibG9ja19oZWFkZXIucGFyZW50X2hhc2gsIEludmFsaWRCbG9jaykKlIWUgZR9lChoBWgGaCRq9iMAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMBnNvdXJjZZSMVi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL3NwdXJpb3VzX2RyYWdvbi9zcGVjLnB5lIwJeG1sOnNw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T0NLX1JFV0FSRCArIChsZW4ob21tZXJzKSAqIChCTE9DS19SRVdBUkQgLy8gMzIpKQogICAgY3JlYXRlX2V0aGVyKHN0YXRlLCBjb2luYmFzZSwgbWluZXJfcmV3YXJkKQoKICAgIGZvciBvbW1lciBpbiBvbW1lcnM6CiAgICAgICAgIyBPbW1lciBhZ2Ugd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IGJsb2NrLgogICAgICAgIG9tbWVyX2FnZSA9IFUyNTYoYmxvY2tfbnVtYmVyIC0gb21tZXIubnVtYmVyKQogICAgICAgIG9tbWVyX21pbmVyX3Jld2FyZCA9ICgoOCAtIG9tbWVyX2FnZSkgKiBCTE9DS19SRVdBUkQpIC8vIDgKICAgICAgICBjcmVhdGVfZXRoZXIoc3RhdGUsIG9tbWVyLmNvaW5iYXNlLCBvbW1lcl9taW5lcl9yZXdhcmQpCpRoB12UaB9Y/gEAAGRlZiBwYXlfcmV3YXJkcygKICAgIHN0YXRlOiBTdGF0ZSwKICAgIGJsb2NrX251bWJlcjogVWludCwKICAgIGNvaW5iYXNlOiBBZGRyZXNzLAogICAgb21tZXJzOiBUdXBsZVtIZWFkZXIsIC4uLl0sCikgLT4gTm9uZToKICAgIG1pbmVyX3Jld2FyZCA9IEJMT0NLX1JFV0FSRCArIChsZW4ob21tZXJzKSAqIChCTE9DS19SRVdBUkQgLy8gMzIpKQogICAgY3JlYXRlX2V0aGVyKHN0YXRlLCBjb2luYmFzZSwgbWluZXJfcmV3YXJkKQoKICAgIGZvciBvbW1lciBpbiBvbW1lcnM6CiAgICAgICAgIyBPbW1lciBhZ2Ugd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IGJsb2NrLgogICAgICAgIG9tbWVyX2FnZSA9IFUyNTYoYmxvY2tfbnVtYmVyIC0gb21tZXIubnVtYmVyKQogICAgICAgIG9tbWVyX21pbmVyX3Jld2FyZCA9ICgoOCAtIG9tbWVyX2FnZSkgKiBCTE9DS19SRVdBUkQpIC8vIDgKICAgICAgICBjcmVhdGVfZXRoZXIoc3RhdGUsIG9tbWVyLmNvaW5iYXNlLCBvbW1lcl9taW5lcl9yZXdhcmQpCpSFlIGUfZQoaAVoBmgk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cl9hY2NvdW50LmJhbGFuY2UgLSBnYXNfZmVlCiAgICBzZXRfYWNjb3VudF9iYWxhbmNlKGVudi5zdGF0ZSwgc2VuZGVyLCBzZW5kZXJfYmFsYW5jZV9hZnRlcl9nYXNfZmVlKQoKICAgIG1lc3NhZ2UgPSBwcmVwYXJlX21lc3NhZ2UoCiAgICAgICAgc2VuZGVyLAogICAgICAgIHR4LnRvLAogICAgICAgIHR4LnZhbHVlLAogICAgICAgIHR4LmRhdGEsCiAgICAgICAgZ2FzLAogICAgICAgIGVudiwKICAgICkKCiAgICBvdXRwdXQgPSBwcm9jZXNzX21lc3NhZ2VfY2FsbChtZXNzYWdlLCBlbnYpCgogICAgZ2FzX3VzZWQgPSB0eC5nYXMgLSBvdXRwdXQuZ2FzX2xlZnQKICAgIGdhc19yZWZ1bmQgPSBtaW4oZ2FzX3VzZWQgLy8gMiwgb3V0cHV0LnJlZnVuZF9jb3VudGVyKQogICAgZ2FzX3JlZnVuZF9hbW91bnQgPSAob3V0cHV0Lmdhc19sZWZ0ICsgZ2FzX3JlZnVuZCkgKiB0eC5nYXNfcHJpY2UKICAgIHRyYW5zYWN0aW9uX2ZlZSA9ICh0eC5nYXMgLSBvdXRwdXQuZ2FzX2xlZnQgLSBnYXNfcmVmdW5kKSAqIHR4Lmdhc19wcmljZQogICAgdG90YWxfZ2FzX3VzZWQgPSBnYXNfdXNlZCAtIGdhc19yZWZ1bmQKCiAgICAjIHJlZnVuZCBnYXMKICAgIHNlbmRlcl9iYWxhbmNlX2FmdGVyX3JlZnVuZCA9ICgKICAgICAgICBnZXRfYWNjb3VudChlbnYuc3RhdGUsIHNlbmRlcikuYmFsYW5jZSArIGdhc19yZWZ1bmRfYW1vdW50CiAgICApCiAgICBzZXRfYWNjb3VudF9iYWxhbmNlKGVudi5zdGF0ZSwgc2VuZGVyLCBzZW5kZXJfYmFsYW5jZV9hZnRlcl9yZWZ1bmQpCgogICAgIyB0cmFuc2ZlciBtaW5lciBmZWVzCiAgICBjb2luYmFzZV9iYWxhbmNlX2FmdGVyX21pbmluZ19mZWUgPSAoCiAgICAgICAgZ2V0X2FjY291bnQoZW52LnN0YXRlLCBlbnYuY29pbmJhc2UpLmJhbGFuY2UgKyB0cmFuc2FjdGlvbl9mZWUKICAgICkKICAgIHNldF9hY2NvdW50X2JhbGFuY2UoCiAgICAgICAgZW52LnN0YXRlLCBlbnYuY29pbmJhc2UsIGNvaW5iYXNlX2JhbGFuY2VfYWZ0ZXJfbWluaW5nX2ZlZQogICAgKQoKICAgIGZvciBhZGRyZXNzIGluIG91dHB1dC5hY2NvdW50c190b19kZWxldGU6CiAgICAgICAgZGVzdHJveV9hY2NvdW50KGVudi5zdGF0ZSwgYWRkcmVzcykKCiAgICBmb3IgYWRkcmVzcyBpbiBvdXRwdXQudG91Y2hlZF9hY2NvdW50czoKICAgICAgICBzaG91bGRfZGVsZXRlID0gYWNjb3VudF9leGlzdHMoCiAgICAgICAgICAgIGVudi5zdGF0ZSwgYWRkcmVzcwogICAgICAgICkgYW5kIGlzX2FjY291bnRfZW1wdHkoZW52LnN0YXRlLCBhZGRyZXNzKQogICAgICAgIGlmIHNob3VsZF9kZWxldGU6CiAgICAgICAgICAgIGRlc3Ryb3lfYWNjb3VudChlbnYuc3RhdGUsIGFkZHJlc3MpCgogICAgcmV0dXJuIHRvdGFsX2dhc191c2VkLCBvdXRwdXQubG9ncwqUaAddlChoH4xeZGVmIHByb2Nlc3NfdHJhbnNhY3Rpb24oCiAgICBlbnY6IHZtLkVudmlyb25tZW50LCB0eDogVHJhbnNhY3Rpb24KKSAtPiBUdXBsZVtVMjU2LCBUdXBsZVtMb2csIJSFlIGUfZQoaAVoBmgkaownAABoJWgDaCZoJ2goSwB1YmpZDwAAKYGUfZQoaAVoBmgHXZRoH4wGLi4uXV06lIWUgZR9lChoBWgGaCRqlCcAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZSMD2NoYW5nZS1yZXBsYWNlZJRhaDJdlGg0XZRoNl2UdWg4algPAABoJGqMJwAAaCVoA2gmaCdoKEsAdWJqWQ8AACmBlH2UKGgFaAZoB12UaB+MDC4uLl0sIGJvb2xdOpSFlIGUfZQoaAVoBmgkaqInAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UjBJjaGFuZ2UtcmVwbGFjZW1lbnSUYWgyXZRoNF2UaDZdlHVoOGpYDwAAaCRqjCcAAGglaANoJmgnaChLAHViaB9Y+QYAAAogICAgZW5zdXJlKHZhbGlkYXRlX3RyYW5zYWN0aW9uKHR4KSwgSW52YWxpZEJsb2NrKQoKICAgIHNlbmRlciA9IGVudi5vcmlnaW4KICAgIHNlbmRlcl9hY2NvdW50ID0gZ2V0X2FjY291bnQoZW52LnN0YXRlLCBzZW5kZXIpCiAgICBnYXNfZmVlID0gdHguZ2FzICogdHguZ2FzX3ByaWNlCiAgICBlbnN1cmUoc2VuZGVyX2FjY291bnQubm9uY2UgPT0gdHgubm9uY2UsIEludmFsaWRCbG9jaykKICAgIGVuc3VyZShzZW5kZXJfYWNjb3VudC5iYWxhbmNlID49IGdhc19mZWUsIEludmFsaWRCbG9jaykKCiAgICBnYXMgPSB0eC5nYXMgLSBjYWxjdWxhdGVfaW50cmluc2ljX2Nvc3QodHgpCiAgICBpbmNyZW1lbnRfbm9uY2UoZW52LnN0YXRlLCBzZW5kZXIpCiAgICBzZW5kZXJfYmFsYW5jZV9hZnRlcl9nYXNfZmVlID0gc2VuZGVyX2FjY291bnQuYmFsYW5jZSAtIGdhc19mZWUKICAgIHNldF9hY2NvdW50X2JhbGFuY2UoZW52LnN0YXRlLCBzZW5kZXIsIHNlbmRlcl9iYWxhbmNlX2FmdGVyX2dhc19mZWUpCgogICAgbWVzc2FnZSA9IHByZXBhcmVfbWVzc2FnZSgKICAgICAgICBzZW5kZXIsCiAgICAgICAgdHgudG8sCiAgICAgICAgdHgudmFsdWUsCiAgICAgICAgdHguZGF0YSwKICAgICAgICBnYXMsCiAgICAgICAgZW52LAogICAgKQoKICAgIG91dHB1dCA9IHByb2Nlc3NfbWVzc2FnZV9jYWxsKG1lc3NhZ2UsIGVudikKCiAgICBnYXNfdXNlZCA9IHR4LmdhcyAtIG91dHB1dC5nYXNfbGVmdAogICAgZ2FzX3JlZnVuZCA9IG1pbihnYXNfdXNlZCAvLyAyLCBvdXRwdXQucmVmdW5kX2NvdW50ZXIpCiAgICBnYXNfcmVmdW5kX2Ftb3VudCA9IChvdXRwdXQuZ2FzX2xlZnQgKyBnYXNfcmVmdW5kKSAqIHR4Lmdhc19wcmljZQogICAgdHJhbnNhY3Rpb25fZmVlID0gKHR4LmdhcyAtIG91dHB1dC5nYXNfbGVmdCAtIGdhc19yZWZ1bmQpICogdHguZ2FzX3ByaWNlCiAgICB0b3RhbF9nYXNfdXNlZCA9IGdhc191c2VkIC0gZ2FzX3JlZnVuZAoKICAgICMgcmVmdW5kIGdhcwogICAgc2VuZGVyX2JhbGFuY2VfYWZ0ZXJfcmVmdW5kID0gKAogICAgICAgIGdldF9hY2NvdW50KGVudi5zdGF0ZSwgc2VuZGVyKS5iYWxhbmNlICsgZ2FzX3JlZnVuZF9hbW91bnQKICAgICkKICAgIHNldF9hY2NvdW50X2JhbGFuY2UoZW52LnN0YXRlLCBzZW5kZXIsIHNlbmRlcl9iYWxhbmNlX2FmdGVyX3JlZnVuZCkKCiAgICAjIHRyYW5zZmVyIG1pbmVyIGZlZXMKICAgIGNvaW5iYXNlX2JhbGFuY2VfYWZ0ZXJfbWluaW5nX2ZlZSA9ICgKICAgICAgICBnZXRfYWNjb3VudChlbnYuc3RhdGUsIGVudi5jb2luYmFzZSkuYmFsYW5jZSArIHRyYW5zYWN0aW9uX2ZlZQogICAgKQogICAgc2V0X2FjY291bnRfYmFsYW5jZSgKICAgICAgICBlbnYuc3RhdGUsIGVudi5jb2luYmFzZSwgY29pbmJhc2VfYmFsYW5jZV9hZnRlcl9taW5pbmdfZmVlCiAgICApCgogICAgZm9yIGFkZHJlc3MgaW4gb3V0cHV0LmFjY291bnRzX3RvX2RlbGV0ZToKICAgICAgICBkZXN0cm95X2FjY291bnQoZW52LnN0YXRlLCBhZGRyZXNzKQoKICAgIGZvciBhZGRyZXNzIGluIG91dHB1dC50b3VjaGVkX2FjY291bnRzOgogICAgICAgIHNob3VsZF9kZWxldGUgPSBhY2NvdW50X2V4aXN0cygKICAgICAgICAgICAgZW52LnN0YXRlLCBhZGRyZXNzCiAgICAgICAgKSBhbmQgaXNfYWNjb3VudF9lbXB0eShlbnYuc3RhdGUsIGFkZHJlc3MpCiAgICAgICAgaWYgc2hvdWxkX2RlbGV0ZToKICAgICAgICAgICAgZGVzdHJveV9hY2NvdW50KGVudi5zdGF0ZSwgYWRkcmVzcykKCiAgICByZXR1cm4gdG90YWxfZ2FzX3VzZWQsIJSFlIGU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aCRqmi0AAHViZWgpfZQoaCtdlGgtXZQoatctAACMCGZ1bmN0aW9ulGVoMl2UaDRdlGg2XZSMBmRvbWFpbpRq1y0AAIwHb2JqdHlwZZRqtC4AAIwIZGVzY3R5cGWUarQuAACMB25vaW5kZXiUiXVoOGoKDwAAaCZOaChOaCRqfi0AAHViak8PAAApgZR9lChoBVhsAQAAZGVmIHNpZ25pbmdfaGFzaF8xNTUodHg6IFRyYW5zYWN0aW9uKSAtPiBIYXNoMzI6CiAgICByZXR1cm4ga2VjY2FrMjU2KAogICAgICAgIHJscC5lbmNvZGUoCiAgICAgICAgICAgICgKICAgICAgICAgICAgICAgIHR4Lm5vbmNlLAogICAgICAgICAgICAgICAgdHguZ2FzX3ByaWNlLAogICAgICAgICAgICAgICAgdHguZ2FzLAogICAgICAgICAgICAgICAgdHgudG8sCiAgICAgICAgICAgICAgICB0eC52YWx1ZSwKICAgICAgICAgICAgICAgIHR4LmRhdGEsCiAgICAgICAgICAgICAgICBVaW50KDEpLAogICAgICAgICAgICAgICAgVWludCgwKSwKICAgICAgICAgICAgICAgIFVpbnQoMCksCiAgICAgICAgICAgICkKICAgICAgICApCiAgICApCpRoB12UaB9YbAEAAGRlZiBzaWduaW5nX2hhc2hfMTU1KHR4OiBUcmFuc2FjdGlvbikgLT4gSGFzaDMyOgogICAgcmV0dXJuIGtlY2NhazI1NigKICAgICAgICBybHAuZW5jb2RlKAogICAgICAgICAgICAoCiAgICAgICAgICAgICAgICB0eC5ub25jZSwKICAgICAgICAgICAgICAgIHR4Lmdhc19wcmljZSwKICAgICAgICAgICAgICAgIHR4LmdhcywKICAgICAgICAgICAgICAgIHR4LnRvLAogICAgICAgICAgICAgICAgdHgudmFsdWUsCiAgICAgICAgICAgICAgICB0eC5kYXRhLAogICAgICAgICAgICAgICAgVWludCgxKSwKICAgICAgICAgICAgICAgIFVpbnQoMCksCiAgICAgICAgICAgICAgICBVaW50KDApLAogICAgICAgICAgICApCiAgICAgICAgKQogICAgKQqUhZSBlH2UKGgF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ZQogICAgaWYgZ2FzX2xpbWl0IDwgR0FTX0xJTUlUX01JTklNVU06CiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgcmV0dXJuIFRydWUKlGgHXZRoH1iBAQAAZGVmIGNoZWNrX2dhc19saW1pdChnYXNfbGltaXQ6IFVpbnQsIHBhcmVudF9nYXNfbGltaXQ6IFVpbnQpIC0+IGJvb2w6CiAgICBtYXhfYWRqdXN0bWVudF9kZWx0YSA9IHBhcmVudF9nYXNfbGltaXQgLy8gR0FTX0xJTUlUX0FESlVTVE1FTlRfRkFDVE9SCiAgICBpZiBnYXNfbGltaXQgPj0gcGFyZW50X2dhc19saW1pdCArIG1heF9hZGp1c3RtZW50X2RlbHRhOgogICAgICAgIHJldHVybiBGYWxzZQogICAgaWYgZ2FzX2xpbWl0IDw9IHBhcmVudF9nYXNfbGltaXQgLSBtYXhfYWRqdXN0bWVudF9kZWx0YToKICAgICAgICByZXR1cm4gRmFsc2UKICAgIGlmIGdhc19saW1pdCA8IEdBU19MSU1JVF9NSU5JTVVNOgogICAgICAgIHJldHVybiBGYWxzZQoKICAgIHJldHVybiBUcnVlCpSFlIGUfZQoaAVoBmgkasYxAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUjFYvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vc3BlYy5weZSMCXhtbDpzcGFjZZRqBQYAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGqIDwAASwFzjAdsaW5lbm9zlIl1aDhqTg8AAGgmaGtoKE0oAmgkajYwAAB1YmVoKX2UKGgrXZRqxAQAAGFoLV2UaDJdlIwPY2hlY2tfZ2FzX2xpbWl0lGFoNF2UaDZdlHVoOGgJaCZoa2goTRcCaCRq2Q4AAGglaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYwaY2FsY3VsYXRlX2Jsb2NrX2RpZmZpY3VsdHmUaAddlGgfjBpjYWxjdWxhdGVfYmxvY2tf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YXJlbnRfZGlmZmljdWx0eTogVWludCwKKSAtPiBVaW50OgogICAgb2Zmc2V0ID0gKAogICAgICAgIGludChwYXJlbnRfZGlmZmljdWx0eSkKICAgICAgICAvLyAyMDQ4CiAgICAgICAgKiBtYXgoMSAtIGludChibG9ja190aW1lc3RhbXAgLSBwYXJlbnRfdGltZXN0YW1wKSAvLyAxMCwgLTk5KQogICAgKQogICAgZGlmZmljdWx0eSA9IGludChwYXJlbnRfZGlmZmljdWx0eSkgKyBvZmZzZXQKICAgICMgSGlzdG9yaWNhbCBOb3RlOiBUaGUgZGlmZmljdWx0eSBib21iIHdhcyBub3QgcHJlc2VudCBpbiBFdGhlcmV1bSBhdCB0aGUKICAgICMgc3RhcnQgb2YgRnJvbnRpZXIsIGJ1dCB3YXMgYWRkZWQgc2hvcnRseSBhZnRlciBsYXVuY2guIEhvd2V2ZXIgc2luY2UgdGhlCiAgICAjIGJvbWIgaGFzIG5vIGVmZmVjdCBwcmlvciB0byBibG9jayAyMDAwMDAgd2UgcHJldGVuZCBpdCBleGlzdGVkIGZyb20KICAgICMgZ2VuZXNpcy4KICAgICMgU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9nby1ldGhlcmV1bS9wdWxsLzE1ODgKICAgIG51bV9ib21iX3BlcmlvZHMgPSAoaW50KGJsb2NrX251bWJlcikgLy8gMTAwMDAwKSAtIDIKICAgIGlmIG51bV9ib21iX3BlcmlvZHMgPj0gMDoKICAgICAgICByZXR1cm4gVWludCgKICAgICAgICAgICAgbWF4KGRpZmZpY3VsdHkgKyAyKipudW1fYm9tYl9wZXJpb2RzLCBHRU5FU0lTX0RJRkZJQ1VMVFkpCiAgICAgICAgKQogICAgZWxzZToKICAgICAgICByZXR1cm4gVWludChtYXgoZGlmZmljdWx0eSwgR0VORVNJU19ESUZGSUNVTFRZKSkKlGgHXZQoaB+MjGRlZiBjYWxjdWxhdGVfYmxvY2tfZGlmZmljdWx0eSgKICAgIGJsb2NrX251bWJlcjogVWludCwKICAgIGJsb2NrX3RpbWVzdGFtcDogVTI1NiwKICAgIHBhcmVudF90aW1lc3RhbXA6IFUy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KGgrXZQoaHyMHWV0aGVyZXVtLXNwdXJpb3VzLWRyYWdvbi1zcGVjlGVoLV2UaDJdlIwdZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnNwZWOUYWg0XZRoNl2UdWg4aAloJmhraChLAmgkaANoJWgDdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllGgndWg4aAGMDmN1cnJlbnRfc291cmNllGgnjAxjdXJyZW50X2xpbmWUSwCMCHNldHRpbmdzlIwRZG9jdXRpbHMuZnJvbnRlbmSUjAZWYWx1ZXOUk5QpgZR9lCiMDHJlcG9ydF9sZXZlbJRLAowKaGFsdF9sZXZlbJRLBIwRZXhpdF9zdGF0dXNfbGV2ZWyUSwWMBWRlYnVnlE6MDndhcm5pbmdfc3RyZWFtlE6MCXRyYWNlYmFja5ROjA9vdXRwdXRfZW5jb2RpbmeUjAV1dGYtOJSMHW91dHB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwReG1sY2hhcnJlZnJlcGxhY2WUjA5lcnJvcl9lbmNvZGluZ5SMBXV0Zi04lIwcZXJyb3JfZW5jb2RpbmdfZXJyb3JfaGFuZGxlcpSMEGJhY2tzbGFzaHJlcGxhY2WUjBNyZWNvcmRfZGVwZW5kZW5jaWVzlIwOZG9jdXRpbHMudXRpbHOUjA5EZXBlbmRlbmN5TGlzdJSTlCmBlH2UKIwEbGlzdJRdlIwEZmlsZZROdWKMBmNvbmZpZ5ROjA1kdW1wX3NldHRpbmdzlE6MDmR1bXBfaW50ZXJuYWxzlE6MD2R1bXBfdHJhbnNmb3Jtc5ROjA9kdW1wX3BzZXVkb194bWyUTowQZXhwb3NlX2ludGVybmFsc5ROjA5zdHJpY3RfdmlzaXRvcpROjA9fZGlzYWJsZV9jb25maWeUTowHX3NvdXJjZZROjAxfZGVzdGluYXRpb26UjDdkb2MvZGlmZnMvc3B1cmlvdXNfZHJhZ29uX2J5emFudGl1bS9zcGVjL2luZGV4LnBpY2tsZTY0lIwNX2NvbmZpZ19maWxlc5RdlIwRbGluZV9sZW5ndGhfbGltaXSUTRAnjAl0YWJfd2lkdGiUSwiMEHN5bnRheF9oaWdobGlnaHSUjARsb25nlIwMc21hcnRfcXVvdGVzlImME3NtYXJ0cXVvdGVzX2xvY2FsZXOUTowdY2hhcmFjdGVyX2xldmVsX2lubGluZV9tYXJrdXCUiYwGd3JpdGVylIwDeG1slIwZY29tcGFyZV9zZWN0aW9uc19ieV9uYW1lc5SJjAxkdW1wX3JzdGRpZmaUTowFX2JvdGiUfZQoaA5OjAlnZW5lcmF0b3KUTowJZGF0ZXN0YW1wlE6MC3NvdXJjZV9saW5rlE6MCnNvdXJjZV91cmyUTowNdG9jX2JhY2tsaW5rc5RqlgUAAIwSZm9vdG5vdGVfYmFja2xpbmtzlEsBjA1zZWN0bnVtX3hmb3JtlEsBjA5kb2N0aXRsZV94Zm9ybZRLAYwNZG9jaW5mb194Zm9ybZRLAYwSc2VjdHN1YnRpdGxlX3hmb3JtlEsAjA5zdHJpcF9jb21tZW50c5ROjA5pbnB1dF9lbmNvZGluZ5ROjBxpbnB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwGc3RyaWN0lIwNbGFuZ3VhZ2VfY29kZZSMAmVulIwOcGVwX3JlZmVyZW5jZXOUTowMcGVwX2Jhc2VfdXJslIwfaHR0cDovL3d3dy5weXRob24ub3JnL2Rldi9wZXBzL5SMFXBlcF9maWxlX3VybF90ZW1wbGF0ZZSMCHBlcC0lMDRklIwOcmZjX3JlZmVyZW5jZXOUTowMcmZjX2Jhc2VfdXJslIwbaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvlIwddHJpbV9mb290bm90ZV9yZWZlcmVuY2Vfc3BhY2WUTowWZmlsZV9pbnNlcnRpb25fZW5hYmxlZJRLAYwLcmF3X2VuYWJsZWSUSwGMDmF1dG9faWRfcHJlZml4lIwCaWSUjAlpZF9wcmVmaXiUaAaMG3N0cmlwX2VsZW1lbnRzX3dpdGhfY2xhc3Nlc5ROjA1zdHJpcF9jbGFzc2VzlE51jARib3RolH2UjApfb3B0aW9uc1RvlIwFX2JvdGiUjAtfb2xkX3NvdXJjZZSMHC50b3gvZG9jcy9zdGFnZTBfb3V0L2F1dG9hcGmUjAtfbmV3X3NvdXJjZZSMCWRvYy9kaWZmc5RqPTUAAGo+NQAAdWKMCHJlcG9ydGVylE6MEGluZGlyZWN0X3RhcmdldHOUXZSMEXN1YnN0aXR1dGlvbl9kZWZzlH2UjBJzdWJzdGl0dXRpb25fbmFtZXOUfZSMCHJlZm5hbWVzlH2UjAZyZWZpZHOUfZSMB25hbWVpZHOUfZSMCW5hbWV0eXBlc5R9lGgrfZSMDWZvb3Rub3RlX3JlZnOUfZSMDWNpdGF0aW9uX3JlZnOUfZSMDWF1dG9mb290bm90ZXOUXZSMEWF1dG9mb290bm90ZV9yZWZzlF2UjBBzeW1ib2xfZm9vdG5vdGVzlF2UjBRzeW1ib2xfZm9vdG5vdGVfcmVmc5RdlIwJZm9vdG5vdGVzlF2UjAljaXRhdGlvbnOUXZSMEmF1dG9mb290bm90ZV9zdGFydJRLAYwVc3ltYm9sX2Zvb3Rub3RlX3N0YXJ0lEsAjAppZF9jb3VudGVylIwLY29sbGVjdGlvbnOUjAdDb3VudGVylJOUfZSFlFKUjA5wYXJzZV9tZXNzYWdlc5RdlIwSdHJhbnNmb3JtX21lc3NhZ2VzlF2UjAt0cmFuc2Zvcm1lcpROjAtpbmNsdWRlX2xvZ5RdlIwKZGVjb3JhdGlvbpROaCVoA3ViLg==