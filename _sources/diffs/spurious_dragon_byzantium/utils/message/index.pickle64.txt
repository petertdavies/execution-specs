gASVrFsAAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UaACMB3NlY3Rpb26Uk5QpgZR9lChoBWgGaAddlChoAIwFdGl0bGWUk5QpgZR9lChoBYwtOm1vZDpgZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnV0aWxzLm1lc3NhZ2VglGgHXZQoaACMCXJlZmVyZW5jZZSTlCmBlH2UKGgFaAZoB12UaACMB2xpdGVyYWyUk5QpgZR9lChoBWgSaAddlGgAjARUZXh0lJOUjCZldGhlcmV1bS5zcHVyaW91c19kcmFnb24udXRpbHMubWVzc2FnZZSFlIGUfZQoaAVoBowGcGFyZW50lGgbjAlfZG9jdW1lbnSUaAOMBnNvdXJjZZSMKS50b3gvZG9jcy9zdGFnZTBfb3V0L2F1dG9hcGkgPT4gZG9jL2RpZmZzlIwEbGluZZRLAHViYYwKYXR0cmlidXRlc5R9lCiMA2lkc5RdlIwHY2xhc3Nlc5RdlCiMBHhyZWaUjAJweZSMBnB5LW1vZJRljAVuYW1lc5RdlIwIZHVwbmFtZXOUXZSMCGJhY2tyZWZzlF2UdYwHdGFnbmFtZZRoGWgmTmgoTmgkaBZ1YmFoKX2UKGgrXZRoLV2UjA9jaGFuZ2UtcmVwbGFjZWSUYWgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjC1tb2R1bGUtZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnV0aWxzLm1lc3NhZ2WUjAhyZWZ0aXRsZZSMJmV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi51dGlscy5tZXNzYWdllHVoOGgUaCZoJ2goSwBoJGgQaCVoA3ViaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAWMJzptb2Q6YGV0aGVyZXVtLmJ5emFudGl1bS51dGlscy5tZXNzYWdlYJRoB12UaB+MIGV0aGVyZXVtLmJ5emFudGl1bS51dGlscy5tZXNzYWdllIWUgZR9lChoBWgGaCRoSGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQojAR4cmVmlIwCcHmUjAZweS1tb2SUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRoRXViYWgpfZQoaCtdlGgtXZSMEmNoYW5nZS1yZXBsYWNlbWVudJRhaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMJ21vZHVsZS1ldGhlcmV1bS5ieXphbnRpdW0udXRpbHMubWVzc2FnZZSMCHJlZnRpdGxllIwgZXRoZXJldW0uYnl6YW50aXVtLnV0aWxzLm1lc3NhZ2WUdWg4aBRoJmgnaChLAGgkaBBoJWgDdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGgOaCaMbi9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3V0aWxzL21lc3NhZ2UvaW5kZXgucnN0lGgoSwJoJGgLaCVoA3VijA9zcGhpbnguYWRkbm9kZXOUjAVpbmRleJSTlCmBlH2UKGgFaAZoB12UaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwHZW50cmllc5RdlCiMBHBhaXKUjC5tb2R1bGU7IGV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi51dGlscy5tZXNzYWdllIwtbW9kdWxlLWV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi51dGlscy5tZXNzYWdllGgGTnSUYXVoOGhtaCZoa2goSwVoJGgLaCVoA3ViaAopgZR9lChoBWgGaAddlChoDymBlH2UKGgFjEBTcHVyaW91cyBEcmFnb24gVXRpbGl0eSBGdW5jdGlvbnMgRm9yIFRoZSBNZXNzYWdlIERhdGEtc3RydWN0dXJllGgHXZQoaACMBmlubGluZZSTlCmBlH2UKGgFaAZoB12UaB+MD1NwdXJpb3VzIERyYWdvbpSFlIGUfZQoaAVoBmgkaIdoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UjA9jaGFuZ2UtcmVwbGFjZWSUYWgyXZRoNF2UaDZdlHVoOGiFaCRogWglaANoJmgnaChLAHViaIYpgZR9lChoBWgGaAddlGgfjAlCeXphbnRpdW2UhZSBlH2UKGgFaAZoJGiVaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlIwSY2hhbmdlLXJlcGxhY2VtZW50lGFoMl2UaDRdlGg2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ZHRolEtadWg4ahwCAABoJk5oKE5oJGoZAgAAdWJoAIwFdGJvZHmUk5QpgZR9lChoBWgGaAddlGgAjANyb3eUk5QpgZR9lChoBWgGaAddlChoAIwFZW50cnmUk5QpgZR9lChoBWgGaAddlGjLKYGUfZQoaAWMTzpvYmo6YHByZXBhcmVfbWVzc2FnZSA8ZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnV0aWxzLm1lc3NhZ2UucHJlcGFyZV9tZXNzYWdlPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFakMCAABoB12UaB+MD3ByZXBhcmVfbWVzc2FnZZSFlIGUfZQoaAVoBmgkakgCAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGpFAgAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDZldGhlcmV1bS5zcHVyaW91c19kcmFnb24udXRpbHMubWVzc2FnZS5wcmVwYXJlX21lc3NhZ2WUjAhyZWZ0aXRsZZSMNmV0aGVyZXVtLnNwdXJpb3VzX2RyYWdvbi51dGlscy5tZXNzYWdlLnByZXBhcmVfbWVzc2FnZZR1aDhoFGgmTmgoTmgkakECAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aMpoJox/L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9zcHVyaW91c19kcmFnb24vdXRpbHMvbWVzc2FnZS9pbmRleC5yc3Q6MzM6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqPgIAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhqPAIAAGgmTmgoTmgkajkCAAB1Ymo9AgAAKYGUfZQoaAVoBmgHXZRoyymBlH2UKGgFjDdFeGVjdXRlIGEgdHJhbnNhY3Rpb24gYWdhaW5zdCB0aGUgcHJvdmlkZWQgZW52aXJvbm1lbnQulGgHXZRoH4w3RXhlY3V0ZSBhIHRyYW5zYWN0aW9uIGFnYWluc3QgdGhlIHBy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AACMB29ianR5cGWUau8GAACMCGRlc2N0eXBllGrvBgAAjAdub2luZGV4lIl1aDhq4wIAAGgmaCdoKEsAaCRqxwIAAGglaAN1YmgAjA1saXRlcmFsX2Jsb2NrlJOUKYGUfZQoaAVYLAQAAGRlZiBwcmVwYXJlX21lc3NhZ2UoCiAgICBjYWxsZXI6IEFkZHJlc3MsCiAgICB0YXJnZXQ6IFVuaW9uW0J5dGVzMCwgQWRkcmVzc10sCiAgICB2YWx1ZTogVTI1NiwKICAgIGRhdGE6IEJ5dGVzLAogICAgZ2FzOiBVMjU2LAogICAgZW52OiBFbnZpcm9ubWVudCwKICAgIGNvZGVfYWRkcmVzczogT3B0aW9uYWxbQWRkcmVzc10gPSBOb25lLAogICAgc2hvdWxkX3RyYW5zZmVyX3ZhbHVlOiBib29sID0gVHJ1ZSwKKSAtPiBNZXNzYWdlOgogICAgaWYgaXNpbnN0YW5jZSh0YXJnZXQsIEJ5dGVzMCk6CiAgICAgICAgY3VycmVudF90YXJnZXQgPSBjb21wdXRlX2NvbnRyYWN0X2FkZHJlc3MoCiAgICAgICAgICAgIGNhbGxlciwKICAgICAgICAgICAgZ2V0X2FjY291bnQoZW52LnN0YXRlLCBjYWxsZXIpLm5vbmNlIC0gVTI1NigxKSwKICAgICAgICApCiAgICAgICAgbXNnX2RhdGEgPSBCeXRlcyhiIiIpCiAgICAgICAgY29kZSA9IGRhdGEKICAgIGVsaWYgaXNpbnN0YW5jZSh0YXJnZXQsIEFkZHJlc3MpOgogICAgICAgIGN1cnJlbnRfdGFyZ2V0ID0gdGFyZ2V0CiAgICAgICAgbXNnX2RhdGEgPSBkYXRhCiAgICAgICAgY29kZSA9IGdldF9hY2NvdW50KGVudi5zdGF0ZSwgdGFyZ2V0KS5jb2RlCiAgICAgICAgaWYgY29kZV9hZGRyZXNzIGlzIE5vbmU6CiAgICAgICAgICAgIGNvZGVfYWRkcmVzcyA9IHRhcmdldAogICAgZWxzZToKICAgICAgICByYWlzZSBBc3NlcnRpb25FcnJvcigiVGFyZ2V0IG11c3QgYmUgYWRkcmVzcyBvciBlbXB0eSBieXRlcyIpCgogICAgcmV0dXJuIE1lc3NhZ2UoCiAgICAgICAg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bmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vc3B1cmlvdXNfZHJhZ29uL3V0aWxzL21lc3NhZ2UucHmUjAl4bWw6c3BhY2WUaqcCAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZSMC2xpbmVub3N0YXJ0lEsBc4wHbGluZW5vc5SJdWg4avcGAABoJmhraChLP2gkascCAABoJWgDdWJlaCl9lChoK12UamwBAABhaC1dlGgyXZSMD3ByZXBhcmVfbWVzc2FnZZRhaDRdlGg2XZR1aDhoCWgmaGtoKEsmaCRqtgIAAGglaAN1YmVoKX2UKGgrXZRqTQEAAGFoLV2UaDJdlIwObW9kdWxlIGRldGFpbHOUYWg0XZRoNl2UdWg4aAloJmhraChLI2gkaH5oJWgDdWJlaCl9lChoK12UjEBzcHVyaW91cy1kcmFnb24tdXRpbGl0eS1mdW5jdGlvbnMtZm9yLXRoZS1tZXNzYWdlLWRhdGEtc3RydWN0dXJllGFoLV2UaDJdlIxAc3B1cmlvdXMgZHJhZ29uIHV0aWxpdHkgZnVuY3Rpb25zIGZvciB0aGUgbWVzc2FnZSBkYXRhLXN0cnVjdHVyZZRhaDRdlGg2XZR1aDhoCWgmaGtoKEsHaCRoC2glaAN1YmVoKX2UKGgrXZQoaHyMJmV0aGVyZXVtLXNwdXJpb3VzLWRyYWdvbi11dGlscy1tZXNzYWdllGVoLV2UaDJdlIwmZXRoZXJldW0uc3B1cmlvdXNfZHJhZ29uLnV0aWxzLm1lc3NhZ2WUYWg0XZRoNl2UdWg4aAloJmhraChLAmgkaANoJWgDdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwGc291cmNllGgndWg4aAGMDmN1cnJlbnRfc291cmNllGgnjAxjdXJyZW50X2xpbmWUSwCMCHNldHRpbmdzlIwRZG9jdXRpbHMuZnJvbnRlbmSUjAZWYWx1ZXOUk5QpgZR9lCiMDHJlcG9ydF9sZXZlbJRLAowKaGFsdF9sZXZlbJRLBIwRZXhpdF9zdGF0dXNfbGV2ZWyUSwWMBWRlYnVnlE6MDndhcm5pbmdfc3RyZWFtlE6MCXRyYWNlYmFja5ROjA9vdXRwdXRfZW5jb2RpbmeUjAV1dGYtOJSMHW91dHB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwReG1sY2hhcnJlZnJlcGxhY2WUjA5lcnJvcl9lbmNvZGluZ5SMBXV0Zi04lIwcZXJyb3JfZW5jb2RpbmdfZXJyb3JfaGFuZGxlcpSMEGJhY2tzbGFzaHJlcGxhY2WUjBNyZWNvcmRfZGVwZW5kZW5jaWVzlIwOZG9jdXRpbHMudXRpbHOUjA5EZXBlbmRlbmN5TGlzdJSTlCmBlH2UKIwEbGlzdJRdlIwEZmlsZZROdWKMBmNvbmZpZ5ROjA1kdW1wX3NldHRpbmdzlE6MDmR1bXBfaW50ZXJuYWxzlE6MD2R1bXBfdHJhbnNmb3Jtc5ROjA9kdW1wX3BzZXVkb194bWyUTowQZXhwb3NlX2ludGVybmFsc5ROjA5zdHJpY3RfdmlzaXRvcpROjA9fZGlzYWJsZV9jb25maWeUTowHX3NvdXJjZZROjAxfZGVzdGluYXRpb26UjEBkb2MvZGlmZnMvc3B1cmlvdXNfZHJhZ29uX2J5emFudGl1bS91dGlscy9tZXNzYWdlL2luZGV4LnBpY2tsZTY0lIwNX2NvbmZpZ19maWxlc5RdlIwRbGluZV9sZW5ndGhfbGltaXSUTRAnjAl0YWJfd2lkdGiUSwiMEHN5bnRheF9oaWdobGlnaHSUjARsb25nlIwMc21hcnRfcXVvdGVzlImME3NtYXJ0cXVvdGVzX2xvY2FsZXOUTowdY2hhcmFjdGVyX2xldmVsX2lubGluZV9tYXJrdXCUiYwGd3JpdGVylIwDeG1slIwZY29tcGFyZV9zZWN0aW9uc19ieV9uYW1lc5SJjAxkdW1wX3JzdGRpZmaUTowFX2JvdGiUfZQoaA5OjAlnZW5lcmF0b3KUTowJZGF0ZXN0YW1wlE6MC3NvdXJjZV9saW5rlE6MCnNvdXJjZV91cmyUTowNdG9jX2JhY2tsaW5rc5RqPAIAAIwSZm9vdG5vdGVfYmFja2xpbmtzlEsBjA1zZWN0bnVtX3hmb3JtlEsBjA5kb2N0aXRsZV94Zm9ybZRLAYwNZG9jaW5mb194Zm9ybZRLAYwSc2VjdHN1YnRpdGxlX3hmb3JtlEsAjA5zdHJpcF9jb21tZW50c5ROjA5pbnB1dF9lbmNvZGluZ5ROjBxpbnB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwGc3RyaWN0lIwNbGFuZ3VhZ2VfY29kZZSMAmVulIwOcGVwX3JlZmVyZW5jZXOUTowMcGVwX2Jhc2VfdXJslIwfaHR0cDovL3d3dy5weXRob24ub3JnL2Rldi9wZXBzL5SMFXBlcF9maWxlX3VybF90ZW1wbGF0ZZSMCHBlcC0lMDRklIwOcmZjX3JlZmVyZW5jZXOUTowMcmZjX2Jhc2VfdXJslIwbaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvlIwddHJpbV9mb290bm90ZV9yZWZlcmVuY2Vfc3BhY2WUTowWZmlsZV9pbnNlcnRpb25fZW5hYmxlZJRLAYwLcmF3X2VuYWJsZWSUSwGMDmF1dG9faWRfcHJlZml4lIwCaWSUjAlpZF9wcmVmaXiUaAaMG3N0cmlwX2VsZW1lbnRzX3dpdGhfY2xhc3Nlc5ROjA1zdHJpcF9jbGFzc2VzlE51jARib3RolH2UjApfb3B0aW9uc1RvlIwFX2JvdGiUjAtfb2xkX3NvdXJjZZSMHC50b3gvZG9jcy9zdGFnZTBfb3V0L2F1dG9hcGmUjAtfbmV3X3NvdXJjZZSMCWRvYy9kaWZmc5RqoQcAAGqiBwAAdWKMCHJlcG9ydGVylE6MEGluZGlyZWN0X3RhcmdldHOUXZSMEXN1YnN0aXR1dGlvbl9kZWZzlH2UjBJzdWJzdGl0dXRpb25fbmFtZXOUfZSMCHJlZm5hbWVzlH2UjAZyZWZpZHOUfZSMB25hbWVpZHOUfZSMCW5hbWV0eXBlc5R9lGgrfZSMDWZvb3Rub3RlX3JlZnOUfZSMDWNpdGF0aW9uX3JlZnOUfZSMDWF1dG9mb290bm90ZXOUXZSMEWF1dG9mb290bm90ZV9yZWZzlF2UjBBzeW1ib2xfZm9vdG5vdGVzlF2UjBRzeW1ib2xfZm9vdG5vdGVfcmVmc5RdlIwJZm9vdG5vdGVzlF2UjAljaXRhdGlvbnOUXZSMEmF1dG9mb290bm90ZV9zdGFydJRLAYwVc3ltYm9sX2Zvb3Rub3RlX3N0YXJ0lEsAjAppZF9jb3VudGVylIwLY29sbGVjdGlvbnOUjAdDb3VudGVylJOUfZSFlFKUjA5wYXJzZV9tZXNzYWdlc5RdlIwSdHJhbnNmb3JtX21lc3NhZ2VzlF2UjAt0cmFuc2Zvcm1lcpROjAtpbmNsdWRlX2xvZ5RdlIwKZGVjb3JhdGlvbpROaCVoA3ViLg==