gASV5NAAAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UKGgAjAZ0YXJnZXSUk5QpgZR9lChoBWgGaAddlIwKYXR0cmlidXRlc5R9lCiMA2lkc5RdlIwxbW9kdWxlLWV0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZZRhjAdjbGFzc2VzlF2UjAVuYW1lc5RdlIwIZHVwbmFtZXOUXZSMCGJhY2tyZWZzlF2UjAVpc21vZJSIdYwHdGFnbmFtZZRoCYwGc291cmNllIxyL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ieXphbnRpdW0vdm0vaW5zdHJ1Y3Rpb25zL2JpdHdpc2UvaW5kZXgucnN0lIwEbGluZZRLAYwGcGFyZW50lGgDjAlfZG9jdW1lbnSUaAN1YowPc3BoaW54LmFkZG5vZGVzlIwFaW5kZXiUk5QpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMB2VudHJpZXOUXZQojARwYWlylIwybW9kdWxlOyBldGhlcmV1bS5ieXphbnRpdW0udm0uaW5zdHJ1Y3Rpb25zLmJpdHdpc2WUaBJoBk50lGF1aBxoI2gdaB5oH0sCaCBoA2ghaAN1YmgAjAdzZWN0aW9ulJOUKYGUfZQoaAVoBmgHXZQoaACMBXRpdGxllJOUKYGUfZQoaAWMM0V0aGVyZXVtIFZpcnR1YWwgTWFjaGluZSAoRVZNKSBCaXR3aXNlIEluc3RydWN0aW9uc5RoB12UaACMBFRleHSUk5SMM0V0aGVyZXVtIFZpcnR1YWwgTWFjaGluZSAoRVZNKSBCaXR3aXNlIEluc3RydWN0aW9uc5SFlIGUfZQoaAVoBmggaDpoIWgDaB2MKS50b3gvZG9jcy9zdGFnZTBfb3V0L2F1dG9hcGkgPT4gZG9jL2RpZmZzlGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaDhoHWgeaB9LBGggaDVoIWgDdWJoAIwFdG9waWOUk5QpgZR9lChoBWgGaAdd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lGgTXZRoFV2UaBddlGgZXZSMCGludGVybmFslIiMBXJlZmlklIw2ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2VfeG9ylIwIcmVmdGl0bGWUjDZldGhlcmV1bS5ieXphbnRpdW0udm0uaW5zdHJ1Y3Rpb25zLmJpdHdpc2UuYml0d2lzZV94b3KUdWgcaG1oHU5oH05oIGpZAwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB2Mgy9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vYnl6YW50aXVtL3ZtL2luc3RydWN0aW9ucy9iaXR3aXNlL2luZGV4LnJzdDozMzo8YXV0b3N1bW1hcnk+lGgfSwFoIGpWAwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGqtAgAAaB1OaB9OaCBqUwMAAHViaq4CAAApgZR9lChoBWgGaAddlGhpKYGUfZQoaAWMREJpdHdpc2UgWE9SIG9wZXJhdGlvbiBvZiB0aGUgdG9wIDIgZWxlbWVudHMgb2YgdGhlIHN0YWNrLiBQdXNoZXMgdGhllGgHXZRoP4xEQml0d2lzZSBYT1Igb3BlcmF0aW9uIG9mIHRoZSB0b3AgMiBlbGVtZW50cyBvZiB0aGUgc3RhY2suIFB1c2hlcyB0aGWUhZSBlH2UKGgFaAZoIGqKAwAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB2Mgy9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vYnl6YW50aXVtL3ZtL2luc3RydWN0aW9ucy9iaXR3aXNlL2luZGV4LnJzdDozMzo8YXV0b3N1bW1hcnk+lGgfSwFoIGqHAwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGqtAgAAaB1OaB9OaCBqUwMAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqqAIAAGgdaERoH0sAaCBqpQIAAGgh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aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1dG9zdW1tYXJ5PpRoH0sBaCBq0AQAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqrQIAAGgdTmgfTmggapwEAAB1YmVoDn2UKGgQXZRoE12UjAxjaGFuZ2UtYWRkZWSUYWgVXZRoF12UaBldlHVoHGqoAgAAaB1oRGgfSwBoIGqlAgAAaCFoA3ViaqkCAAApgZR9lChoBWgGaAddlChqrgIAACmBlH2UKGgFaAZoB12UaGkpgZR9lChoBYxQOm9iajpgYml0d2lzZV9zYXIgPGV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfc2FyPmCUaAddlGhuKYGUfZQoaAVoBmgHXZRqugIAACmBlH2UKGgFavcEAABoB12UaD+MC2JpdHdpc2Vfc2FylIWUgZR9lChoBWgGaCBq/AQAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZQoal8EAACMAnB5lIwGcHktb2JqlGVoFV2UaBddlGgZXZR1aBxquQIAAGgdTmgfTmggavkEAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMO2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfc2FylIwIcmVmdGl0bGWUjDtldGhlcmV1bS5jb25zdGFudGlub3BsZS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZS5iaXR3aXNlX3NhcpR1aBxobWgdTmgfTmggavUEAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHYyIL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1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ICBzaGlmdCA9IHBvcChldm0uc3RhY2spCiAgICBzaWduZWRfdmFsdWUgPSBwb3AoZXZtLnN0YWNrKS50b19zaWduZWQoKQoKICAgICMgR0FTCiAgICBjaGFyZ2VfZ2FzKGV2bSwgR0FTX1ZFUllfTE9XKQoKICAgICMgT1BFUkFUSU9OCiAgICBpZiBzaGlmdCA8IDI1NjoKICAgICAgICByZXN1bHQgPSBVMjU2LmZyb21fc2lnbmVkKHNpZ25lZF92YWx1ZSA+PiBzaGlmdCkKICAgIGVsaWYgc2lnbmVkX3ZhbHVlID49IDA6CiAgICAgICAgcmVzdWx0ID0gVTI1NigwKQogICAgZWxzZToKICAgICAgICByZXN1bHQgPSBVMjU2Lk1BWF9WQUxVRQoKICAgIHB1c2goZXZtLnN0YWNrLCByZXN1bHQpCgogICAgIyBQUk9HUkFNIENPVU5URVIKICAgIGV2bS5wYyArPSAxCpSFlIGUfZQoaAVoBmggaioQAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjGgvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS5weZSMCXhtbDpzcGFjZZRqXQUAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGr9DgAASwFzjAdsaW5lbm9zlIl1aBxqQgcAAGgdanAOAABoH0vJaCBqqA8AAHViZWgOfZQoaBBdlGr8AQAAYWgTXZSMDGNoYW5nZS1hZGRlZJRhaBVdlIwLYml0d2lzZV9zYXKUYWgXXZRoGV2UdWgcaDNoHWpwDgAAaB9LvGggamwFAABoIWgDdWJlaA59lChoEF2UaO1haBNdlGgVXZSMDm1vZHVsZSBkZXRhaWxzlGFoF12UaBldlHVoHGgzaB1oHmgfSyNoIGg1aCFoA3ViZWgOfZQoaBBdlIwxZXRoZXJldW0tdmlydHVhbC1tYWNoaW5lLWV2bS1iaXR3aXNlLWluc3RydWN0aW9uc5RhaBNdlGgVXZSMM2V0aGVyZXVtIHZpcnR1YWwgbWFjaGluZSAoZXZtKSBiaXR3aXNlIGluc3RydWN0aW9uc5RhaBddlGgZXZR1aBxoM2gdaB5oH0sEaCBoA2ghaAN1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUaER1aBxoAYwOY3VycmVudF9zb3VyY2WUaESMDGN1cnJlbnRfbGluZZRLAIwIc2V0dGluZ3OUjBFkb2N1dGlscy5mcm9udGVuZJSMBlZhbHVlc5STlCmBlH2UKIwMcmVwb3J0X2xldmVslEsCjApoYWx0X2xldmVslEsEjBFleGl0X3N0YXR1c19sZXZlbJRLBYwFZGVidWeUTowOd2FybmluZ19zdHJlYW2UTowJdHJhY2ViYWNrlE6MD291dHB1dF9lbmNvZGluZ5SMBXV0Zi04lIwdb3V0cHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjBF4bWxjaGFycmVmcmVwbGFjZZSMDmVycm9yX2VuY29kaW5nlIwFdXRmLTiUjBxlcnJvcl9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwQYmFja3NsYXNocmVwbGFjZZSME3JlY29yZF9kZXBlbmRlbmNpZXOUjA5kb2N1dGlscy51dGlsc5SMDkRlcGVuZGVuY3lMaXN0lJOUKYGUfZQojARsaXN0lF2UjARmaWxllE51YowGY29uZmlnlE6MDWR1bXBfc2V0dGluZ3OUTowOZHVtcF9pbnRlcm5hbHOUTowPZHVtcF90cmFuc2Zvcm1zlE6MD2R1bXBfcHNldWRvX3htbJROjBBleHBvc2VfaW50ZXJuYWxzlE6MDnN0cmljdF92aXNpdG9ylE6MD19kaXNhYmxlX2NvbmZpZ5ROjAdfc291cmNllE6MDF9kZXN0aW5hdGlvbpSMSWRvYy9kaWZmcy9ieXphbnRpdW1fY29uc3RhbnRpbm9wbGUvdm0vaW5zdHJ1Y3Rpb25zL2JpdHdpc2UvaW5kZXgucGlja2xlNjSUjA1fY29uZmlnX2ZpbGVzlF2UjBFsaW5lX2xlbmd0aF9saW1pdJRNECeMCXRhYl93aWR0aJRLCIwQc3ludGF4X2hpZ2hsaWdodJSMBGxvbmeUjAxzbWFydF9xdW90ZXOUiYwTc21hcnRxdW90ZXNfbG9jYWxlc5ROjB1jaGFyYWN0ZXJfbGV2ZWxfaW5saW5lX21hcmt1cJSJjAZ3cml0ZXKUjAN4bWyUjBljb21wYXJlX3NlY3Rpb25zX2J5X25hbWVzlImMDGR1bXBfcnN0ZGlmZpROjAVfYm90aJR9lChoOE6MCWdlbmVyYXRvcpROjAlkYXRlc3RhbXCUTowLc291cmNlX2xpbmuUTowKc291cmNlX3VybJROjA10b2NfYmFja2xpbmtzlGqtAgAAjBJmb290bm90ZV9iYWNrbGlua3OUSwGMDXNlY3RudW1feGZvcm2USwGMDmRvY3RpdGxlX3hmb3JtlEsBjA1kb2NpbmZvX3hmb3JtlEsBjBJzZWN0c3VidGl0bGVfeGZvcm2USwCMDnN0cmlwX2NvbW1lbnRzlE6MDmlucHV0X2VuY29kaW5nlE6MHGlucHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjAZzdHJpY3SUjA1sYW5ndWFnZV9jb2RllIwCZW6UjA5wZXBfcmVmZXJlbmNlc5ROjAxwZXBfYmFzZV91cmyUjB9odHRwOi8vd3d3LnB5dGhvbi5vcmcvZGV2L3BlcHMvlIwVcGVwX2ZpbGVfdXJsX3RlbXBsYXRllIwIcGVwLSUwNGSUjA5yZmNfcmVmZXJlbmNlc5ROjAxyZmNfYmFzZV91cmyUjBtodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC+UjB10cmltX2Zvb3Rub3RlX3JlZmVyZW5jZV9zcGFjZZROjBZmaWxlX2luc2VydGlvbl9lbmFibGVklEsBjAtyYXdfZW5hYmxlZJRLAYwOYXV0b19pZF9wcmVmaXiUjAJpZJSMCWlkX3ByZWZpeJRoBowbc3RyaXBfZWxlbWVudHNfd2l0aF9jbGFzc2VzlE6MDXN0cmlwX2NsYXNzZXOUTnWMBGJvdGiUfZSMCl9vcHRpb25zVG+UjAVfYm90aJSMC19vbGRfc291cmNllIwcLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaZSMC19uZXdfc291cmNllIwJZG9jL2RpZmZzlGqmEAAAaqcQAAB1YowIcmVwb3J0ZXKUTowQaW5kaXJlY3RfdGFyZ2V0c5RdlIwRc3Vic3RpdHV0aW9uX2RlZnOUfZSMEnN1YnN0aXR1dGlvbl9uYW1lc5R9lIwIcmVmbmFtZXOUfZSMBnJlZmlkc5R9lIwHbmFtZWlkc5R9lIwJbmFtZXR5cGVzlH2UaBB9lIwNZm9vdG5vdGVfcmVmc5R9lIwNY2l0YXRpb25fcmVmc5R9lIwNYXV0b2Zvb3Rub3Rlc5RdlIwRYXV0b2Zvb3Rub3RlX3JlZnOUXZSMEHN5bWJvbF9mb290bm90ZXOUXZSMFHN5bWJvbF9mb290bm90ZV9yZWZzlF2UjAlmb290bm90ZXOUXZSMCWNpdGF0aW9uc5RdlIwSYXV0b2Zvb3Rub3RlX3N0YXJ0lEsBjBVzeW1ib2xfZm9vdG5vdGVfc3RhcnSUSwCMCmlkX2NvdW50ZXKUjAtjb2xsZWN0aW9uc5SMB0NvdW50ZXKUk5R9lIWUUpSMDnBhcnNlX21lc3NhZ2VzlF2UjBJ0cmFuc2Zvcm1fbWVzc2FnZXOUXZSMC3RyYW5zZm9ybWVylE6MC2luY2x1ZGVfbG9nlF2UjApkZWNvcmF0aW9ulE5oIWgDdWIu