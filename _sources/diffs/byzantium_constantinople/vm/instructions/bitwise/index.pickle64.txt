gASVqNkAAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UaACMB3NlY3Rpb26Uk5QpgZR9lChoBWgGaAddlChoAIwFdGl0bGWUk5QpgZR9lChoBYwxOm1vZDpgZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlYJRoB12UKGgAjAlyZWZlcmVuY2WUk5QpgZR9lChoBWgGaAddlGgAjAdsaXRlcmFslJOUKYGUfZQoaAVoEmgHXZRoAIwEVGV4dJSTlIwqZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNllIWUgZR9lChoBWgGjAZwYXJlbnSUaBuMCV9kb2N1bWVudJRoA4wGc291cmNllIwpLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaSA9PiBkb2MvZGlmZnOUjARsaW5llEsAdWJhjAphdHRyaWJ1dGVzlH2UKIwDaWRzlF2UjAdjbGFzc2VzlF2UKIwEeHJlZpSMAnB5lIwGcHktbW9klGWMBW5hbWVzlF2UjAhkdXBuYW1lc5RdlIwIYmFja3JlZnOUXZR1jAd0YWduYW1llGgZaCZOaChOaCRoFnViYWgpfZQoaCtdlGgtXZSMD2NoYW5nZS1yZXBsYWNlZJRhaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMMW1vZHVsZS1ldGhlcmV1bS5ieXphbnRpdW0udm0uaW5zdHJ1Y3Rpb25zLmJpdHdpc2WUjAhyZWZ0aXRsZZSMKmV0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZZR1aDhoFGgmaCdoKEsAaCRoEGglaAN1YmgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFjDY6bW9kOmBldGhlcmV1bS5jb25zdGFudGlub3BsZS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZWCUaAddlGgfjC9ldGhlcmV1bS5jb25zdGFudGlub3BsZS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZZSFlIGUfZQoaAVoBmgkaEhoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKIwEeHJlZpSMAnB5lIwGcHktbW9klGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkaEV1YmFoKX2UKGgrXZRoLV2UjBJjaGFuZ2UtcmVwbGFjZW1lbnSUYWgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDZtb2R1bGUtZXRoZXJldW0uY29uc3RhbnRpbm9wbGUudm0uaW5zdHJ1Y3Rpb25zLmJpdHdpc2WUjAhyZWZ0aXRsZZSML2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNllHVoOGgUaCZoJ2goSwBoJGgQaCVoA3ViZWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhoDmgmjHIvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2J5emFudGl1bS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3SUaChLAmgkaAtoJWgDdWKMD3NwaGlueC5hZGRub2Rlc5SMBWluZGV4lJOUKYGUfZQoaAVoBmgHXZRoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAdlbnRyaWVzlF2UKIwEcGFpcpSMMm1vZHVsZTsgZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNllIwxbW9kdWxlLWV0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZZRoBk50lGF1aDhobWgmaGtoKEsFaCRoC2glaAN1YmgKKYGUfZQoaAVoBmgHXZQoaA8pgZR9lChoBYwzRXRoZXJldW0gVmlydHVhbCBNYWNoaW5lIChFVk0pIEJpdHdpc2UgSW5zdHJ1Y3Rpb25zlGgHXZRoH4wzRXRoZXJldW0gVmlydHVhbCBNYWNoaW5lIChFVk0pIEJpdHdpc2UgSW5zdHJ1Y3Rpb25zlIWUgZR9lChoBWgGaCRogWglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhoDmgmaGtoKEsHaCRofmglaAN1YmgAjAV0b3BpY5STlCmBlH2UKGgFaAZoB12UKGgPKYGUfZQoaAWMEVRh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BmgkaiUDAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJoyDL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9ieXphbnRpdW0vdm0vaW5zdHJ1Y3Rpb25zL2JpdHdpc2UvaW5kZXgucnN0OjM2OjxhdXRvc3VtbWFyeT6UaChLAWgkaiIDAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4au8CAABoJk5oKE5oJGrsAgAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGrqAgAAaCZoJ2goSwBoJGrnAgAAaCVoA3ViausCAAApgZR9lChoBWgGaAddlChq8AIAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxJOm9iajpgYml0d2lzZV9vciA8ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfb3I+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVqSAMAAGgHXZRoH4wKYml0d2lzZV9vcpSFlIGUfZQoaAVoBmgkak0DAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UKGgvjAJweZSMBnB5LW9iapRlaDJdlGg0XZRoNl2UdWg4aBloJk5oKE5oJGpKAwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDVldGhlcmV1bS5ieXphbnRpdW0udm0uaW5zdHJ1Y3Rpb25zLmJpdHdpc2UuYml0d2lzZV9vcpSMCHJlZnRpdGxllIw1ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfb3KUdWg4aBRoJk5oKE5oJGpGAwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGisaCaMgy9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vYnl6YW50aXVtL3ZtL2luc3RydWN0aW9ucy9iaXR3aXNlL2luZGV4LnJzdDozNjo8YXV0b3N1bW1hcnk+lGgoSwFoJGpDAwAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGrvAgAAaCZOaChOaCRqQAMAAHViavACAAApgZR9lChoBWgGaAddlGitKYGUfZQoaAWMQ0JpdHdpc2UgT1Igb3BlcmF0aW9uIG9mIHRoZSB0b3AgMiBlbGVtZW50cyBvZiB0aGUgc3RhY2suIFB1c2hlcyB0aGWUaAddlGgfjENCaXR3aXNlIE9SIG9wZXJhdGlvbiBvZiB0aGUgdG9wIDIgZWxlbWVudHMgb2YgdGhlIHN0YWNrLiBQdXNoZXMgdGhllIWUgZR9lChoBWgGaCRqdwMAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIMvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2J5emFudGl1bS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqdAMAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkakADAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4auoCAABoJmgnaChLAGgkaucCAABoJWgDdWJq6wIAACmBlH2UKGgFaAZoB12UKGrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEs6b2JqOmBiaXR3aXNlX3hvciA8ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2VfeG9yPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFapoDAABoB12UaB+MC2JpdHdpc2VfeG9ylIWUgZR9lChoBWgGaCRqnwMAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkapwDAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMNmV0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZS5iaXR3aXNlX3hvcpSMCHJlZnRpdGxllIw2ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2VfeG9ylHVoOGgUaCZOaChOaCRqmAMAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIMvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2J5emFudGl1bS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqlQMAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkapIDAAB1YmrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjERCaXR3aXNlIFhPUiBvcGVyYXRpb24gb2YgdGhlIHRvcCAyIGVsZW1lbnRzIG9mIHRoZSBzdGFjay4gUHVzaGVzIHRoZZRoB12UaB+MREJpdHdpc2UgWE9SIG9wZXJhdGlvbiBvZiB0aGUgdG9wIDIgZWxlbWVudHMgb2YgdGhlIHN0YWNrLiBQdXNoZXMgdGhllIWUgZR9lChoBWgGaCRqyQMAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIMvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2J5emFudGl1bS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqxgMAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkapIDAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4auoCAABoJmgnaChLAGgkaucCAABoJWgDdWJq6wIAACmBlH2UKGgFaAZoB12UKGrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEs6b2JqOmBiaXR3aXNlX25vdCA8ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfbm90PmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFauwDAABoB12UaB+MC2JpdHdpc2Vfbm90lIWUgZR9lChoBWgGaCRq8QMAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkau4DAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMNmV0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZS5iaXR3aXNlX25vdJSMCHJlZnRpdGxllIw2ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfbm90lHVoOGgUaCZOaChOaCRq6gMAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIMvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2J5emFudGl1bS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1dG9zdW1tYXJ5PpRoKEsBaCRq5wMAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkauQDAAB1YmrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEFCaXR3aXNlIE5PVCBvcGVyYXRpb24gb2YgdGhlIHRvcCBlbGVtZW50IG9mIHRoZSBzdGFjay4gUHVzaGVzIHRoZZRoB12UaB+MQUJpdHdpc2UgTk9UIG9wZXJhdGlvbiBvZiB0aGUgdG9wIGVsZW1lbnQgb2YgdGhlIHN0YWNrLiBQdXNoZXMgdGhllIWUgZR9lChoBWgGaCRqGwQAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIMvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2J5emFudGl1bS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqGAQAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkauQDAAB1YmVoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4auoCAABoJmgnaChLAGgkaucCAABoJWgDdWJq6wIAACmBlH2UKGgFaAZoB12UKGrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEU6b2JqOmBnZXRfYnl0ZSA8ZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmdldF9ieXRlPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFaj4EAABoB12UaB+MCGdldF9ieXRllIWUgZR9lChoBWgGaCRqQwQAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaC+MAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkakAEAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMM2V0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZS5nZXRfYnl0ZZSMCHJlZnRpdGxllIwzZXRoZXJldW0uYnl6YW50aXVtLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmdldF9ieXRllHVoOGgUaCZOaChOaCRqPAQAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIMvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2J5emFudGl1bS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6MzY6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqOQQAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkajYEAAB1YmrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjENGb3IgYSB3b3JkIChkZWZpbmVkIGJ5IG5leHQgdG9wIGVsZW1lbnQgb2YgdGhlIHN0YWNrKSwgcmV0cmlldmUgdGhllGgHXZRoH4xDRm9yIGEgd29yZCAoZGVmaW5lZCBieSBuZXh0IHRvcCBlbGVtZW50IG9mIHRoZSBzdGFjayksIHJldHJpZXZlIHRoZZSFlIGUfZQoaAVoBmgkam0EAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJmq9AgAAaChLAWgkamoEAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4au8CAABoJk5oKE5oJGo2BAAAdWJlaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGrqAgAAaCZoJ2goSwBoJGrnAgAAaCVoA3ViausCAAApgZR9lChoBWgGaAddlChq8AIAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxQOm9iajpgYml0d2lzZV9zaGwgPGV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfc2hsPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFao8EAABoB12UaB+MC2JpdHdpc2Vfc2hslIWUgZR9lChoBWgGaCRqlAQAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaFOMAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkapEEAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMO2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfc2hslIwIcmVmdGl0bGWUjDtldGhlcmV1bS5jb25zdGFudGlub3BsZS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZS5iaXR3aXNlX3NobJR1aDhoFGgmTmgoTmgkao0EAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJoyIL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6Mzk6PGF1dG9zdW1tYXJ5PpRoKEsBaCRqigQAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkaocEAAB1YmrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEZMb2dpY2FsIHNoaWZ0IGxlZnQgKFNITCkgb3BlcmF0aW9uIG9mIHRoZSB0b3AgMiBlbGVtZW50cyBvZiB0aGUgc3RhY2sulGgHXZRoH4xGTG9naWNhbCBzaGlmdCBsZWZ0IChTSEwpIG9wZXJhdGlvbiBvZiB0aGUgdG9wIDIgZWxlbWVudHMgb2YgdGhlIHN0YWNrLpSFlIGUfZQoaAVoBmgkar4EAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJoyIL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6Mzk6PGF1dG9zdW1tYXJ5PpRoKEsBaCRquwQAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkaocEAAB1YmVoKX2UKGgrXZRoLV2UjAxjaGFuZ2UtYWRkZWSUYWgyXZRoNF2UaDZdlHVoOGrqAgAAaCZoJ2goSwBoJGrnAgAAaCVoA3ViausCAAApgZR9lChoBWgGaAddlChq8AIAACmBlH2UKGgFaAZoB12UaK0pgZR9lChoBYxQOm9iajpgYml0d2lzZV9zaHIgPGV0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfc2hyPmCUaAddlGgVKYGUfZQoaAVoBmgHXZRoGimBlH2UKGgFauIEAABoB12UaB+MC2JpdHdpc2Vfc2hylIWUgZR9lChoBWgGaCRq5wQAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZQoaFOMAnB5lIwGcHktb2JqlGVoMl2UaDRdlGg2XZR1aDhoGWgmTmgoTmgkauQEAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMO2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfc2hylIwIcmVmdGl0bGWUjDtldGhlcmV1bS5jb25zdGFudGlub3BsZS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZS5iaXR3aXNlX3NocpR1aDhoFGgmTmgoTmgkauAEAAB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UdWg4aKxoJoyIL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS9pbmRleC5yc3Q6Mzk6PGF1dG9zdW1tYXJ5PpRoKEsBaCRq3QQAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhq7wIAAGgmTmgoTmgkatoEAAB1YmrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjEdMb2dpY2FsIHNoaWZ0IHJpZ2h0IChTSFIpIG9wZXJhdGlvbiBvZiB0aGUgdG9wIDIgZWxlbWVudHMgb2YgdGhlIHN0YWNrLpRoB12UaB+MR0xvZ2ljYWwgc2hpZnQgcmlnaHQgKFNIUikgb3BlcmF0aW9uIG9mIHRoZSB0b3AgMiBlbGVtZW50cyBvZiB0aGUgc3RhY2sulIWUgZR9lChoBWgGaCRqEQUAAGglaANoJmgnaChLAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIgvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3ZtL2luc3RydWN0aW9ucy9iaXR3aXNlL2luZGV4LnJzdDozOTo8YXV0b3N1bW1hcnk+lGgoSwFoJGoOBQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGrvAgAAaCZOaChOaCRq2gQAAHViZWgpfZQoaCtdlGgtXZSMDGNoYW5nZS1hZGRlZJRhaDJdlGg0XZRoNl2UdWg4auoCAABoJmgnaChLAGgkaucCAABoJWgDdWJq6wIAACmBlH2UKGgFaAZoB12UKGrwAgAAKYGUfZQoaAVoBmgHXZRorSmBlH2UKGgFjFA6b2JqOmBiaXR3aXNlX3NhciA8ZXRoZXJldW0uY29uc3RhbnRpbm9wbGUudm0uaW5zdHJ1Y3Rpb25zLmJpdHdpc2UuYml0d2lzZV9zYXI+YJRoB12UaBUpgZR9lChoBWgGaAddlGgaKYGUfZQoaAVqNQUAAGgHXZRoH4wLYml0d2lzZV9zYXKUhZSBlH2UKGgFaAZoJGo6BQAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1dlChoU4wCcHmUjAZweS1vYmqUZWgyXZRoNF2UaDZdlHVoOGgZaCZOaChOaCRqNwUAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZSMCGludGVybmFslIiMBXJlZmlklIw7ZXRoZXJldW0uY29uc3RhbnRpbm9wbGUudm0uaW5zdHJ1Y3Rpb25zLmJpdHdpc2UuYml0d2lzZV9zYXKUjAhyZWZ0aXRsZZSMO2V0aGVyZXVtLmNvbnN0YW50aW5vcGxlLnZtLmluc3RydWN0aW9ucy5iaXR3aXNlLmJpdHdpc2Vfc2FylHVoOGgUaCZOaChOaCRqMwUAAHViYWgpfZQoaCtdlGgtXZRoMl2UaDRdlGg2XZR1aDhorGgmjIgvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2NvbnN0YW50aW5vcGxlL3ZtL2luc3RydWN0aW9ucy9iaXR3aXNlL2luZGV4LnJzdDozOTo8YXV0b3N1bW1hcnk+lGgoSwFoJGowBQAAdWJhaCl9lChoK12UaC1dlGgyXZRoNF2UaDZdlHVoOGrvAgAAaCZOaChOaCRqLQUA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bW92ZSB0aGUgZXh0cmEgYnl0ZXMgaW4gdGhlIHJpZ2h0CiAgICAgICAgd29yZCA9IHdvcmQgPj4gKGV4dHJhX2J5dGVzX3RvX3JpZ2h0ICogOCkKICAgICAgICAjIFJlbW92ZSB0aGUgZXh0cmEgYnl0ZXMgaW4gdGhlIGxlZnQKICAgICAgICB3b3JkID0gd29yZCAmIDB4RkYKICAgICAgICByZXN1bHQgPSBVMjU2KHdvcmQpCgogICAgcHVzaChldm0uc3RhY2ssIHJlc3VsdCkKCiAgICBldm0ucGMgKz0gMQqUaAddlGgfWGQCAABkZWYgZ2V0X2J5dGUoZXZtOiBFdm0pIC0+IE5vbmU6CiAgICBldm0uZ2FzX2xlZnQgPSBzdWJ0cmFjdF9nYXMoZXZtLmdhc19sZWZ0LCBHQVNfVkVSWV9MT1cpCiAgICAjIDAtaW5kZXhlZCBmcm9tIGxlZnQgKG1vc3Qgc2lnbmlmaWNhbnQpIHRvIHJpZ2h0IChsZWFzdCBzaWduaWZpY2FudCkKICAgICMgaW4gIkJpZyBFbmRpYW4iIHJlcHJlc2VudGF0aW9uLgogICAgYnl0ZV9pbmRleCA9IHBvcChldm0uc3RhY2spCiAgICB3b3JkID0gcG9wKGV2bS5zdGFjaykKCiAgICBpZiBieXRlX2luZGV4ID49IDMyOgogICAgICAgIHJlc3VsdCA9IFUyNTYoMCkKICAgIGVsc2U6CiAgICAgICAgZXh0cmFfYnl0ZXNfdG9fcmlnaHQgPSAzMSAtIGJ5dGVfaW5kZXgKICAgICAgICAjIFJlbW92ZSB0aGUgZXh0cmEgYnl0ZXMgaW4gdGhlIHJpZ2h0CiAgICAgICAgd29yZCA9IHdvcmQgPj4gKGV4dHJhX2J5dGVzX3RvX3JpZ2h0ICogOCkKICAgICAgICAjIFJlbW92ZSB0aGUgZXh0cmEgYnl0ZXMgaW4gdGhlIGxlZnQKICAgICAgICB3b3JkID0gd29yZCAmIDB4RkYKICAgICAgICByZXN1bHQgPSBVMjU2KHdvcmQpCgogICAgcHVzaChldm0uc3RhY2ssIHJlc3VsdCkKCiAgICBldm0ucGMgKz0gMQqUhZSBlH2UKGgFaAZoJGp/DgAAaCVoA2gmaCdoKEsAdWJhaCl9lChoK12UaC1d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cG9wKGV2bS5zdGFjaykKICAgIHZhbHVlID0gcG9wKGV2bS5zdGFjaykKCiAgICBldm0ucGMgKz0gMQogICAgc2hpZnRlZF92YWx1ZSA9IDAKICAgIGlmIHNoaWZ0IDwgMjU2OgogICAgICAgIHNoaWZ0ZWRfdmFsdWUgPSAodmFsdWUgPDwgc2hpZnQpICUgVTI1Nl9DRUlMX1ZBTFVFCgogICAgcHVzaChldm0uc3RhY2ssIFUyNTYoc2hpZnRlZF92YWx1ZSkpCpRoB12UaB9YNQEAAGRlZiBiaXR3aXNlX3NobChldm06IEV2bSkgLT4gTm9uZToKICAgIGV2bS5nYXNfbGVmdCA9IHN1YnRyYWN0X2dhcyhldm0uZ2FzX2xlZnQsIEdBU19WRVJZX0xPVykKICAgIHNoaWZ0ID0gcG9wKGV2bS5zdGFjaykKICAgIHZhbHVlID0gcG9wKGV2bS5zdGFjaykKCiAgICBldm0ucGMgKz0gMQogICAgc2hpZnRlZF92YWx1ZSA9IDAKICAgIGlmIHNoaWZ0IDwgMjU2OgogICAgICAgIHNoaWZ0ZWRfdmFsdWUgPSAodmFsdWUgPDwgc2hpZnQpICUgVTI1Nl9DRUlMX1ZBTFVFCgogICAgcHVzaChldm0uc3RhY2ssIFUyNTYoc2hpZnRlZF92YWx1ZSkpCpSFlIGUfZQoaAVoBmgkam0PAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUjGgvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS5weZSMCXhtbDpzcGFjZZRqmwUAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lIwLbGluZW5vc3RhcnSUSwFzjAdsaW5lbm9zlIl1aDhqgAcAAGgmaq4OAABoKEupaCRqnQ4AAHViZWgpfZQoaCtdlGr4AQAAYWgtXZSMDGNoYW5nZS1hZGRlZJRhaDJdlIwLYml0d2lzZV9zaGyUYWg0XZRoNl2UdWg4aAloJmquDgAAaChLm2gk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cGMgKz0gMQogICAgaWYgc2hpZnQgPCAyNTY6CiAgICAgICAgc2hpZnRlZF92YWx1ZSA9IHNpZ25lZF92YWx1ZSA+PiBzaGlmdAogICAgZWxpZiBzaWduZWRfdmFsdWUgPj0gMDoKICAgICAgICBzaGlmdGVkX3ZhbHVlID0gMAogICAgZWxzZToKICAgICAgICBzaGlmdGVkX3ZhbHVlID0gVTI1Ni5NQVhfVkFMVUUKCiAgICBwdXNoKGV2bS5zdGFjaywgVTI1Ni5mcm9tX3NpZ25lZChzaGlmdGVkX3ZhbHVlKSkKlGgHXZRoH1irAQAAZGVmIGJpdHdpc2Vfc2FyKGV2bTogRXZtKSAtPiBOb25lOgogICAgZXZtLmdhc19sZWZ0ID0gc3VidHJhY3RfZ2FzKGV2bS5nYXNfbGVmdCwgR0FTX1ZFUllfTE9XKQogICAgc2hpZnQgPSBwb3AoZXZtLnN0YWNrKQogICAgdmFsdWUgPSBwb3AoZXZtLnN0YWNrKQoKICAgIHNpZ25lZF92YWx1ZSA9IHZhbHVlLnRvX3NpZ25lZCgpCgogICAgZXZtLnBjICs9IDEKICAgIGlmIHNoaWZ0IDwgMjU2OgogICAgICAgIHNoaWZ0ZWRfdmFsdWUgPSBzaWduZWRfdmFsdWUgPj4gc2hpZnQKICAgIGVsaWYgc2lnbmVkX3ZhbHVlID49IDA6CiAgICAgICAgc2hpZnRlZF92YWx1ZSA9IDAKICAgIGVsc2U6CiAgICAgICAgc2hpZnRlZF92YWx1ZSA9IFUyNTYuTUFYX1ZBTFVFCgogICAgcHVzaChldm0uc3RhY2ssIFUyNTYuZnJvbV9zaWduZWQoc2hpZnRlZF92YWx1ZSkpCpSFlIGUfZQoaAVoBmgkakARAABoJWgDaCZoJ2goSwB1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUjGgvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9jb25zdGFudGlub3BsZS92bS9pbnN0cnVjdGlvbnMvYml0d2lzZS5weZSMCXhtbDpzcGFjZZRqmwUAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGqDDwAASwFzjAdsaW5lbm9zlIl1aDhqgAcAAGgmaq4OAABoKEvPaCRqdhAAAHViZWgpfZQoaCtdlGo+AgAAYWgtXZSMDGNoYW5nZS1hZGRlZJRhaDJdlIwLYml0d2lzZV9zYXKUYWg0XZRoNl2UdWg4aAloJmquDgAAaChLwWgkaqoFAABoJWgDdWJlaCl9lChoK12Uai8BAABhaC1dlGgyXZSMDm1vZHVsZSBkZXRhaWxzlGFoNF2UaDZdlHVoOGgJaCZoa2goSyZoJGh+aCVoA3ViZWgpfZQoaCtdlIwxZXRoZXJldW0tdmlydHVhbC1tYWNoaW5lLWV2bS1iaXR3aXNlLWluc3RydWN0aW9uc5RhaC1dlGgyXZSMM2V0aGVyZXVtIHZpcnR1YWwgbWFjaGluZSAoZXZtKSBiaXR3aXNlIGluc3RydWN0aW9uc5RhaDRdlGg2XZR1aDhoCWgmaGtoKEsHaCRoC2glaAN1YmVoKX2UKGgrXZQoaHyMKmV0aGVyZXVtLWJ5emFudGl1bS12bS1pbnN0cnVjdGlvbnMtYml0d2lzZZRlaC1dlGgyXZSMKmV0aGVyZXVtLmJ5emFudGl1bS52bS5pbnN0cnVjdGlvbnMuYml0d2lzZZRhaDRdlGg2XZR1aDhoCWgmaGtoKEsCaCRoA2glaAN1YmFoKX2UKGgrXZRoLV2UaDJdlGg0XZRoNl2UjAZzb3VyY2WUaCd1aDhoAYwOY3VycmVudF9zb3VyY2WUaCeMDGN1cnJlbnRfbGluZZRLAIwIc2V0dGluZ3OUjBFkb2N1dGlscy5mcm9udGVuZJSMBlZhbHVlc5STlCmBlH2UKIwMcmVwb3J0X2xldmVslEsCjApoYWx0X2xldmVslEsEjBFleGl0X3N0YXR1c19sZXZlbJRLBYwFZGVidWeUTowOd2FybmluZ19zdHJlYW2UTowJdHJhY2ViYWNrlE6MD291dHB1dF9lbmNvZGluZ5SMBXV0Zi04lIwdb3V0cHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjBF4bWxjaGFycmVmcmVwbGFjZZSMDmVycm9yX2VuY29kaW5nlIwFdXRmLTiUjBxlcnJvcl9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwQYmFja3NsYXNocmVwbGFjZZSME3JlY29yZF9kZXBlbmRlbmNpZXOUjA5kb2N1dGlscy51dGlsc5SMDkRlcGVuZGVuY3lMaXN0lJOUKYGUfZQojARsaXN0lF2UjARmaWxllE51YowGY29uZmlnlE6MDWR1bXBfc2V0dGluZ3OUTowOZHVtcF9pbnRlcm5hbHOUTowPZHVtcF90cmFuc2Zvcm1zlE6MD2R1bXBfcHNldWRvX3htbJROjBBleHBvc2VfaW50ZXJuYWxzlE6MDnN0cmljdF92aXNpdG9ylE6MD19kaXNhYmxlX2NvbmZpZ5ROjAdfc291cmNllE6MDF9kZXN0aW5hdGlvbpSMSWRvYy9kaWZmcy9ieXphbnRpdW1fY29uc3RhbnRpbm9wbGUvdm0vaW5zdHJ1Y3Rpb25zL2JpdHdpc2UvaW5kZXgucGlja2xlNjSUjA1fY29uZmlnX2ZpbGVzlF2UjBFsaW5lX2xlbmd0aF9saW1pdJRNECeMCXRhYl93aWR0aJRLCIwQc3ludGF4X2hpZ2hsaWdodJSMBGxvbmeUjAxzbWFydF9xdW90ZXOUiYwTc21hcnRxdW90ZXNfbG9jYWxlc5ROjB1jaGFyYWN0ZXJfbGV2ZWxfaW5saW5lX21hcmt1cJSJjAZ3cml0ZXKUjAN4bWyUjBljb21wYXJlX3NlY3Rpb25zX2J5X25hbWVzlImMDGR1bXBfcnN0ZGlmZpROjAVfYm90aJR9lChoDk6MCWdlbmVyYXRvcpROjAlkYXRlc3RhbXCUTowLc291cmNlX2xpbmuUTowKc291cmNlX3VybJROjA10b2NfYmFja2xpbmtzlGrvAgAAjBJmb290bm90ZV9iYWNrbGlua3OUSwGMDXNlY3RudW1feGZvcm2USwGMDmRvY3RpdGxlX3hmb3JtlEsBjA1kb2NpbmZvX3hmb3JtlEsBjBJzZWN0c3VidGl0bGVfeGZvcm2USwCMDnN0cmlwX2NvbW1lbnRzlE6MDmlucHV0X2VuY29kaW5nlE6MHGlucHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjAZzdHJpY3SUjA1sYW5ndWFnZV9jb2RllIwCZW6UjA5wZXBfcmVmZXJlbmNlc5ROjAxwZXBfYmFzZV91cmyUjB9odHRwOi8vd3d3LnB5dGhvbi5vcmcvZGV2L3BlcHMvlIwVcGVwX2ZpbGVfdXJsX3RlbXBsYXRllIwIcGVwLSUwNGSUjA5yZmNfcmVmZXJlbmNlc5ROjAxyZmNfYmFzZV91cmyUjBtodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC+UjB10cmltX2Zvb3Rub3RlX3JlZmVyZW5jZV9zcGFjZZROjBZmaWxlX2luc2VydGlvbl9lbmFibGVklEsBjAtyYXdfZW5hYmxlZJRLAYwOYXV0b19pZF9wcmVmaXiUjAJpZJSMCWlkX3ByZWZpeJRoBowbc3RyaXBfZWxlbWVudHNfd2l0aF9jbGFzc2VzlE6MDXN0cmlwX2NsYXNzZXOUTnWMBGJvdGiUfZSMCl9vcHRpb25zVG+UjAVfYm90aJSMC19vbGRfc291cmNllIwcLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaZSMC19uZXdfc291cmNllIwJZG9jL2RpZmZzlGrEEQAAasURAAB1YowIcmVwb3J0ZXKUTowQaW5kaXJlY3RfdGFyZ2V0c5RdlIwRc3Vic3RpdHV0aW9uX2RlZnOUfZSMEnN1YnN0aXR1dGlvbl9uYW1lc5R9lIwIcmVmbmFtZXOUfZSMBnJlZmlkc5R9lIwHbmFtZWlkc5R9lIwJbmFtZXR5cGVzlH2UaCt9lIwNZm9vdG5vdGVfcmVmc5R9lIwNY2l0YXRpb25fcmVmc5R9lIwNYXV0b2Zvb3Rub3Rlc5RdlIwRYXV0b2Zvb3Rub3RlX3JlZnOUXZSMEHN5bWJvbF9mb290bm90ZXOUXZSMFHN5bWJvbF9mb290bm90ZV9yZWZzlF2UjAlmb290bm90ZXOUXZSMCWNpdGF0aW9uc5RdlIwSYXV0b2Zvb3Rub3RlX3N0YXJ0lEsBjBVzeW1ib2xfZm9vdG5vdGVfc3RhcnSUSwCMCmlkX2NvdW50ZXKUjAtjb2xsZWN0aW9uc5SMB0NvdW50ZXKUk5R9lIWUUpSMDnBhcnNlX21lc3NhZ2VzlF2UjBJ0cmFuc2Zvcm1fbWVzc2FnZXOUXZSMC3RyYW5zZm9ybWVylE6MC2luY2x1ZGVfbG9nlF2UjApkZWNvcmF0aW9ulE5oJWgDdWIu